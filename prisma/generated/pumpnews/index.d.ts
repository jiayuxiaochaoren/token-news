
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tokens
 * 
 */
export type tokens = $Result.DefaultSelection<Prisma.$tokensPayload>
/**
 * Model privy_user
 * 
 */
export type privy_user = $Result.DefaultSelection<Prisma.$privy_userPayload>
/**
 * Model ai_analyze
 * 
 */
export type ai_analyze = $Result.DefaultSelection<Prisma.$ai_analyzePayload>
/**
 * Model ruler_tweets
 * 
 */
export type ruler_tweets = $Result.DefaultSelection<Prisma.$ruler_tweetsPayload>
/**
 * Model token_interact
 * 
 */
export type token_interact = $Result.DefaultSelection<Prisma.$token_interactPayload>
/**
 * Model pro_logs
 * 
 */
export type pro_logs = $Result.DefaultSelection<Prisma.$pro_logsPayload>
/**
 * Model tweets
 * 
 */
export type tweets = $Result.DefaultSelection<Prisma.$tweetsPayload>
/**
 * Model filter_rulers
 * 
 */
export type filter_rulers = $Result.DefaultSelection<Prisma.$filter_rulersPayload>
/**
 * Model tweet_latest_id
 * 
 */
export type tweet_latest_id = $Result.DefaultSelection<Prisma.$tweet_latest_idPayload>
/**
 * Model reference_tokens
 * 
 */
export type reference_tokens = $Result.DefaultSelection<Prisma.$reference_tokensPayload>
/**
 * Model invite_code
 * 
 */
export type invite_code = $Result.DefaultSelection<Prisma.$invite_codePayload>
/**
 * Model pro_config
 * 
 */
export type pro_config = $Result.DefaultSelection<Prisma.$pro_configPayload>
/**
 * Model user_service_call_logs
 * 
 */
export type user_service_call_logs = $Result.DefaultSelection<Prisma.$user_service_call_logsPayload>
/**
 * Model invite_code_bind_logs
 * 
 */
export type invite_code_bind_logs = $Result.DefaultSelection<Prisma.$invite_code_bind_logsPayload>
/**
 * Model watchlist
 * 
 */
export type watchlist = $Result.DefaultSelection<Prisma.$watchlistPayload>
/**
 * Model click_logs
 * 
 */
export type click_logs = $Result.DefaultSelection<Prisma.$click_logsPayload>
/**
 * Model smart_wallets
 * 
 */
export type smart_wallets = $Result.DefaultSelection<Prisma.$smart_walletsPayload>
/**
 * Model community
 * 
 */
export type community = $Result.DefaultSelection<Prisma.$communityPayload>
/**
 * Model community_referral
 * 
 */
export type community_referral = $Result.DefaultSelection<Prisma.$community_referralPayload>
/**
 * Model community_referral_payed_logs
 * 
 */
export type community_referral_payed_logs = $Result.DefaultSelection<Prisma.$community_referral_payed_logsPayload>
/**
 * Model community_referral_revenue_logs
 * 
 */
export type community_referral_revenue_logs = $Result.DefaultSelection<Prisma.$community_referral_revenue_logsPayload>
/**
 * Model community_revenue
 * 
 */
export type community_revenue = $Result.DefaultSelection<Prisma.$community_revenuePayload>
/**
 * Model rag_tokens
 * 
 */
export type rag_tokens = $Result.DefaultSelection<Prisma.$rag_tokensPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tokens
 * const tokens = await prisma.tokens.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tokens
   * const tokens = await prisma.tokens.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.tokens`: Exposes CRUD operations for the **tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tokens
    * const tokens = await prisma.tokens.findMany()
    * ```
    */
  get tokens(): Prisma.tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.privy_user`: Exposes CRUD operations for the **privy_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Privy_users
    * const privy_users = await prisma.privy_user.findMany()
    * ```
    */
  get privy_user(): Prisma.privy_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ai_analyze`: Exposes CRUD operations for the **ai_analyze** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ai_analyzes
    * const ai_analyzes = await prisma.ai_analyze.findMany()
    * ```
    */
  get ai_analyze(): Prisma.ai_analyzeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ruler_tweets`: Exposes CRUD operations for the **ruler_tweets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ruler_tweets
    * const ruler_tweets = await prisma.ruler_tweets.findMany()
    * ```
    */
  get ruler_tweets(): Prisma.ruler_tweetsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.token_interact`: Exposes CRUD operations for the **token_interact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Token_interacts
    * const token_interacts = await prisma.token_interact.findMany()
    * ```
    */
  get token_interact(): Prisma.token_interactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pro_logs`: Exposes CRUD operations for the **pro_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pro_logs
    * const pro_logs = await prisma.pro_logs.findMany()
    * ```
    */
  get pro_logs(): Prisma.pro_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tweets`: Exposes CRUD operations for the **tweets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tweets
    * const tweets = await prisma.tweets.findMany()
    * ```
    */
  get tweets(): Prisma.tweetsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.filter_rulers`: Exposes CRUD operations for the **filter_rulers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Filter_rulers
    * const filter_rulers = await prisma.filter_rulers.findMany()
    * ```
    */
  get filter_rulers(): Prisma.filter_rulersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tweet_latest_id`: Exposes CRUD operations for the **tweet_latest_id** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tweet_latest_ids
    * const tweet_latest_ids = await prisma.tweet_latest_id.findMany()
    * ```
    */
  get tweet_latest_id(): Prisma.tweet_latest_idDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reference_tokens`: Exposes CRUD operations for the **reference_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reference_tokens
    * const reference_tokens = await prisma.reference_tokens.findMany()
    * ```
    */
  get reference_tokens(): Prisma.reference_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invite_code`: Exposes CRUD operations for the **invite_code** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invite_codes
    * const invite_codes = await prisma.invite_code.findMany()
    * ```
    */
  get invite_code(): Prisma.invite_codeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pro_config`: Exposes CRUD operations for the **pro_config** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pro_configs
    * const pro_configs = await prisma.pro_config.findMany()
    * ```
    */
  get pro_config(): Prisma.pro_configDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_service_call_logs`: Exposes CRUD operations for the **user_service_call_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_service_call_logs
    * const user_service_call_logs = await prisma.user_service_call_logs.findMany()
    * ```
    */
  get user_service_call_logs(): Prisma.user_service_call_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invite_code_bind_logs`: Exposes CRUD operations for the **invite_code_bind_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invite_code_bind_logs
    * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findMany()
    * ```
    */
  get invite_code_bind_logs(): Prisma.invite_code_bind_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.watchlist`: Exposes CRUD operations for the **watchlist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Watchlists
    * const watchlists = await prisma.watchlist.findMany()
    * ```
    */
  get watchlist(): Prisma.watchlistDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.click_logs`: Exposes CRUD operations for the **click_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Click_logs
    * const click_logs = await prisma.click_logs.findMany()
    * ```
    */
  get click_logs(): Prisma.click_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.smart_wallets`: Exposes CRUD operations for the **smart_wallets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Smart_wallets
    * const smart_wallets = await prisma.smart_wallets.findMany()
    * ```
    */
  get smart_wallets(): Prisma.smart_walletsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community`: Exposes CRUD operations for the **community** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communities
    * const communities = await prisma.community.findMany()
    * ```
    */
  get community(): Prisma.communityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community_referral`: Exposes CRUD operations for the **community_referral** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_referrals
    * const community_referrals = await prisma.community_referral.findMany()
    * ```
    */
  get community_referral(): Prisma.community_referralDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community_referral_payed_logs`: Exposes CRUD operations for the **community_referral_payed_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_referral_payed_logs
    * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findMany()
    * ```
    */
  get community_referral_payed_logs(): Prisma.community_referral_payed_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community_referral_revenue_logs`: Exposes CRUD operations for the **community_referral_revenue_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_referral_revenue_logs
    * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findMany()
    * ```
    */
  get community_referral_revenue_logs(): Prisma.community_referral_revenue_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community_revenue`: Exposes CRUD operations for the **community_revenue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_revenues
    * const community_revenues = await prisma.community_revenue.findMany()
    * ```
    */
  get community_revenue(): Prisma.community_revenueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rag_tokens`: Exposes CRUD operations for the **rag_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rag_tokens
    * const rag_tokens = await prisma.rag_tokens.findMany()
    * ```
    */
  get rag_tokens(): Prisma.rag_tokensDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.2.1
   * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tokens: 'tokens',
    privy_user: 'privy_user',
    ai_analyze: 'ai_analyze',
    ruler_tweets: 'ruler_tweets',
    token_interact: 'token_interact',
    pro_logs: 'pro_logs',
    tweets: 'tweets',
    filter_rulers: 'filter_rulers',
    tweet_latest_id: 'tweet_latest_id',
    reference_tokens: 'reference_tokens',
    invite_code: 'invite_code',
    pro_config: 'pro_config',
    user_service_call_logs: 'user_service_call_logs',
    invite_code_bind_logs: 'invite_code_bind_logs',
    watchlist: 'watchlist',
    click_logs: 'click_logs',
    smart_wallets: 'smart_wallets',
    community: 'community',
    community_referral: 'community_referral',
    community_referral_payed_logs: 'community_referral_payed_logs',
    community_referral_revenue_logs: 'community_referral_revenue_logs',
    community_revenue: 'community_revenue',
    rag_tokens: 'rag_tokens'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "tokens" | "privy_user" | "ai_analyze" | "ruler_tweets" | "token_interact" | "pro_logs" | "tweets" | "filter_rulers" | "tweet_latest_id" | "reference_tokens" | "invite_code" | "pro_config" | "user_service_call_logs" | "invite_code_bind_logs" | "watchlist" | "click_logs" | "smart_wallets" | "community" | "community_referral" | "community_referral_payed_logs" | "community_referral_revenue_logs" | "community_revenue" | "rag_tokens"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      tokens: {
        payload: Prisma.$tokensPayload<ExtArgs>
        fields: Prisma.tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>
          }
          findFirst: {
            args: Prisma.tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>
          }
          findMany: {
            args: Prisma.tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>[]
          }
          create: {
            args: Prisma.tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>
          }
          createMany: {
            args: Prisma.tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>[]
          }
          delete: {
            args: Prisma.tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>
          }
          update: {
            args: Prisma.tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>
          }
          deleteMany: {
            args: Prisma.tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>[]
          }
          upsert: {
            args: Prisma.tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tokensPayload>
          }
          aggregate: {
            args: Prisma.TokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTokens>
          }
          groupBy: {
            args: Prisma.tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<TokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.tokensCountArgs<ExtArgs>
            result: $Utils.Optional<TokensCountAggregateOutputType> | number
          }
        }
      }
      privy_user: {
        payload: Prisma.$privy_userPayload<ExtArgs>
        fields: Prisma.privy_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.privy_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.privy_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>
          }
          findFirst: {
            args: Prisma.privy_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.privy_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>
          }
          findMany: {
            args: Prisma.privy_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>[]
          }
          create: {
            args: Prisma.privy_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>
          }
          createMany: {
            args: Prisma.privy_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.privy_userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>[]
          }
          delete: {
            args: Prisma.privy_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>
          }
          update: {
            args: Prisma.privy_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>
          }
          deleteMany: {
            args: Prisma.privy_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.privy_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.privy_userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>[]
          }
          upsert: {
            args: Prisma.privy_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$privy_userPayload>
          }
          aggregate: {
            args: Prisma.Privy_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrivy_user>
          }
          groupBy: {
            args: Prisma.privy_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Privy_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.privy_userCountArgs<ExtArgs>
            result: $Utils.Optional<Privy_userCountAggregateOutputType> | number
          }
        }
      }
      ai_analyze: {
        payload: Prisma.$ai_analyzePayload<ExtArgs>
        fields: Prisma.ai_analyzeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ai_analyzeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ai_analyzeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>
          }
          findFirst: {
            args: Prisma.ai_analyzeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ai_analyzeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>
          }
          findMany: {
            args: Prisma.ai_analyzeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>[]
          }
          create: {
            args: Prisma.ai_analyzeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>
          }
          createMany: {
            args: Prisma.ai_analyzeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ai_analyzeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>[]
          }
          delete: {
            args: Prisma.ai_analyzeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>
          }
          update: {
            args: Prisma.ai_analyzeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>
          }
          deleteMany: {
            args: Prisma.ai_analyzeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ai_analyzeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ai_analyzeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>[]
          }
          upsert: {
            args: Prisma.ai_analyzeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_analyzePayload>
          }
          aggregate: {
            args: Prisma.Ai_analyzeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAi_analyze>
          }
          groupBy: {
            args: Prisma.ai_analyzeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ai_analyzeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ai_analyzeCountArgs<ExtArgs>
            result: $Utils.Optional<Ai_analyzeCountAggregateOutputType> | number
          }
        }
      }
      ruler_tweets: {
        payload: Prisma.$ruler_tweetsPayload<ExtArgs>
        fields: Prisma.ruler_tweetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ruler_tweetsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ruler_tweetsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>
          }
          findFirst: {
            args: Prisma.ruler_tweetsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ruler_tweetsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>
          }
          findMany: {
            args: Prisma.ruler_tweetsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>[]
          }
          create: {
            args: Prisma.ruler_tweetsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>
          }
          createMany: {
            args: Prisma.ruler_tweetsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ruler_tweetsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>[]
          }
          delete: {
            args: Prisma.ruler_tweetsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>
          }
          update: {
            args: Prisma.ruler_tweetsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>
          }
          deleteMany: {
            args: Prisma.ruler_tweetsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ruler_tweetsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ruler_tweetsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>[]
          }
          upsert: {
            args: Prisma.ruler_tweetsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ruler_tweetsPayload>
          }
          aggregate: {
            args: Prisma.Ruler_tweetsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRuler_tweets>
          }
          groupBy: {
            args: Prisma.ruler_tweetsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ruler_tweetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ruler_tweetsCountArgs<ExtArgs>
            result: $Utils.Optional<Ruler_tweetsCountAggregateOutputType> | number
          }
        }
      }
      token_interact: {
        payload: Prisma.$token_interactPayload<ExtArgs>
        fields: Prisma.token_interactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.token_interactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.token_interactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>
          }
          findFirst: {
            args: Prisma.token_interactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.token_interactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>
          }
          findMany: {
            args: Prisma.token_interactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>[]
          }
          create: {
            args: Prisma.token_interactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>
          }
          createMany: {
            args: Prisma.token_interactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.token_interactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>[]
          }
          delete: {
            args: Prisma.token_interactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>
          }
          update: {
            args: Prisma.token_interactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>
          }
          deleteMany: {
            args: Prisma.token_interactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.token_interactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.token_interactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>[]
          }
          upsert: {
            args: Prisma.token_interactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$token_interactPayload>
          }
          aggregate: {
            args: Prisma.Token_interactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateToken_interact>
          }
          groupBy: {
            args: Prisma.token_interactGroupByArgs<ExtArgs>
            result: $Utils.Optional<Token_interactGroupByOutputType>[]
          }
          count: {
            args: Prisma.token_interactCountArgs<ExtArgs>
            result: $Utils.Optional<Token_interactCountAggregateOutputType> | number
          }
        }
      }
      pro_logs: {
        payload: Prisma.$pro_logsPayload<ExtArgs>
        fields: Prisma.pro_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pro_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pro_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>
          }
          findFirst: {
            args: Prisma.pro_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pro_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>
          }
          findMany: {
            args: Prisma.pro_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>[]
          }
          create: {
            args: Prisma.pro_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>
          }
          createMany: {
            args: Prisma.pro_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pro_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>[]
          }
          delete: {
            args: Prisma.pro_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>
          }
          update: {
            args: Prisma.pro_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>
          }
          deleteMany: {
            args: Prisma.pro_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pro_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pro_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>[]
          }
          upsert: {
            args: Prisma.pro_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_logsPayload>
          }
          aggregate: {
            args: Prisma.Pro_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePro_logs>
          }
          groupBy: {
            args: Prisma.pro_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pro_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.pro_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Pro_logsCountAggregateOutputType> | number
          }
        }
      }
      tweets: {
        payload: Prisma.$tweetsPayload<ExtArgs>
        fields: Prisma.tweetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tweetsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tweetsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>
          }
          findFirst: {
            args: Prisma.tweetsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tweetsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>
          }
          findMany: {
            args: Prisma.tweetsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>[]
          }
          create: {
            args: Prisma.tweetsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>
          }
          createMany: {
            args: Prisma.tweetsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tweetsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>[]
          }
          delete: {
            args: Prisma.tweetsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>
          }
          update: {
            args: Prisma.tweetsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>
          }
          deleteMany: {
            args: Prisma.tweetsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tweetsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tweetsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>[]
          }
          upsert: {
            args: Prisma.tweetsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweetsPayload>
          }
          aggregate: {
            args: Prisma.TweetsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTweets>
          }
          groupBy: {
            args: Prisma.tweetsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TweetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.tweetsCountArgs<ExtArgs>
            result: $Utils.Optional<TweetsCountAggregateOutputType> | number
          }
        }
      }
      filter_rulers: {
        payload: Prisma.$filter_rulersPayload<ExtArgs>
        fields: Prisma.filter_rulersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.filter_rulersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.filter_rulersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>
          }
          findFirst: {
            args: Prisma.filter_rulersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.filter_rulersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>
          }
          findMany: {
            args: Prisma.filter_rulersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>[]
          }
          create: {
            args: Prisma.filter_rulersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>
          }
          createMany: {
            args: Prisma.filter_rulersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.filter_rulersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>[]
          }
          delete: {
            args: Prisma.filter_rulersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>
          }
          update: {
            args: Prisma.filter_rulersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>
          }
          deleteMany: {
            args: Prisma.filter_rulersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.filter_rulersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.filter_rulersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>[]
          }
          upsert: {
            args: Prisma.filter_rulersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filter_rulersPayload>
          }
          aggregate: {
            args: Prisma.Filter_rulersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFilter_rulers>
          }
          groupBy: {
            args: Prisma.filter_rulersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Filter_rulersGroupByOutputType>[]
          }
          count: {
            args: Prisma.filter_rulersCountArgs<ExtArgs>
            result: $Utils.Optional<Filter_rulersCountAggregateOutputType> | number
          }
        }
      }
      tweet_latest_id: {
        payload: Prisma.$tweet_latest_idPayload<ExtArgs>
        fields: Prisma.tweet_latest_idFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tweet_latest_idFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tweet_latest_idFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>
          }
          findFirst: {
            args: Prisma.tweet_latest_idFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tweet_latest_idFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>
          }
          findMany: {
            args: Prisma.tweet_latest_idFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>[]
          }
          create: {
            args: Prisma.tweet_latest_idCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>
          }
          createMany: {
            args: Prisma.tweet_latest_idCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tweet_latest_idCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>[]
          }
          delete: {
            args: Prisma.tweet_latest_idDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>
          }
          update: {
            args: Prisma.tweet_latest_idUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>
          }
          deleteMany: {
            args: Prisma.tweet_latest_idDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tweet_latest_idUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tweet_latest_idUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>[]
          }
          upsert: {
            args: Prisma.tweet_latest_idUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tweet_latest_idPayload>
          }
          aggregate: {
            args: Prisma.Tweet_latest_idAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTweet_latest_id>
          }
          groupBy: {
            args: Prisma.tweet_latest_idGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tweet_latest_idGroupByOutputType>[]
          }
          count: {
            args: Prisma.tweet_latest_idCountArgs<ExtArgs>
            result: $Utils.Optional<Tweet_latest_idCountAggregateOutputType> | number
          }
        }
      }
      reference_tokens: {
        payload: Prisma.$reference_tokensPayload<ExtArgs>
        fields: Prisma.reference_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reference_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reference_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>
          }
          findFirst: {
            args: Prisma.reference_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reference_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>
          }
          findMany: {
            args: Prisma.reference_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>[]
          }
          create: {
            args: Prisma.reference_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>
          }
          createMany: {
            args: Prisma.reference_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reference_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>[]
          }
          delete: {
            args: Prisma.reference_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>
          }
          update: {
            args: Prisma.reference_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>
          }
          deleteMany: {
            args: Prisma.reference_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reference_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reference_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>[]
          }
          upsert: {
            args: Prisma.reference_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reference_tokensPayload>
          }
          aggregate: {
            args: Prisma.Reference_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReference_tokens>
          }
          groupBy: {
            args: Prisma.reference_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Reference_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.reference_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Reference_tokensCountAggregateOutputType> | number
          }
        }
      }
      invite_code: {
        payload: Prisma.$invite_codePayload<ExtArgs>
        fields: Prisma.invite_codeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.invite_codeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.invite_codeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>
          }
          findFirst: {
            args: Prisma.invite_codeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.invite_codeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>
          }
          findMany: {
            args: Prisma.invite_codeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>[]
          }
          create: {
            args: Prisma.invite_codeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>
          }
          createMany: {
            args: Prisma.invite_codeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.invite_codeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>[]
          }
          delete: {
            args: Prisma.invite_codeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>
          }
          update: {
            args: Prisma.invite_codeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>
          }
          deleteMany: {
            args: Prisma.invite_codeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.invite_codeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.invite_codeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>[]
          }
          upsert: {
            args: Prisma.invite_codeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_codePayload>
          }
          aggregate: {
            args: Prisma.Invite_codeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvite_code>
          }
          groupBy: {
            args: Prisma.invite_codeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Invite_codeGroupByOutputType>[]
          }
          count: {
            args: Prisma.invite_codeCountArgs<ExtArgs>
            result: $Utils.Optional<Invite_codeCountAggregateOutputType> | number
          }
        }
      }
      pro_config: {
        payload: Prisma.$pro_configPayload<ExtArgs>
        fields: Prisma.pro_configFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pro_configFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pro_configFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>
          }
          findFirst: {
            args: Prisma.pro_configFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pro_configFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>
          }
          findMany: {
            args: Prisma.pro_configFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>[]
          }
          create: {
            args: Prisma.pro_configCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>
          }
          createMany: {
            args: Prisma.pro_configCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pro_configCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>[]
          }
          delete: {
            args: Prisma.pro_configDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>
          }
          update: {
            args: Prisma.pro_configUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>
          }
          deleteMany: {
            args: Prisma.pro_configDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pro_configUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pro_configUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>[]
          }
          upsert: {
            args: Prisma.pro_configUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pro_configPayload>
          }
          aggregate: {
            args: Prisma.Pro_configAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePro_config>
          }
          groupBy: {
            args: Prisma.pro_configGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pro_configGroupByOutputType>[]
          }
          count: {
            args: Prisma.pro_configCountArgs<ExtArgs>
            result: $Utils.Optional<Pro_configCountAggregateOutputType> | number
          }
        }
      }
      user_service_call_logs: {
        payload: Prisma.$user_service_call_logsPayload<ExtArgs>
        fields: Prisma.user_service_call_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_service_call_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_service_call_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>
          }
          findFirst: {
            args: Prisma.user_service_call_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_service_call_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>
          }
          findMany: {
            args: Prisma.user_service_call_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>[]
          }
          create: {
            args: Prisma.user_service_call_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>
          }
          createMany: {
            args: Prisma.user_service_call_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_service_call_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>[]
          }
          delete: {
            args: Prisma.user_service_call_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>
          }
          update: {
            args: Prisma.user_service_call_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>
          }
          deleteMany: {
            args: Prisma.user_service_call_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_service_call_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_service_call_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>[]
          }
          upsert: {
            args: Prisma.user_service_call_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_service_call_logsPayload>
          }
          aggregate: {
            args: Prisma.User_service_call_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_service_call_logs>
          }
          groupBy: {
            args: Prisma.user_service_call_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_service_call_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_service_call_logsCountArgs<ExtArgs>
            result: $Utils.Optional<User_service_call_logsCountAggregateOutputType> | number
          }
        }
      }
      invite_code_bind_logs: {
        payload: Prisma.$invite_code_bind_logsPayload<ExtArgs>
        fields: Prisma.invite_code_bind_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.invite_code_bind_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.invite_code_bind_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>
          }
          findFirst: {
            args: Prisma.invite_code_bind_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.invite_code_bind_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>
          }
          findMany: {
            args: Prisma.invite_code_bind_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>[]
          }
          create: {
            args: Prisma.invite_code_bind_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>
          }
          createMany: {
            args: Prisma.invite_code_bind_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.invite_code_bind_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>[]
          }
          delete: {
            args: Prisma.invite_code_bind_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>
          }
          update: {
            args: Prisma.invite_code_bind_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>
          }
          deleteMany: {
            args: Prisma.invite_code_bind_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.invite_code_bind_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.invite_code_bind_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>[]
          }
          upsert: {
            args: Prisma.invite_code_bind_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$invite_code_bind_logsPayload>
          }
          aggregate: {
            args: Prisma.Invite_code_bind_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvite_code_bind_logs>
          }
          groupBy: {
            args: Prisma.invite_code_bind_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Invite_code_bind_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.invite_code_bind_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Invite_code_bind_logsCountAggregateOutputType> | number
          }
        }
      }
      watchlist: {
        payload: Prisma.$watchlistPayload<ExtArgs>
        fields: Prisma.watchlistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.watchlistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.watchlistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>
          }
          findFirst: {
            args: Prisma.watchlistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.watchlistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>
          }
          findMany: {
            args: Prisma.watchlistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>[]
          }
          create: {
            args: Prisma.watchlistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>
          }
          createMany: {
            args: Prisma.watchlistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.watchlistCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>[]
          }
          delete: {
            args: Prisma.watchlistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>
          }
          update: {
            args: Prisma.watchlistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>
          }
          deleteMany: {
            args: Prisma.watchlistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.watchlistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.watchlistUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>[]
          }
          upsert: {
            args: Prisma.watchlistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$watchlistPayload>
          }
          aggregate: {
            args: Prisma.WatchlistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWatchlist>
          }
          groupBy: {
            args: Prisma.watchlistGroupByArgs<ExtArgs>
            result: $Utils.Optional<WatchlistGroupByOutputType>[]
          }
          count: {
            args: Prisma.watchlistCountArgs<ExtArgs>
            result: $Utils.Optional<WatchlistCountAggregateOutputType> | number
          }
        }
      }
      click_logs: {
        payload: Prisma.$click_logsPayload<ExtArgs>
        fields: Prisma.click_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.click_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.click_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>
          }
          findFirst: {
            args: Prisma.click_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.click_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>
          }
          findMany: {
            args: Prisma.click_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>[]
          }
          create: {
            args: Prisma.click_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>
          }
          createMany: {
            args: Prisma.click_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.click_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>[]
          }
          delete: {
            args: Prisma.click_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>
          }
          update: {
            args: Prisma.click_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>
          }
          deleteMany: {
            args: Prisma.click_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.click_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.click_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>[]
          }
          upsert: {
            args: Prisma.click_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$click_logsPayload>
          }
          aggregate: {
            args: Prisma.Click_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClick_logs>
          }
          groupBy: {
            args: Prisma.click_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Click_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.click_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Click_logsCountAggregateOutputType> | number
          }
        }
      }
      smart_wallets: {
        payload: Prisma.$smart_walletsPayload<ExtArgs>
        fields: Prisma.smart_walletsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.smart_walletsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.smart_walletsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>
          }
          findFirst: {
            args: Prisma.smart_walletsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.smart_walletsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>
          }
          findMany: {
            args: Prisma.smart_walletsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>[]
          }
          create: {
            args: Prisma.smart_walletsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>
          }
          createMany: {
            args: Prisma.smart_walletsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.smart_walletsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>[]
          }
          delete: {
            args: Prisma.smart_walletsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>
          }
          update: {
            args: Prisma.smart_walletsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>
          }
          deleteMany: {
            args: Prisma.smart_walletsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.smart_walletsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.smart_walletsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>[]
          }
          upsert: {
            args: Prisma.smart_walletsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$smart_walletsPayload>
          }
          aggregate: {
            args: Prisma.Smart_walletsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSmart_wallets>
          }
          groupBy: {
            args: Prisma.smart_walletsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Smart_walletsGroupByOutputType>[]
          }
          count: {
            args: Prisma.smart_walletsCountArgs<ExtArgs>
            result: $Utils.Optional<Smart_walletsCountAggregateOutputType> | number
          }
        }
      }
      community: {
        payload: Prisma.$communityPayload<ExtArgs>
        fields: Prisma.communityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findFirst: {
            args: Prisma.communityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findMany: {
            args: Prisma.communityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          create: {
            args: Prisma.communityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          createMany: {
            args: Prisma.communityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.communityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          delete: {
            args: Prisma.communityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          update: {
            args: Prisma.communityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          deleteMany: {
            args: Prisma.communityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.communityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.communityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          upsert: {
            args: Prisma.communityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          aggregate: {
            args: Prisma.CommunityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity>
          }
          groupBy: {
            args: Prisma.communityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunityGroupByOutputType>[]
          }
          count: {
            args: Prisma.communityCountArgs<ExtArgs>
            result: $Utils.Optional<CommunityCountAggregateOutputType> | number
          }
        }
      }
      community_referral: {
        payload: Prisma.$community_referralPayload<ExtArgs>
        fields: Prisma.community_referralFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_referralFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_referralFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>
          }
          findFirst: {
            args: Prisma.community_referralFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_referralFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>
          }
          findMany: {
            args: Prisma.community_referralFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>[]
          }
          create: {
            args: Prisma.community_referralCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>
          }
          createMany: {
            args: Prisma.community_referralCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_referralCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>[]
          }
          delete: {
            args: Prisma.community_referralDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>
          }
          update: {
            args: Prisma.community_referralUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>
          }
          deleteMany: {
            args: Prisma.community_referralDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.community_referralUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.community_referralUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>[]
          }
          upsert: {
            args: Prisma.community_referralUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referralPayload>
          }
          aggregate: {
            args: Prisma.Community_referralAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity_referral>
          }
          groupBy: {
            args: Prisma.community_referralGroupByArgs<ExtArgs>
            result: $Utils.Optional<Community_referralGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_referralCountArgs<ExtArgs>
            result: $Utils.Optional<Community_referralCountAggregateOutputType> | number
          }
        }
      }
      community_referral_payed_logs: {
        payload: Prisma.$community_referral_payed_logsPayload<ExtArgs>
        fields: Prisma.community_referral_payed_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_referral_payed_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_referral_payed_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>
          }
          findFirst: {
            args: Prisma.community_referral_payed_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_referral_payed_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>
          }
          findMany: {
            args: Prisma.community_referral_payed_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>[]
          }
          create: {
            args: Prisma.community_referral_payed_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>
          }
          createMany: {
            args: Prisma.community_referral_payed_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_referral_payed_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>[]
          }
          delete: {
            args: Prisma.community_referral_payed_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>
          }
          update: {
            args: Prisma.community_referral_payed_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>
          }
          deleteMany: {
            args: Prisma.community_referral_payed_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.community_referral_payed_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.community_referral_payed_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>[]
          }
          upsert: {
            args: Prisma.community_referral_payed_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_payed_logsPayload>
          }
          aggregate: {
            args: Prisma.Community_referral_payed_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity_referral_payed_logs>
          }
          groupBy: {
            args: Prisma.community_referral_payed_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Community_referral_payed_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_referral_payed_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Community_referral_payed_logsCountAggregateOutputType> | number
          }
        }
      }
      community_referral_revenue_logs: {
        payload: Prisma.$community_referral_revenue_logsPayload<ExtArgs>
        fields: Prisma.community_referral_revenue_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_referral_revenue_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_referral_revenue_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>
          }
          findFirst: {
            args: Prisma.community_referral_revenue_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_referral_revenue_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>
          }
          findMany: {
            args: Prisma.community_referral_revenue_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>[]
          }
          create: {
            args: Prisma.community_referral_revenue_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>
          }
          createMany: {
            args: Prisma.community_referral_revenue_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_referral_revenue_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>[]
          }
          delete: {
            args: Prisma.community_referral_revenue_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>
          }
          update: {
            args: Prisma.community_referral_revenue_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>
          }
          deleteMany: {
            args: Prisma.community_referral_revenue_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.community_referral_revenue_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.community_referral_revenue_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>[]
          }
          upsert: {
            args: Prisma.community_referral_revenue_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_referral_revenue_logsPayload>
          }
          aggregate: {
            args: Prisma.Community_referral_revenue_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity_referral_revenue_logs>
          }
          groupBy: {
            args: Prisma.community_referral_revenue_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Community_referral_revenue_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_referral_revenue_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Community_referral_revenue_logsCountAggregateOutputType> | number
          }
        }
      }
      community_revenue: {
        payload: Prisma.$community_revenuePayload<ExtArgs>
        fields: Prisma.community_revenueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_revenueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_revenueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>
          }
          findFirst: {
            args: Prisma.community_revenueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_revenueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>
          }
          findMany: {
            args: Prisma.community_revenueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>[]
          }
          create: {
            args: Prisma.community_revenueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>
          }
          createMany: {
            args: Prisma.community_revenueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.community_revenueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>[]
          }
          delete: {
            args: Prisma.community_revenueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>
          }
          update: {
            args: Prisma.community_revenueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>
          }
          deleteMany: {
            args: Prisma.community_revenueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.community_revenueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.community_revenueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>[]
          }
          upsert: {
            args: Prisma.community_revenueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_revenuePayload>
          }
          aggregate: {
            args: Prisma.Community_revenueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity_revenue>
          }
          groupBy: {
            args: Prisma.community_revenueGroupByArgs<ExtArgs>
            result: $Utils.Optional<Community_revenueGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_revenueCountArgs<ExtArgs>
            result: $Utils.Optional<Community_revenueCountAggregateOutputType> | number
          }
        }
      }
      rag_tokens: {
        payload: Prisma.$rag_tokensPayload<ExtArgs>
        fields: Prisma.rag_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rag_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rag_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>
          }
          findFirst: {
            args: Prisma.rag_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rag_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>
          }
          findMany: {
            args: Prisma.rag_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>[]
          }
          create: {
            args: Prisma.rag_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>
          }
          createMany: {
            args: Prisma.rag_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rag_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>[]
          }
          delete: {
            args: Prisma.rag_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>
          }
          update: {
            args: Prisma.rag_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>
          }
          deleteMany: {
            args: Prisma.rag_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rag_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rag_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>[]
          }
          upsert: {
            args: Prisma.rag_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rag_tokensPayload>
          }
          aggregate: {
            args: Prisma.Rag_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRag_tokens>
          }
          groupBy: {
            args: Prisma.rag_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Rag_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.rag_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Rag_tokensCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    tokens?: tokensOmit
    privy_user?: privy_userOmit
    ai_analyze?: ai_analyzeOmit
    ruler_tweets?: ruler_tweetsOmit
    token_interact?: token_interactOmit
    pro_logs?: pro_logsOmit
    tweets?: tweetsOmit
    filter_rulers?: filter_rulersOmit
    tweet_latest_id?: tweet_latest_idOmit
    reference_tokens?: reference_tokensOmit
    invite_code?: invite_codeOmit
    pro_config?: pro_configOmit
    user_service_call_logs?: user_service_call_logsOmit
    invite_code_bind_logs?: invite_code_bind_logsOmit
    watchlist?: watchlistOmit
    click_logs?: click_logsOmit
    smart_wallets?: smart_walletsOmit
    community?: communityOmit
    community_referral?: community_referralOmit
    community_referral_payed_logs?: community_referral_payed_logsOmit
    community_referral_revenue_logs?: community_referral_revenue_logsOmit
    community_revenue?: community_revenueOmit
    rag_tokens?: rag_tokensOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Pro_configCountOutputType
   */

  export type Pro_configCountOutputType = {
    privy_user: number
  }

  export type Pro_configCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    privy_user?: boolean | Pro_configCountOutputTypeCountPrivy_userArgs
  }

  // Custom InputTypes
  /**
   * Pro_configCountOutputType without action
   */
  export type Pro_configCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pro_configCountOutputType
     */
    select?: Pro_configCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Pro_configCountOutputType without action
   */
  export type Pro_configCountOutputTypeCountPrivy_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: privy_userWhereInput
  }


  /**
   * Count Type CommunityCountOutputType
   */

  export type CommunityCountOutputType = {
    community_referral: number
    community_revenue: number
  }

  export type CommunityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_referral?: boolean | CommunityCountOutputTypeCountCommunity_referralArgs
    community_revenue?: boolean | CommunityCountOutputTypeCountCommunity_revenueArgs
  }

  // Custom InputTypes
  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityCountOutputType
     */
    select?: CommunityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountCommunity_referralArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_referralWhereInput
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountCommunity_revenueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_revenueWhereInput
  }


  /**
   * Count Type Community_revenueCountOutputType
   */

  export type Community_revenueCountOutputType = {
    community_referral_payed_logs: number
    community_referral_revenue_logs: number
  }

  export type Community_revenueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_referral_payed_logs?: boolean | Community_revenueCountOutputTypeCountCommunity_referral_payed_logsArgs
    community_referral_revenue_logs?: boolean | Community_revenueCountOutputTypeCountCommunity_referral_revenue_logsArgs
  }

  // Custom InputTypes
  /**
   * Community_revenueCountOutputType without action
   */
  export type Community_revenueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community_revenueCountOutputType
     */
    select?: Community_revenueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Community_revenueCountOutputType without action
   */
  export type Community_revenueCountOutputTypeCountCommunity_referral_payed_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_referral_payed_logsWhereInput
  }

  /**
   * Community_revenueCountOutputType without action
   */
  export type Community_revenueCountOutputTypeCountCommunity_referral_revenue_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_referral_revenue_logsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model tokens
   */

  export type AggregateTokens = {
    _count: TokensCountAggregateOutputType | null
    _avg: TokensAvgAggregateOutputType | null
    _sum: TokensSumAggregateOutputType | null
    _min: TokensMinAggregateOutputType | null
    _max: TokensMaxAggregateOutputType | null
  }

  export type TokensAvgAggregateOutputType = {
    id: number | null
    decimals: number | null
    token_created_at: number | null
    completed_time: number | null
  }

  export type TokensSumAggregateOutputType = {
    id: number | null
    decimals: number | null
    token_created_at: number | null
    completed_time: number | null
  }

  export type TokensMinAggregateOutputType = {
    id: number | null
    address: string | null
    symbol: string | null
    name: string | null
    decimals: number | null
    network: string | null
    token_created_at: number | null
    created_at: Date | null
    updated_at: Date | null
    tweet_analyze: string | null
    headline: string | null
    from_pumpfun_listening: boolean | null
    completed_time: number | null
  }

  export type TokensMaxAggregateOutputType = {
    id: number | null
    address: string | null
    symbol: string | null
    name: string | null
    decimals: number | null
    network: string | null
    token_created_at: number | null
    created_at: Date | null
    updated_at: Date | null
    tweet_analyze: string | null
    headline: string | null
    from_pumpfun_listening: boolean | null
    completed_time: number | null
  }

  export type TokensCountAggregateOutputType = {
    id: number
    address: number
    symbol: number
    name: number
    decimals: number
    metadata: number
    network: number
    token_created_at: number
    created_at: number
    updated_at: number
    social_links: number
    tweet_analyze: number
    pumpfun: number
    profile: number
    headline: number
    officials: number
    from_pumpfun_listening: number
    completed_time: number
    analysis: number
    related_accounts: number
    _all: number
  }


  export type TokensAvgAggregateInputType = {
    id?: true
    decimals?: true
    token_created_at?: true
    completed_time?: true
  }

  export type TokensSumAggregateInputType = {
    id?: true
    decimals?: true
    token_created_at?: true
    completed_time?: true
  }

  export type TokensMinAggregateInputType = {
    id?: true
    address?: true
    symbol?: true
    name?: true
    decimals?: true
    network?: true
    token_created_at?: true
    created_at?: true
    updated_at?: true
    tweet_analyze?: true
    headline?: true
    from_pumpfun_listening?: true
    completed_time?: true
  }

  export type TokensMaxAggregateInputType = {
    id?: true
    address?: true
    symbol?: true
    name?: true
    decimals?: true
    network?: true
    token_created_at?: true
    created_at?: true
    updated_at?: true
    tweet_analyze?: true
    headline?: true
    from_pumpfun_listening?: true
    completed_time?: true
  }

  export type TokensCountAggregateInputType = {
    id?: true
    address?: true
    symbol?: true
    name?: true
    decimals?: true
    metadata?: true
    network?: true
    token_created_at?: true
    created_at?: true
    updated_at?: true
    social_links?: true
    tweet_analyze?: true
    pumpfun?: true
    profile?: true
    headline?: true
    officials?: true
    from_pumpfun_listening?: true
    completed_time?: true
    analysis?: true
    related_accounts?: true
    _all?: true
  }

  export type TokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tokens to aggregate.
     */
    where?: tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tokens to fetch.
     */
    orderBy?: tokensOrderByWithRelationInput | tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tokens
    **/
    _count?: true | TokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TokensMaxAggregateInputType
  }

  export type GetTokensAggregateType<T extends TokensAggregateArgs> = {
        [P in keyof T & keyof AggregateTokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTokens[P]>
      : GetScalarType<T[P], AggregateTokens[P]>
  }




  export type tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tokensWhereInput
    orderBy?: tokensOrderByWithAggregationInput | tokensOrderByWithAggregationInput[]
    by: TokensScalarFieldEnum[] | TokensScalarFieldEnum
    having?: tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TokensCountAggregateInputType | true
    _avg?: TokensAvgAggregateInputType
    _sum?: TokensSumAggregateInputType
    _min?: TokensMinAggregateInputType
    _max?: TokensMaxAggregateInputType
  }

  export type TokensGroupByOutputType = {
    id: number
    address: string
    symbol: string
    name: string
    decimals: number
    metadata: JsonValue
    network: string
    token_created_at: number
    created_at: Date
    updated_at: Date
    social_links: JsonValue
    tweet_analyze: string
    pumpfun: JsonValue | null
    profile: JsonValue | null
    headline: string
    officials: string[]
    from_pumpfun_listening: boolean
    completed_time: number
    analysis: JsonValue | null
    related_accounts: JsonValue | null
    _count: TokensCountAggregateOutputType | null
    _avg: TokensAvgAggregateOutputType | null
    _sum: TokensSumAggregateOutputType | null
    _min: TokensMinAggregateOutputType | null
    _max: TokensMaxAggregateOutputType | null
  }

  type GetTokensGroupByPayload<T extends tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TokensGroupByOutputType[P]>
            : GetScalarType<T[P], TokensGroupByOutputType[P]>
        }
      >
    >


  export type tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    pumpfun?: boolean
    profile?: boolean
    headline?: boolean
    officials?: boolean
    from_pumpfun_listening?: boolean
    completed_time?: boolean
    analysis?: boolean
    related_accounts?: boolean
  }, ExtArgs["result"]["tokens"]>

  export type tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    pumpfun?: boolean
    profile?: boolean
    headline?: boolean
    officials?: boolean
    from_pumpfun_listening?: boolean
    completed_time?: boolean
    analysis?: boolean
    related_accounts?: boolean
  }, ExtArgs["result"]["tokens"]>

  export type tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    pumpfun?: boolean
    profile?: boolean
    headline?: boolean
    officials?: boolean
    from_pumpfun_listening?: boolean
    completed_time?: boolean
    analysis?: boolean
    related_accounts?: boolean
  }, ExtArgs["result"]["tokens"]>

  export type tokensSelectScalar = {
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    pumpfun?: boolean
    profile?: boolean
    headline?: boolean
    officials?: boolean
    from_pumpfun_listening?: boolean
    completed_time?: boolean
    analysis?: boolean
    related_accounts?: boolean
  }

  export type tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "address" | "symbol" | "name" | "decimals" | "metadata" | "network" | "token_created_at" | "created_at" | "updated_at" | "social_links" | "tweet_analyze" | "pumpfun" | "profile" | "headline" | "officials" | "from_pumpfun_listening" | "completed_time" | "analysis" | "related_accounts", ExtArgs["result"]["tokens"]>

  export type $tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      address: string
      symbol: string
      name: string
      decimals: number
      metadata: Prisma.JsonValue
      network: string
      token_created_at: number
      created_at: Date
      updated_at: Date
      social_links: Prisma.JsonValue
      tweet_analyze: string
      pumpfun: Prisma.JsonValue | null
      profile: Prisma.JsonValue | null
      headline: string
      officials: string[]
      from_pumpfun_listening: boolean
      completed_time: number
      analysis: Prisma.JsonValue | null
      related_accounts: Prisma.JsonValue | null
    }, ExtArgs["result"]["tokens"]>
    composites: {}
  }

  type tokensGetPayload<S extends boolean | null | undefined | tokensDefaultArgs> = $Result.GetResult<Prisma.$tokensPayload, S>

  type tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TokensCountAggregateInputType | true
    }

  export interface tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tokens'], meta: { name: 'tokens' } }
    /**
     * Find zero or one Tokens that matches the filter.
     * @param {tokensFindUniqueArgs} args - Arguments to find a Tokens
     * @example
     * // Get one Tokens
     * const tokens = await prisma.tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tokensFindUniqueArgs>(args: SelectSubset<T, tokensFindUniqueArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tokensFindUniqueOrThrowArgs} args - Arguments to find a Tokens
     * @example
     * // Get one Tokens
     * const tokens = await prisma.tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tokensFindFirstArgs} args - Arguments to find a Tokens
     * @example
     * // Get one Tokens
     * const tokens = await prisma.tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tokensFindFirstArgs>(args?: SelectSubset<T, tokensFindFirstArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tokensFindFirstOrThrowArgs} args - Arguments to find a Tokens
     * @example
     * // Get one Tokens
     * const tokens = await prisma.tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tokens
     * const tokens = await prisma.tokens.findMany()
     * 
     * // Get first 10 Tokens
     * const tokens = await prisma.tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tokensWithIdOnly = await prisma.tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tokensFindManyArgs>(args?: SelectSubset<T, tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Tokens.
     * @param {tokensCreateArgs} args - Arguments to create a Tokens.
     * @example
     * // Create one Tokens
     * const Tokens = await prisma.tokens.create({
     *   data: {
     *     // ... data to create a Tokens
     *   }
     * })
     * 
     */
    create<T extends tokensCreateArgs>(args: SelectSubset<T, tokensCreateArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Tokens.
     * @param {tokensCreateManyArgs} args - Arguments to create many Tokens.
     * @example
     * // Create many Tokens
     * const tokens = await prisma.tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tokensCreateManyArgs>(args?: SelectSubset<T, tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tokens and returns the data saved in the database.
     * @param {tokensCreateManyAndReturnArgs} args - Arguments to create many Tokens.
     * @example
     * // Create many Tokens
     * const tokens = await prisma.tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tokens and only return the `id`
     * const tokensWithIdOnly = await prisma.tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Tokens.
     * @param {tokensDeleteArgs} args - Arguments to delete one Tokens.
     * @example
     * // Delete one Tokens
     * const Tokens = await prisma.tokens.delete({
     *   where: {
     *     // ... filter to delete one Tokens
     *   }
     * })
     * 
     */
    delete<T extends tokensDeleteArgs>(args: SelectSubset<T, tokensDeleteArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Tokens.
     * @param {tokensUpdateArgs} args - Arguments to update one Tokens.
     * @example
     * // Update one Tokens
     * const tokens = await prisma.tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tokensUpdateArgs>(args: SelectSubset<T, tokensUpdateArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Tokens.
     * @param {tokensDeleteManyArgs} args - Arguments to filter Tokens to delete.
     * @example
     * // Delete a few Tokens
     * const { count } = await prisma.tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tokensDeleteManyArgs>(args?: SelectSubset<T, tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tokens
     * const tokens = await prisma.tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tokensUpdateManyArgs>(args: SelectSubset<T, tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tokens and returns the data updated in the database.
     * @param {tokensUpdateManyAndReturnArgs} args - Arguments to update many Tokens.
     * @example
     * // Update many Tokens
     * const tokens = await prisma.tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tokens and only return the `id`
     * const tokensWithIdOnly = await prisma.tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Tokens.
     * @param {tokensUpsertArgs} args - Arguments to update or create a Tokens.
     * @example
     * // Update or create a Tokens
     * const tokens = await prisma.tokens.upsert({
     *   create: {
     *     // ... data to create a Tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tokens we want to update
     *   }
     * })
     */
    upsert<T extends tokensUpsertArgs>(args: SelectSubset<T, tokensUpsertArgs<ExtArgs>>): Prisma__tokensClient<$Result.GetResult<Prisma.$tokensPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tokensCountArgs} args - Arguments to filter Tokens to count.
     * @example
     * // Count the number of Tokens
     * const count = await prisma.tokens.count({
     *   where: {
     *     // ... the filter for the Tokens we want to count
     *   }
     * })
    **/
    count<T extends tokensCountArgs>(
      args?: Subset<T, tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TokensAggregateArgs>(args: Subset<T, TokensAggregateArgs>): Prisma.PrismaPromise<GetTokensAggregateType<T>>

    /**
     * Group by Tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tokensGroupByArgs['orderBy'] }
        : { orderBy?: tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tokens model
   */
  readonly fields: tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tokens model
   */ 
  interface tokensFieldRefs {
    readonly id: FieldRef<"tokens", 'Int'>
    readonly address: FieldRef<"tokens", 'String'>
    readonly symbol: FieldRef<"tokens", 'String'>
    readonly name: FieldRef<"tokens", 'String'>
    readonly decimals: FieldRef<"tokens", 'Int'>
    readonly metadata: FieldRef<"tokens", 'Json'>
    readonly network: FieldRef<"tokens", 'String'>
    readonly token_created_at: FieldRef<"tokens", 'Int'>
    readonly created_at: FieldRef<"tokens", 'DateTime'>
    readonly updated_at: FieldRef<"tokens", 'DateTime'>
    readonly social_links: FieldRef<"tokens", 'Json'>
    readonly tweet_analyze: FieldRef<"tokens", 'String'>
    readonly pumpfun: FieldRef<"tokens", 'Json'>
    readonly profile: FieldRef<"tokens", 'Json'>
    readonly headline: FieldRef<"tokens", 'String'>
    readonly officials: FieldRef<"tokens", 'String[]'>
    readonly from_pumpfun_listening: FieldRef<"tokens", 'Boolean'>
    readonly completed_time: FieldRef<"tokens", 'Int'>
    readonly analysis: FieldRef<"tokens", 'Json'>
    readonly related_accounts: FieldRef<"tokens", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * tokens findUnique
   */
  export type tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * Filter, which tokens to fetch.
     */
    where: tokensWhereUniqueInput
  }

  /**
   * tokens findUniqueOrThrow
   */
  export type tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * Filter, which tokens to fetch.
     */
    where: tokensWhereUniqueInput
  }

  /**
   * tokens findFirst
   */
  export type tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * Filter, which tokens to fetch.
     */
    where?: tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tokens to fetch.
     */
    orderBy?: tokensOrderByWithRelationInput | tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tokens.
     */
    cursor?: tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tokens.
     */
    distinct?: TokensScalarFieldEnum | TokensScalarFieldEnum[]
  }

  /**
   * tokens findFirstOrThrow
   */
  export type tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * Filter, which tokens to fetch.
     */
    where?: tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tokens to fetch.
     */
    orderBy?: tokensOrderByWithRelationInput | tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tokens.
     */
    cursor?: tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tokens.
     */
    distinct?: TokensScalarFieldEnum | TokensScalarFieldEnum[]
  }

  /**
   * tokens findMany
   */
  export type tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * Filter, which tokens to fetch.
     */
    where?: tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tokens to fetch.
     */
    orderBy?: tokensOrderByWithRelationInput | tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tokens.
     */
    cursor?: tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tokens.
     */
    skip?: number
    distinct?: TokensScalarFieldEnum | TokensScalarFieldEnum[]
  }

  /**
   * tokens create
   */
  export type tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * The data needed to create a tokens.
     */
    data: XOR<tokensCreateInput, tokensUncheckedCreateInput>
  }

  /**
   * tokens createMany
   */
  export type tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tokens.
     */
    data: tokensCreateManyInput | tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tokens createManyAndReturn
   */
  export type tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * The data used to create many tokens.
     */
    data: tokensCreateManyInput | tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tokens update
   */
  export type tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * The data needed to update a tokens.
     */
    data: XOR<tokensUpdateInput, tokensUncheckedUpdateInput>
    /**
     * Choose, which tokens to update.
     */
    where: tokensWhereUniqueInput
  }

  /**
   * tokens updateMany
   */
  export type tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tokens.
     */
    data: XOR<tokensUpdateManyMutationInput, tokensUncheckedUpdateManyInput>
    /**
     * Filter which tokens to update
     */
    where?: tokensWhereInput
  }

  /**
   * tokens updateManyAndReturn
   */
  export type tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * The data used to update tokens.
     */
    data: XOR<tokensUpdateManyMutationInput, tokensUncheckedUpdateManyInput>
    /**
     * Filter which tokens to update
     */
    where?: tokensWhereInput
  }

  /**
   * tokens upsert
   */
  export type tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * The filter to search for the tokens to update in case it exists.
     */
    where: tokensWhereUniqueInput
    /**
     * In case the tokens found by the `where` argument doesn't exist, create a new tokens with this data.
     */
    create: XOR<tokensCreateInput, tokensUncheckedCreateInput>
    /**
     * In case the tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tokensUpdateInput, tokensUncheckedUpdateInput>
  }

  /**
   * tokens delete
   */
  export type tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
    /**
     * Filter which tokens to delete.
     */
    where: tokensWhereUniqueInput
  }

  /**
   * tokens deleteMany
   */
  export type tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tokens to delete
     */
    where?: tokensWhereInput
  }

  /**
   * tokens without action
   */
  export type tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tokens
     */
    select?: tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tokens
     */
    omit?: tokensOmit<ExtArgs> | null
  }


  /**
   * Model privy_user
   */

  export type AggregatePrivy_user = {
    _count: Privy_userCountAggregateOutputType | null
    _avg: Privy_userAvgAggregateOutputType | null
    _sum: Privy_userSumAggregateOutputType | null
    _min: Privy_userMinAggregateOutputType | null
    _max: Privy_userMaxAggregateOutputType | null
  }

  export type Privy_userAvgAggregateOutputType = {
    id: number | null
    pro: number | null
    exp: number | null
    invite_code_bind_at: number | null
  }

  export type Privy_userSumAggregateOutputType = {
    id: number | null
    pro: number | null
    exp: number | null
    invite_code_bind_at: number | null
  }

  export type Privy_userMinAggregateOutputType = {
    id: number | null
    did: string | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    pro: number | null
    exp: number | null
    invite_code: string | null
    invite_code_bind_at: number | null
    referral: string | null
  }

  export type Privy_userMaxAggregateOutputType = {
    id: number | null
    did: string | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    pro: number | null
    exp: number | null
    invite_code: string | null
    invite_code_bind_at: number | null
    referral: string | null
  }

  export type Privy_userCountAggregateOutputType = {
    id: number
    did: number
    created_at: number
    updated_at: number
    email: number
    pro: number
    exp: number
    invite_code: number
    invite_code_bind_at: number
    referral: number
    _all: number
  }


  export type Privy_userAvgAggregateInputType = {
    id?: true
    pro?: true
    exp?: true
    invite_code_bind_at?: true
  }

  export type Privy_userSumAggregateInputType = {
    id?: true
    pro?: true
    exp?: true
    invite_code_bind_at?: true
  }

  export type Privy_userMinAggregateInputType = {
    id?: true
    did?: true
    created_at?: true
    updated_at?: true
    email?: true
    pro?: true
    exp?: true
    invite_code?: true
    invite_code_bind_at?: true
    referral?: true
  }

  export type Privy_userMaxAggregateInputType = {
    id?: true
    did?: true
    created_at?: true
    updated_at?: true
    email?: true
    pro?: true
    exp?: true
    invite_code?: true
    invite_code_bind_at?: true
    referral?: true
  }

  export type Privy_userCountAggregateInputType = {
    id?: true
    did?: true
    created_at?: true
    updated_at?: true
    email?: true
    pro?: true
    exp?: true
    invite_code?: true
    invite_code_bind_at?: true
    referral?: true
    _all?: true
  }

  export type Privy_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which privy_user to aggregate.
     */
    where?: privy_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of privy_users to fetch.
     */
    orderBy?: privy_userOrderByWithRelationInput | privy_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: privy_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` privy_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` privy_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned privy_users
    **/
    _count?: true | Privy_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Privy_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Privy_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Privy_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Privy_userMaxAggregateInputType
  }

  export type GetPrivy_userAggregateType<T extends Privy_userAggregateArgs> = {
        [P in keyof T & keyof AggregatePrivy_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrivy_user[P]>
      : GetScalarType<T[P], AggregatePrivy_user[P]>
  }




  export type privy_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: privy_userWhereInput
    orderBy?: privy_userOrderByWithAggregationInput | privy_userOrderByWithAggregationInput[]
    by: Privy_userScalarFieldEnum[] | Privy_userScalarFieldEnum
    having?: privy_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Privy_userCountAggregateInputType | true
    _avg?: Privy_userAvgAggregateInputType
    _sum?: Privy_userSumAggregateInputType
    _min?: Privy_userMinAggregateInputType
    _max?: Privy_userMaxAggregateInputType
  }

  export type Privy_userGroupByOutputType = {
    id: number
    did: string
    created_at: Date
    updated_at: Date
    email: string
    pro: number
    exp: number
    invite_code: string | null
    invite_code_bind_at: number | null
    referral: string | null
    _count: Privy_userCountAggregateOutputType | null
    _avg: Privy_userAvgAggregateOutputType | null
    _sum: Privy_userSumAggregateOutputType | null
    _min: Privy_userMinAggregateOutputType | null
    _max: Privy_userMaxAggregateOutputType | null
  }

  type GetPrivy_userGroupByPayload<T extends privy_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Privy_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Privy_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Privy_userGroupByOutputType[P]>
            : GetScalarType<T[P], Privy_userGroupByOutputType[P]>
        }
      >
    >


  export type privy_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    pro?: boolean
    exp?: boolean
    invite_code?: boolean
    invite_code_bind_at?: boolean
    referral?: boolean
    pro_config?: boolean | pro_configDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["privy_user"]>

  export type privy_userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    pro?: boolean
    exp?: boolean
    invite_code?: boolean
    invite_code_bind_at?: boolean
    referral?: boolean
    pro_config?: boolean | pro_configDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["privy_user"]>

  export type privy_userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    pro?: boolean
    exp?: boolean
    invite_code?: boolean
    invite_code_bind_at?: boolean
    referral?: boolean
    pro_config?: boolean | pro_configDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["privy_user"]>

  export type privy_userSelectScalar = {
    id?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    pro?: boolean
    exp?: boolean
    invite_code?: boolean
    invite_code_bind_at?: boolean
    referral?: boolean
  }

  export type privy_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "did" | "created_at" | "updated_at" | "email" | "pro" | "exp" | "invite_code" | "invite_code_bind_at" | "referral", ExtArgs["result"]["privy_user"]>
  export type privy_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pro_config?: boolean | pro_configDefaultArgs<ExtArgs>
  }
  export type privy_userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pro_config?: boolean | pro_configDefaultArgs<ExtArgs>
  }
  export type privy_userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pro_config?: boolean | pro_configDefaultArgs<ExtArgs>
  }

  export type $privy_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "privy_user"
    objects: {
      pro_config: Prisma.$pro_configPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      did: string
      created_at: Date
      updated_at: Date
      email: string
      pro: number
      exp: number
      invite_code: string | null
      invite_code_bind_at: number | null
      referral: string | null
    }, ExtArgs["result"]["privy_user"]>
    composites: {}
  }

  type privy_userGetPayload<S extends boolean | null | undefined | privy_userDefaultArgs> = $Result.GetResult<Prisma.$privy_userPayload, S>

  type privy_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<privy_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Privy_userCountAggregateInputType | true
    }

  export interface privy_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['privy_user'], meta: { name: 'privy_user' } }
    /**
     * Find zero or one Privy_user that matches the filter.
     * @param {privy_userFindUniqueArgs} args - Arguments to find a Privy_user
     * @example
     * // Get one Privy_user
     * const privy_user = await prisma.privy_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends privy_userFindUniqueArgs>(args: SelectSubset<T, privy_userFindUniqueArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Privy_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {privy_userFindUniqueOrThrowArgs} args - Arguments to find a Privy_user
     * @example
     * // Get one Privy_user
     * const privy_user = await prisma.privy_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends privy_userFindUniqueOrThrowArgs>(args: SelectSubset<T, privy_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Privy_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {privy_userFindFirstArgs} args - Arguments to find a Privy_user
     * @example
     * // Get one Privy_user
     * const privy_user = await prisma.privy_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends privy_userFindFirstArgs>(args?: SelectSubset<T, privy_userFindFirstArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Privy_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {privy_userFindFirstOrThrowArgs} args - Arguments to find a Privy_user
     * @example
     * // Get one Privy_user
     * const privy_user = await prisma.privy_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends privy_userFindFirstOrThrowArgs>(args?: SelectSubset<T, privy_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Privy_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {privy_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Privy_users
     * const privy_users = await prisma.privy_user.findMany()
     * 
     * // Get first 10 Privy_users
     * const privy_users = await prisma.privy_user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const privy_userWithIdOnly = await prisma.privy_user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends privy_userFindManyArgs>(args?: SelectSubset<T, privy_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Privy_user.
     * @param {privy_userCreateArgs} args - Arguments to create a Privy_user.
     * @example
     * // Create one Privy_user
     * const Privy_user = await prisma.privy_user.create({
     *   data: {
     *     // ... data to create a Privy_user
     *   }
     * })
     * 
     */
    create<T extends privy_userCreateArgs>(args: SelectSubset<T, privy_userCreateArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Privy_users.
     * @param {privy_userCreateManyArgs} args - Arguments to create many Privy_users.
     * @example
     * // Create many Privy_users
     * const privy_user = await prisma.privy_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends privy_userCreateManyArgs>(args?: SelectSubset<T, privy_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Privy_users and returns the data saved in the database.
     * @param {privy_userCreateManyAndReturnArgs} args - Arguments to create many Privy_users.
     * @example
     * // Create many Privy_users
     * const privy_user = await prisma.privy_user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Privy_users and only return the `id`
     * const privy_userWithIdOnly = await prisma.privy_user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends privy_userCreateManyAndReturnArgs>(args?: SelectSubset<T, privy_userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Privy_user.
     * @param {privy_userDeleteArgs} args - Arguments to delete one Privy_user.
     * @example
     * // Delete one Privy_user
     * const Privy_user = await prisma.privy_user.delete({
     *   where: {
     *     // ... filter to delete one Privy_user
     *   }
     * })
     * 
     */
    delete<T extends privy_userDeleteArgs>(args: SelectSubset<T, privy_userDeleteArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Privy_user.
     * @param {privy_userUpdateArgs} args - Arguments to update one Privy_user.
     * @example
     * // Update one Privy_user
     * const privy_user = await prisma.privy_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends privy_userUpdateArgs>(args: SelectSubset<T, privy_userUpdateArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Privy_users.
     * @param {privy_userDeleteManyArgs} args - Arguments to filter Privy_users to delete.
     * @example
     * // Delete a few Privy_users
     * const { count } = await prisma.privy_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends privy_userDeleteManyArgs>(args?: SelectSubset<T, privy_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Privy_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {privy_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Privy_users
     * const privy_user = await prisma.privy_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends privy_userUpdateManyArgs>(args: SelectSubset<T, privy_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Privy_users and returns the data updated in the database.
     * @param {privy_userUpdateManyAndReturnArgs} args - Arguments to update many Privy_users.
     * @example
     * // Update many Privy_users
     * const privy_user = await prisma.privy_user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Privy_users and only return the `id`
     * const privy_userWithIdOnly = await prisma.privy_user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends privy_userUpdateManyAndReturnArgs>(args: SelectSubset<T, privy_userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Privy_user.
     * @param {privy_userUpsertArgs} args - Arguments to update or create a Privy_user.
     * @example
     * // Update or create a Privy_user
     * const privy_user = await prisma.privy_user.upsert({
     *   create: {
     *     // ... data to create a Privy_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Privy_user we want to update
     *   }
     * })
     */
    upsert<T extends privy_userUpsertArgs>(args: SelectSubset<T, privy_userUpsertArgs<ExtArgs>>): Prisma__privy_userClient<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Privy_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {privy_userCountArgs} args - Arguments to filter Privy_users to count.
     * @example
     * // Count the number of Privy_users
     * const count = await prisma.privy_user.count({
     *   where: {
     *     // ... the filter for the Privy_users we want to count
     *   }
     * })
    **/
    count<T extends privy_userCountArgs>(
      args?: Subset<T, privy_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Privy_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Privy_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Privy_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Privy_userAggregateArgs>(args: Subset<T, Privy_userAggregateArgs>): Prisma.PrismaPromise<GetPrivy_userAggregateType<T>>

    /**
     * Group by Privy_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {privy_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends privy_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: privy_userGroupByArgs['orderBy'] }
        : { orderBy?: privy_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, privy_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrivy_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the privy_user model
   */
  readonly fields: privy_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for privy_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__privy_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pro_config<T extends pro_configDefaultArgs<ExtArgs> = {}>(args?: Subset<T, pro_configDefaultArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the privy_user model
   */ 
  interface privy_userFieldRefs {
    readonly id: FieldRef<"privy_user", 'Int'>
    readonly did: FieldRef<"privy_user", 'String'>
    readonly created_at: FieldRef<"privy_user", 'DateTime'>
    readonly updated_at: FieldRef<"privy_user", 'DateTime'>
    readonly email: FieldRef<"privy_user", 'String'>
    readonly pro: FieldRef<"privy_user", 'Int'>
    readonly exp: FieldRef<"privy_user", 'Int'>
    readonly invite_code: FieldRef<"privy_user", 'String'>
    readonly invite_code_bind_at: FieldRef<"privy_user", 'Int'>
    readonly referral: FieldRef<"privy_user", 'String'>
  }
    

  // Custom InputTypes
  /**
   * privy_user findUnique
   */
  export type privy_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * Filter, which privy_user to fetch.
     */
    where: privy_userWhereUniqueInput
  }

  /**
   * privy_user findUniqueOrThrow
   */
  export type privy_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * Filter, which privy_user to fetch.
     */
    where: privy_userWhereUniqueInput
  }

  /**
   * privy_user findFirst
   */
  export type privy_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * Filter, which privy_user to fetch.
     */
    where?: privy_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of privy_users to fetch.
     */
    orderBy?: privy_userOrderByWithRelationInput | privy_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for privy_users.
     */
    cursor?: privy_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` privy_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` privy_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of privy_users.
     */
    distinct?: Privy_userScalarFieldEnum | Privy_userScalarFieldEnum[]
  }

  /**
   * privy_user findFirstOrThrow
   */
  export type privy_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * Filter, which privy_user to fetch.
     */
    where?: privy_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of privy_users to fetch.
     */
    orderBy?: privy_userOrderByWithRelationInput | privy_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for privy_users.
     */
    cursor?: privy_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` privy_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` privy_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of privy_users.
     */
    distinct?: Privy_userScalarFieldEnum | Privy_userScalarFieldEnum[]
  }

  /**
   * privy_user findMany
   */
  export type privy_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * Filter, which privy_users to fetch.
     */
    where?: privy_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of privy_users to fetch.
     */
    orderBy?: privy_userOrderByWithRelationInput | privy_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing privy_users.
     */
    cursor?: privy_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` privy_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` privy_users.
     */
    skip?: number
    distinct?: Privy_userScalarFieldEnum | Privy_userScalarFieldEnum[]
  }

  /**
   * privy_user create
   */
  export type privy_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * The data needed to create a privy_user.
     */
    data: XOR<privy_userCreateInput, privy_userUncheckedCreateInput>
  }

  /**
   * privy_user createMany
   */
  export type privy_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many privy_users.
     */
    data: privy_userCreateManyInput | privy_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * privy_user createManyAndReturn
   */
  export type privy_userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * The data used to create many privy_users.
     */
    data: privy_userCreateManyInput | privy_userCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * privy_user update
   */
  export type privy_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * The data needed to update a privy_user.
     */
    data: XOR<privy_userUpdateInput, privy_userUncheckedUpdateInput>
    /**
     * Choose, which privy_user to update.
     */
    where: privy_userWhereUniqueInput
  }

  /**
   * privy_user updateMany
   */
  export type privy_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update privy_users.
     */
    data: XOR<privy_userUpdateManyMutationInput, privy_userUncheckedUpdateManyInput>
    /**
     * Filter which privy_users to update
     */
    where?: privy_userWhereInput
  }

  /**
   * privy_user updateManyAndReturn
   */
  export type privy_userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * The data used to update privy_users.
     */
    data: XOR<privy_userUpdateManyMutationInput, privy_userUncheckedUpdateManyInput>
    /**
     * Filter which privy_users to update
     */
    where?: privy_userWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * privy_user upsert
   */
  export type privy_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * The filter to search for the privy_user to update in case it exists.
     */
    where: privy_userWhereUniqueInput
    /**
     * In case the privy_user found by the `where` argument doesn't exist, create a new privy_user with this data.
     */
    create: XOR<privy_userCreateInput, privy_userUncheckedCreateInput>
    /**
     * In case the privy_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<privy_userUpdateInput, privy_userUncheckedUpdateInput>
  }

  /**
   * privy_user delete
   */
  export type privy_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    /**
     * Filter which privy_user to delete.
     */
    where: privy_userWhereUniqueInput
  }

  /**
   * privy_user deleteMany
   */
  export type privy_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which privy_users to delete
     */
    where?: privy_userWhereInput
  }

  /**
   * privy_user without action
   */
  export type privy_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
  }


  /**
   * Model ai_analyze
   */

  export type AggregateAi_analyze = {
    _count: Ai_analyzeCountAggregateOutputType | null
    _avg: Ai_analyzeAvgAggregateOutputType | null
    _sum: Ai_analyzeSumAggregateOutputType | null
    _min: Ai_analyzeMinAggregateOutputType | null
    _max: Ai_analyzeMaxAggregateOutputType | null
  }

  export type Ai_analyzeAvgAggregateOutputType = {
    id: number | null
  }

  export type Ai_analyzeSumAggregateOutputType = {
    id: number | null
  }

  export type Ai_analyzeMinAggregateOutputType = {
    id: number | null
    token_address: string | null
    analyze_en: string | null
    analyze_zh: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
    symbol: string | null
    template: string | null
    type: string | null
    version: string | null
  }

  export type Ai_analyzeMaxAggregateOutputType = {
    id: number | null
    token_address: string | null
    analyze_en: string | null
    analyze_zh: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
    symbol: string | null
    template: string | null
    type: string | null
    version: string | null
  }

  export type Ai_analyzeCountAggregateOutputType = {
    id: number
    token_address: number
    analyze_en: number
    analyze_zh: number
    tweets: number
    network: number
    created_at: number
    updated_at: number
    symbol: number
    search_tweets: number
    ai_resp: number
    template: number
    type: number
    version: number
    _all: number
  }


  export type Ai_analyzeAvgAggregateInputType = {
    id?: true
  }

  export type Ai_analyzeSumAggregateInputType = {
    id?: true
  }

  export type Ai_analyzeMinAggregateInputType = {
    id?: true
    token_address?: true
    analyze_en?: true
    analyze_zh?: true
    network?: true
    created_at?: true
    updated_at?: true
    symbol?: true
    template?: true
    type?: true
    version?: true
  }

  export type Ai_analyzeMaxAggregateInputType = {
    id?: true
    token_address?: true
    analyze_en?: true
    analyze_zh?: true
    network?: true
    created_at?: true
    updated_at?: true
    symbol?: true
    template?: true
    type?: true
    version?: true
  }

  export type Ai_analyzeCountAggregateInputType = {
    id?: true
    token_address?: true
    analyze_en?: true
    analyze_zh?: true
    tweets?: true
    network?: true
    created_at?: true
    updated_at?: true
    symbol?: true
    search_tweets?: true
    ai_resp?: true
    template?: true
    type?: true
    version?: true
    _all?: true
  }

  export type Ai_analyzeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ai_analyze to aggregate.
     */
    where?: ai_analyzeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_analyzes to fetch.
     */
    orderBy?: ai_analyzeOrderByWithRelationInput | ai_analyzeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ai_analyzeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_analyzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_analyzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ai_analyzes
    **/
    _count?: true | Ai_analyzeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ai_analyzeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ai_analyzeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ai_analyzeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ai_analyzeMaxAggregateInputType
  }

  export type GetAi_analyzeAggregateType<T extends Ai_analyzeAggregateArgs> = {
        [P in keyof T & keyof AggregateAi_analyze]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAi_analyze[P]>
      : GetScalarType<T[P], AggregateAi_analyze[P]>
  }




  export type ai_analyzeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ai_analyzeWhereInput
    orderBy?: ai_analyzeOrderByWithAggregationInput | ai_analyzeOrderByWithAggregationInput[]
    by: Ai_analyzeScalarFieldEnum[] | Ai_analyzeScalarFieldEnum
    having?: ai_analyzeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ai_analyzeCountAggregateInputType | true
    _avg?: Ai_analyzeAvgAggregateInputType
    _sum?: Ai_analyzeSumAggregateInputType
    _min?: Ai_analyzeMinAggregateInputType
    _max?: Ai_analyzeMaxAggregateInputType
  }

  export type Ai_analyzeGroupByOutputType = {
    id: number
    token_address: string
    analyze_en: string
    analyze_zh: string
    tweets: JsonValue
    network: string
    created_at: Date
    updated_at: Date
    symbol: string
    search_tweets: JsonValue
    ai_resp: JsonValue | null
    template: string | null
    type: string
    version: string
    _count: Ai_analyzeCountAggregateOutputType | null
    _avg: Ai_analyzeAvgAggregateOutputType | null
    _sum: Ai_analyzeSumAggregateOutputType | null
    _min: Ai_analyzeMinAggregateOutputType | null
    _max: Ai_analyzeMaxAggregateOutputType | null
  }

  type GetAi_analyzeGroupByPayload<T extends ai_analyzeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ai_analyzeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ai_analyzeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ai_analyzeGroupByOutputType[P]>
            : GetScalarType<T[P], Ai_analyzeGroupByOutputType[P]>
        }
      >
    >


  export type ai_analyzeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    analyze_en?: boolean
    analyze_zh?: boolean
    tweets?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    symbol?: boolean
    search_tweets?: boolean
    ai_resp?: boolean
    template?: boolean
    type?: boolean
    version?: boolean
  }, ExtArgs["result"]["ai_analyze"]>

  export type ai_analyzeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    analyze_en?: boolean
    analyze_zh?: boolean
    tweets?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    symbol?: boolean
    search_tweets?: boolean
    ai_resp?: boolean
    template?: boolean
    type?: boolean
    version?: boolean
  }, ExtArgs["result"]["ai_analyze"]>

  export type ai_analyzeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    analyze_en?: boolean
    analyze_zh?: boolean
    tweets?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    symbol?: boolean
    search_tweets?: boolean
    ai_resp?: boolean
    template?: boolean
    type?: boolean
    version?: boolean
  }, ExtArgs["result"]["ai_analyze"]>

  export type ai_analyzeSelectScalar = {
    id?: boolean
    token_address?: boolean
    analyze_en?: boolean
    analyze_zh?: boolean
    tweets?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    symbol?: boolean
    search_tweets?: boolean
    ai_resp?: boolean
    template?: boolean
    type?: boolean
    version?: boolean
  }

  export type ai_analyzeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token_address" | "analyze_en" | "analyze_zh" | "tweets" | "network" | "created_at" | "updated_at" | "symbol" | "search_tweets" | "ai_resp" | "template" | "type" | "version", ExtArgs["result"]["ai_analyze"]>

  export type $ai_analyzePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ai_analyze"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token_address: string
      analyze_en: string
      analyze_zh: string
      tweets: Prisma.JsonValue
      network: string
      created_at: Date
      updated_at: Date
      symbol: string
      search_tweets: Prisma.JsonValue
      ai_resp: Prisma.JsonValue | null
      template: string | null
      type: string
      version: string
    }, ExtArgs["result"]["ai_analyze"]>
    composites: {}
  }

  type ai_analyzeGetPayload<S extends boolean | null | undefined | ai_analyzeDefaultArgs> = $Result.GetResult<Prisma.$ai_analyzePayload, S>

  type ai_analyzeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ai_analyzeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ai_analyzeCountAggregateInputType | true
    }

  export interface ai_analyzeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ai_analyze'], meta: { name: 'ai_analyze' } }
    /**
     * Find zero or one Ai_analyze that matches the filter.
     * @param {ai_analyzeFindUniqueArgs} args - Arguments to find a Ai_analyze
     * @example
     * // Get one Ai_analyze
     * const ai_analyze = await prisma.ai_analyze.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ai_analyzeFindUniqueArgs>(args: SelectSubset<T, ai_analyzeFindUniqueArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Ai_analyze that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ai_analyzeFindUniqueOrThrowArgs} args - Arguments to find a Ai_analyze
     * @example
     * // Get one Ai_analyze
     * const ai_analyze = await prisma.ai_analyze.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ai_analyzeFindUniqueOrThrowArgs>(args: SelectSubset<T, ai_analyzeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Ai_analyze that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_analyzeFindFirstArgs} args - Arguments to find a Ai_analyze
     * @example
     * // Get one Ai_analyze
     * const ai_analyze = await prisma.ai_analyze.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ai_analyzeFindFirstArgs>(args?: SelectSubset<T, ai_analyzeFindFirstArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Ai_analyze that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_analyzeFindFirstOrThrowArgs} args - Arguments to find a Ai_analyze
     * @example
     * // Get one Ai_analyze
     * const ai_analyze = await prisma.ai_analyze.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ai_analyzeFindFirstOrThrowArgs>(args?: SelectSubset<T, ai_analyzeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Ai_analyzes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_analyzeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ai_analyzes
     * const ai_analyzes = await prisma.ai_analyze.findMany()
     * 
     * // Get first 10 Ai_analyzes
     * const ai_analyzes = await prisma.ai_analyze.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ai_analyzeWithIdOnly = await prisma.ai_analyze.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ai_analyzeFindManyArgs>(args?: SelectSubset<T, ai_analyzeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Ai_analyze.
     * @param {ai_analyzeCreateArgs} args - Arguments to create a Ai_analyze.
     * @example
     * // Create one Ai_analyze
     * const Ai_analyze = await prisma.ai_analyze.create({
     *   data: {
     *     // ... data to create a Ai_analyze
     *   }
     * })
     * 
     */
    create<T extends ai_analyzeCreateArgs>(args: SelectSubset<T, ai_analyzeCreateArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Ai_analyzes.
     * @param {ai_analyzeCreateManyArgs} args - Arguments to create many Ai_analyzes.
     * @example
     * // Create many Ai_analyzes
     * const ai_analyze = await prisma.ai_analyze.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ai_analyzeCreateManyArgs>(args?: SelectSubset<T, ai_analyzeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ai_analyzes and returns the data saved in the database.
     * @param {ai_analyzeCreateManyAndReturnArgs} args - Arguments to create many Ai_analyzes.
     * @example
     * // Create many Ai_analyzes
     * const ai_analyze = await prisma.ai_analyze.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ai_analyzes and only return the `id`
     * const ai_analyzeWithIdOnly = await prisma.ai_analyze.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ai_analyzeCreateManyAndReturnArgs>(args?: SelectSubset<T, ai_analyzeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Ai_analyze.
     * @param {ai_analyzeDeleteArgs} args - Arguments to delete one Ai_analyze.
     * @example
     * // Delete one Ai_analyze
     * const Ai_analyze = await prisma.ai_analyze.delete({
     *   where: {
     *     // ... filter to delete one Ai_analyze
     *   }
     * })
     * 
     */
    delete<T extends ai_analyzeDeleteArgs>(args: SelectSubset<T, ai_analyzeDeleteArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Ai_analyze.
     * @param {ai_analyzeUpdateArgs} args - Arguments to update one Ai_analyze.
     * @example
     * // Update one Ai_analyze
     * const ai_analyze = await prisma.ai_analyze.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ai_analyzeUpdateArgs>(args: SelectSubset<T, ai_analyzeUpdateArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Ai_analyzes.
     * @param {ai_analyzeDeleteManyArgs} args - Arguments to filter Ai_analyzes to delete.
     * @example
     * // Delete a few Ai_analyzes
     * const { count } = await prisma.ai_analyze.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ai_analyzeDeleteManyArgs>(args?: SelectSubset<T, ai_analyzeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ai_analyzes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_analyzeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ai_analyzes
     * const ai_analyze = await prisma.ai_analyze.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ai_analyzeUpdateManyArgs>(args: SelectSubset<T, ai_analyzeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ai_analyzes and returns the data updated in the database.
     * @param {ai_analyzeUpdateManyAndReturnArgs} args - Arguments to update many Ai_analyzes.
     * @example
     * // Update many Ai_analyzes
     * const ai_analyze = await prisma.ai_analyze.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ai_analyzes and only return the `id`
     * const ai_analyzeWithIdOnly = await prisma.ai_analyze.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ai_analyzeUpdateManyAndReturnArgs>(args: SelectSubset<T, ai_analyzeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Ai_analyze.
     * @param {ai_analyzeUpsertArgs} args - Arguments to update or create a Ai_analyze.
     * @example
     * // Update or create a Ai_analyze
     * const ai_analyze = await prisma.ai_analyze.upsert({
     *   create: {
     *     // ... data to create a Ai_analyze
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ai_analyze we want to update
     *   }
     * })
     */
    upsert<T extends ai_analyzeUpsertArgs>(args: SelectSubset<T, ai_analyzeUpsertArgs<ExtArgs>>): Prisma__ai_analyzeClient<$Result.GetResult<Prisma.$ai_analyzePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Ai_analyzes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_analyzeCountArgs} args - Arguments to filter Ai_analyzes to count.
     * @example
     * // Count the number of Ai_analyzes
     * const count = await prisma.ai_analyze.count({
     *   where: {
     *     // ... the filter for the Ai_analyzes we want to count
     *   }
     * })
    **/
    count<T extends ai_analyzeCountArgs>(
      args?: Subset<T, ai_analyzeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ai_analyzeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ai_analyze.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ai_analyzeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ai_analyzeAggregateArgs>(args: Subset<T, Ai_analyzeAggregateArgs>): Prisma.PrismaPromise<GetAi_analyzeAggregateType<T>>

    /**
     * Group by Ai_analyze.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_analyzeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ai_analyzeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ai_analyzeGroupByArgs['orderBy'] }
        : { orderBy?: ai_analyzeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ai_analyzeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAi_analyzeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ai_analyze model
   */
  readonly fields: ai_analyzeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ai_analyze.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ai_analyzeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ai_analyze model
   */ 
  interface ai_analyzeFieldRefs {
    readonly id: FieldRef<"ai_analyze", 'Int'>
    readonly token_address: FieldRef<"ai_analyze", 'String'>
    readonly analyze_en: FieldRef<"ai_analyze", 'String'>
    readonly analyze_zh: FieldRef<"ai_analyze", 'String'>
    readonly tweets: FieldRef<"ai_analyze", 'Json'>
    readonly network: FieldRef<"ai_analyze", 'String'>
    readonly created_at: FieldRef<"ai_analyze", 'DateTime'>
    readonly updated_at: FieldRef<"ai_analyze", 'DateTime'>
    readonly symbol: FieldRef<"ai_analyze", 'String'>
    readonly search_tweets: FieldRef<"ai_analyze", 'Json'>
    readonly ai_resp: FieldRef<"ai_analyze", 'Json'>
    readonly template: FieldRef<"ai_analyze", 'String'>
    readonly type: FieldRef<"ai_analyze", 'String'>
    readonly version: FieldRef<"ai_analyze", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ai_analyze findUnique
   */
  export type ai_analyzeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * Filter, which ai_analyze to fetch.
     */
    where: ai_analyzeWhereUniqueInput
  }

  /**
   * ai_analyze findUniqueOrThrow
   */
  export type ai_analyzeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * Filter, which ai_analyze to fetch.
     */
    where: ai_analyzeWhereUniqueInput
  }

  /**
   * ai_analyze findFirst
   */
  export type ai_analyzeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * Filter, which ai_analyze to fetch.
     */
    where?: ai_analyzeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_analyzes to fetch.
     */
    orderBy?: ai_analyzeOrderByWithRelationInput | ai_analyzeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ai_analyzes.
     */
    cursor?: ai_analyzeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_analyzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_analyzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ai_analyzes.
     */
    distinct?: Ai_analyzeScalarFieldEnum | Ai_analyzeScalarFieldEnum[]
  }

  /**
   * ai_analyze findFirstOrThrow
   */
  export type ai_analyzeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * Filter, which ai_analyze to fetch.
     */
    where?: ai_analyzeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_analyzes to fetch.
     */
    orderBy?: ai_analyzeOrderByWithRelationInput | ai_analyzeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ai_analyzes.
     */
    cursor?: ai_analyzeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_analyzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_analyzes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ai_analyzes.
     */
    distinct?: Ai_analyzeScalarFieldEnum | Ai_analyzeScalarFieldEnum[]
  }

  /**
   * ai_analyze findMany
   */
  export type ai_analyzeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * Filter, which ai_analyzes to fetch.
     */
    where?: ai_analyzeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_analyzes to fetch.
     */
    orderBy?: ai_analyzeOrderByWithRelationInput | ai_analyzeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ai_analyzes.
     */
    cursor?: ai_analyzeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_analyzes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_analyzes.
     */
    skip?: number
    distinct?: Ai_analyzeScalarFieldEnum | Ai_analyzeScalarFieldEnum[]
  }

  /**
   * ai_analyze create
   */
  export type ai_analyzeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * The data needed to create a ai_analyze.
     */
    data: XOR<ai_analyzeCreateInput, ai_analyzeUncheckedCreateInput>
  }

  /**
   * ai_analyze createMany
   */
  export type ai_analyzeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ai_analyzes.
     */
    data: ai_analyzeCreateManyInput | ai_analyzeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ai_analyze createManyAndReturn
   */
  export type ai_analyzeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * The data used to create many ai_analyzes.
     */
    data: ai_analyzeCreateManyInput | ai_analyzeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ai_analyze update
   */
  export type ai_analyzeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * The data needed to update a ai_analyze.
     */
    data: XOR<ai_analyzeUpdateInput, ai_analyzeUncheckedUpdateInput>
    /**
     * Choose, which ai_analyze to update.
     */
    where: ai_analyzeWhereUniqueInput
  }

  /**
   * ai_analyze updateMany
   */
  export type ai_analyzeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ai_analyzes.
     */
    data: XOR<ai_analyzeUpdateManyMutationInput, ai_analyzeUncheckedUpdateManyInput>
    /**
     * Filter which ai_analyzes to update
     */
    where?: ai_analyzeWhereInput
  }

  /**
   * ai_analyze updateManyAndReturn
   */
  export type ai_analyzeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * The data used to update ai_analyzes.
     */
    data: XOR<ai_analyzeUpdateManyMutationInput, ai_analyzeUncheckedUpdateManyInput>
    /**
     * Filter which ai_analyzes to update
     */
    where?: ai_analyzeWhereInput
  }

  /**
   * ai_analyze upsert
   */
  export type ai_analyzeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * The filter to search for the ai_analyze to update in case it exists.
     */
    where: ai_analyzeWhereUniqueInput
    /**
     * In case the ai_analyze found by the `where` argument doesn't exist, create a new ai_analyze with this data.
     */
    create: XOR<ai_analyzeCreateInput, ai_analyzeUncheckedCreateInput>
    /**
     * In case the ai_analyze was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ai_analyzeUpdateInput, ai_analyzeUncheckedUpdateInput>
  }

  /**
   * ai_analyze delete
   */
  export type ai_analyzeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
    /**
     * Filter which ai_analyze to delete.
     */
    where: ai_analyzeWhereUniqueInput
  }

  /**
   * ai_analyze deleteMany
   */
  export type ai_analyzeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ai_analyzes to delete
     */
    where?: ai_analyzeWhereInput
  }

  /**
   * ai_analyze without action
   */
  export type ai_analyzeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_analyze
     */
    select?: ai_analyzeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_analyze
     */
    omit?: ai_analyzeOmit<ExtArgs> | null
  }


  /**
   * Model ruler_tweets
   */

  export type AggregateRuler_tweets = {
    _count: Ruler_tweetsCountAggregateOutputType | null
    _avg: Ruler_tweetsAvgAggregateOutputType | null
    _sum: Ruler_tweetsSumAggregateOutputType | null
    _min: Ruler_tweetsMinAggregateOutputType | null
    _max: Ruler_tweetsMaxAggregateOutputType | null
  }

  export type Ruler_tweetsAvgAggregateOutputType = {
    id: number | null
    tweet_time: number | null
  }

  export type Ruler_tweetsSumAggregateOutputType = {
    id: number | null
    tweet_time: number | null
  }

  export type Ruler_tweetsMinAggregateOutputType = {
    id: number | null
    token_address: string | null
    symbol: string | null
    network: string | null
    tweet_id: string | null
    tweet_time: number | null
    author: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Ruler_tweetsMaxAggregateOutputType = {
    id: number | null
    token_address: string | null
    symbol: string | null
    network: string | null
    tweet_id: string | null
    tweet_time: number | null
    author: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Ruler_tweetsCountAggregateOutputType = {
    id: number
    token_address: number
    symbol: number
    network: number
    tweet_id: number
    tweet_time: number
    author: number
    content: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Ruler_tweetsAvgAggregateInputType = {
    id?: true
    tweet_time?: true
  }

  export type Ruler_tweetsSumAggregateInputType = {
    id?: true
    tweet_time?: true
  }

  export type Ruler_tweetsMinAggregateInputType = {
    id?: true
    token_address?: true
    symbol?: true
    network?: true
    tweet_id?: true
    tweet_time?: true
    author?: true
    created_at?: true
    updated_at?: true
  }

  export type Ruler_tweetsMaxAggregateInputType = {
    id?: true
    token_address?: true
    symbol?: true
    network?: true
    tweet_id?: true
    tweet_time?: true
    author?: true
    created_at?: true
    updated_at?: true
  }

  export type Ruler_tweetsCountAggregateInputType = {
    id?: true
    token_address?: true
    symbol?: true
    network?: true
    tweet_id?: true
    tweet_time?: true
    author?: true
    content?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Ruler_tweetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ruler_tweets to aggregate.
     */
    where?: ruler_tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ruler_tweets to fetch.
     */
    orderBy?: ruler_tweetsOrderByWithRelationInput | ruler_tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ruler_tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ruler_tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ruler_tweets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ruler_tweets
    **/
    _count?: true | Ruler_tweetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ruler_tweetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ruler_tweetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ruler_tweetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ruler_tweetsMaxAggregateInputType
  }

  export type GetRuler_tweetsAggregateType<T extends Ruler_tweetsAggregateArgs> = {
        [P in keyof T & keyof AggregateRuler_tweets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRuler_tweets[P]>
      : GetScalarType<T[P], AggregateRuler_tweets[P]>
  }




  export type ruler_tweetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ruler_tweetsWhereInput
    orderBy?: ruler_tweetsOrderByWithAggregationInput | ruler_tweetsOrderByWithAggregationInput[]
    by: Ruler_tweetsScalarFieldEnum[] | Ruler_tweetsScalarFieldEnum
    having?: ruler_tweetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ruler_tweetsCountAggregateInputType | true
    _avg?: Ruler_tweetsAvgAggregateInputType
    _sum?: Ruler_tweetsSumAggregateInputType
    _min?: Ruler_tweetsMinAggregateInputType
    _max?: Ruler_tweetsMaxAggregateInputType
  }

  export type Ruler_tweetsGroupByOutputType = {
    id: number
    token_address: string
    symbol: string
    network: string
    tweet_id: string
    tweet_time: number
    author: string
    content: JsonValue
    created_at: Date
    updated_at: Date
    _count: Ruler_tweetsCountAggregateOutputType | null
    _avg: Ruler_tweetsAvgAggregateOutputType | null
    _sum: Ruler_tweetsSumAggregateOutputType | null
    _min: Ruler_tweetsMinAggregateOutputType | null
    _max: Ruler_tweetsMaxAggregateOutputType | null
  }

  type GetRuler_tweetsGroupByPayload<T extends ruler_tweetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ruler_tweetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ruler_tweetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ruler_tweetsGroupByOutputType[P]>
            : GetScalarType<T[P], Ruler_tweetsGroupByOutputType[P]>
        }
      >
    >


  export type ruler_tweetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    tweet_time?: boolean
    author?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["ruler_tweets"]>

  export type ruler_tweetsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    tweet_time?: boolean
    author?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["ruler_tweets"]>

  export type ruler_tweetsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    tweet_time?: boolean
    author?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["ruler_tweets"]>

  export type ruler_tweetsSelectScalar = {
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    tweet_time?: boolean
    author?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ruler_tweetsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token_address" | "symbol" | "network" | "tweet_id" | "tweet_time" | "author" | "content" | "created_at" | "updated_at", ExtArgs["result"]["ruler_tweets"]>

  export type $ruler_tweetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ruler_tweets"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token_address: string
      symbol: string
      network: string
      tweet_id: string
      tweet_time: number
      author: string
      content: Prisma.JsonValue
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["ruler_tweets"]>
    composites: {}
  }

  type ruler_tweetsGetPayload<S extends boolean | null | undefined | ruler_tweetsDefaultArgs> = $Result.GetResult<Prisma.$ruler_tweetsPayload, S>

  type ruler_tweetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ruler_tweetsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ruler_tweetsCountAggregateInputType | true
    }

  export interface ruler_tweetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ruler_tweets'], meta: { name: 'ruler_tweets' } }
    /**
     * Find zero or one Ruler_tweets that matches the filter.
     * @param {ruler_tweetsFindUniqueArgs} args - Arguments to find a Ruler_tweets
     * @example
     * // Get one Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ruler_tweetsFindUniqueArgs>(args: SelectSubset<T, ruler_tweetsFindUniqueArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Ruler_tweets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ruler_tweetsFindUniqueOrThrowArgs} args - Arguments to find a Ruler_tweets
     * @example
     * // Get one Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ruler_tweetsFindUniqueOrThrowArgs>(args: SelectSubset<T, ruler_tweetsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Ruler_tweets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ruler_tweetsFindFirstArgs} args - Arguments to find a Ruler_tweets
     * @example
     * // Get one Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ruler_tweetsFindFirstArgs>(args?: SelectSubset<T, ruler_tweetsFindFirstArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Ruler_tweets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ruler_tweetsFindFirstOrThrowArgs} args - Arguments to find a Ruler_tweets
     * @example
     * // Get one Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ruler_tweetsFindFirstOrThrowArgs>(args?: SelectSubset<T, ruler_tweetsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Ruler_tweets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ruler_tweetsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.findMany()
     * 
     * // Get first 10 Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ruler_tweetsWithIdOnly = await prisma.ruler_tweets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ruler_tweetsFindManyArgs>(args?: SelectSubset<T, ruler_tweetsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Ruler_tweets.
     * @param {ruler_tweetsCreateArgs} args - Arguments to create a Ruler_tweets.
     * @example
     * // Create one Ruler_tweets
     * const Ruler_tweets = await prisma.ruler_tweets.create({
     *   data: {
     *     // ... data to create a Ruler_tweets
     *   }
     * })
     * 
     */
    create<T extends ruler_tweetsCreateArgs>(args: SelectSubset<T, ruler_tweetsCreateArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Ruler_tweets.
     * @param {ruler_tweetsCreateManyArgs} args - Arguments to create many Ruler_tweets.
     * @example
     * // Create many Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ruler_tweetsCreateManyArgs>(args?: SelectSubset<T, ruler_tweetsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ruler_tweets and returns the data saved in the database.
     * @param {ruler_tweetsCreateManyAndReturnArgs} args - Arguments to create many Ruler_tweets.
     * @example
     * // Create many Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ruler_tweets and only return the `id`
     * const ruler_tweetsWithIdOnly = await prisma.ruler_tweets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ruler_tweetsCreateManyAndReturnArgs>(args?: SelectSubset<T, ruler_tweetsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Ruler_tweets.
     * @param {ruler_tweetsDeleteArgs} args - Arguments to delete one Ruler_tweets.
     * @example
     * // Delete one Ruler_tweets
     * const Ruler_tweets = await prisma.ruler_tweets.delete({
     *   where: {
     *     // ... filter to delete one Ruler_tweets
     *   }
     * })
     * 
     */
    delete<T extends ruler_tweetsDeleteArgs>(args: SelectSubset<T, ruler_tweetsDeleteArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Ruler_tweets.
     * @param {ruler_tweetsUpdateArgs} args - Arguments to update one Ruler_tweets.
     * @example
     * // Update one Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ruler_tweetsUpdateArgs>(args: SelectSubset<T, ruler_tweetsUpdateArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Ruler_tweets.
     * @param {ruler_tweetsDeleteManyArgs} args - Arguments to filter Ruler_tweets to delete.
     * @example
     * // Delete a few Ruler_tweets
     * const { count } = await prisma.ruler_tweets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ruler_tweetsDeleteManyArgs>(args?: SelectSubset<T, ruler_tweetsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ruler_tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ruler_tweetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ruler_tweetsUpdateManyArgs>(args: SelectSubset<T, ruler_tweetsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ruler_tweets and returns the data updated in the database.
     * @param {ruler_tweetsUpdateManyAndReturnArgs} args - Arguments to update many Ruler_tweets.
     * @example
     * // Update many Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ruler_tweets and only return the `id`
     * const ruler_tweetsWithIdOnly = await prisma.ruler_tweets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ruler_tweetsUpdateManyAndReturnArgs>(args: SelectSubset<T, ruler_tweetsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Ruler_tweets.
     * @param {ruler_tweetsUpsertArgs} args - Arguments to update or create a Ruler_tweets.
     * @example
     * // Update or create a Ruler_tweets
     * const ruler_tweets = await prisma.ruler_tweets.upsert({
     *   create: {
     *     // ... data to create a Ruler_tweets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ruler_tweets we want to update
     *   }
     * })
     */
    upsert<T extends ruler_tweetsUpsertArgs>(args: SelectSubset<T, ruler_tweetsUpsertArgs<ExtArgs>>): Prisma__ruler_tweetsClient<$Result.GetResult<Prisma.$ruler_tweetsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Ruler_tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ruler_tweetsCountArgs} args - Arguments to filter Ruler_tweets to count.
     * @example
     * // Count the number of Ruler_tweets
     * const count = await prisma.ruler_tweets.count({
     *   where: {
     *     // ... the filter for the Ruler_tweets we want to count
     *   }
     * })
    **/
    count<T extends ruler_tweetsCountArgs>(
      args?: Subset<T, ruler_tweetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ruler_tweetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ruler_tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ruler_tweetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ruler_tweetsAggregateArgs>(args: Subset<T, Ruler_tweetsAggregateArgs>): Prisma.PrismaPromise<GetRuler_tweetsAggregateType<T>>

    /**
     * Group by Ruler_tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ruler_tweetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ruler_tweetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ruler_tweetsGroupByArgs['orderBy'] }
        : { orderBy?: ruler_tweetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ruler_tweetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRuler_tweetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ruler_tweets model
   */
  readonly fields: ruler_tweetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ruler_tweets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ruler_tweetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ruler_tweets model
   */ 
  interface ruler_tweetsFieldRefs {
    readonly id: FieldRef<"ruler_tweets", 'Int'>
    readonly token_address: FieldRef<"ruler_tweets", 'String'>
    readonly symbol: FieldRef<"ruler_tweets", 'String'>
    readonly network: FieldRef<"ruler_tweets", 'String'>
    readonly tweet_id: FieldRef<"ruler_tweets", 'String'>
    readonly tweet_time: FieldRef<"ruler_tweets", 'Int'>
    readonly author: FieldRef<"ruler_tweets", 'String'>
    readonly content: FieldRef<"ruler_tweets", 'Json'>
    readonly created_at: FieldRef<"ruler_tweets", 'DateTime'>
    readonly updated_at: FieldRef<"ruler_tweets", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ruler_tweets findUnique
   */
  export type ruler_tweetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * Filter, which ruler_tweets to fetch.
     */
    where: ruler_tweetsWhereUniqueInput
  }

  /**
   * ruler_tweets findUniqueOrThrow
   */
  export type ruler_tweetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * Filter, which ruler_tweets to fetch.
     */
    where: ruler_tweetsWhereUniqueInput
  }

  /**
   * ruler_tweets findFirst
   */
  export type ruler_tweetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * Filter, which ruler_tweets to fetch.
     */
    where?: ruler_tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ruler_tweets to fetch.
     */
    orderBy?: ruler_tweetsOrderByWithRelationInput | ruler_tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ruler_tweets.
     */
    cursor?: ruler_tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ruler_tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ruler_tweets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ruler_tweets.
     */
    distinct?: Ruler_tweetsScalarFieldEnum | Ruler_tweetsScalarFieldEnum[]
  }

  /**
   * ruler_tweets findFirstOrThrow
   */
  export type ruler_tweetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * Filter, which ruler_tweets to fetch.
     */
    where?: ruler_tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ruler_tweets to fetch.
     */
    orderBy?: ruler_tweetsOrderByWithRelationInput | ruler_tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ruler_tweets.
     */
    cursor?: ruler_tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ruler_tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ruler_tweets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ruler_tweets.
     */
    distinct?: Ruler_tweetsScalarFieldEnum | Ruler_tweetsScalarFieldEnum[]
  }

  /**
   * ruler_tweets findMany
   */
  export type ruler_tweetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * Filter, which ruler_tweets to fetch.
     */
    where?: ruler_tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ruler_tweets to fetch.
     */
    orderBy?: ruler_tweetsOrderByWithRelationInput | ruler_tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ruler_tweets.
     */
    cursor?: ruler_tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ruler_tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ruler_tweets.
     */
    skip?: number
    distinct?: Ruler_tweetsScalarFieldEnum | Ruler_tweetsScalarFieldEnum[]
  }

  /**
   * ruler_tweets create
   */
  export type ruler_tweetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * The data needed to create a ruler_tweets.
     */
    data: XOR<ruler_tweetsCreateInput, ruler_tweetsUncheckedCreateInput>
  }

  /**
   * ruler_tweets createMany
   */
  export type ruler_tweetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ruler_tweets.
     */
    data: ruler_tweetsCreateManyInput | ruler_tweetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ruler_tweets createManyAndReturn
   */
  export type ruler_tweetsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * The data used to create many ruler_tweets.
     */
    data: ruler_tweetsCreateManyInput | ruler_tweetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ruler_tweets update
   */
  export type ruler_tweetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * The data needed to update a ruler_tweets.
     */
    data: XOR<ruler_tweetsUpdateInput, ruler_tweetsUncheckedUpdateInput>
    /**
     * Choose, which ruler_tweets to update.
     */
    where: ruler_tweetsWhereUniqueInput
  }

  /**
   * ruler_tweets updateMany
   */
  export type ruler_tweetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ruler_tweets.
     */
    data: XOR<ruler_tweetsUpdateManyMutationInput, ruler_tweetsUncheckedUpdateManyInput>
    /**
     * Filter which ruler_tweets to update
     */
    where?: ruler_tweetsWhereInput
  }

  /**
   * ruler_tweets updateManyAndReturn
   */
  export type ruler_tweetsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * The data used to update ruler_tweets.
     */
    data: XOR<ruler_tweetsUpdateManyMutationInput, ruler_tweetsUncheckedUpdateManyInput>
    /**
     * Filter which ruler_tweets to update
     */
    where?: ruler_tweetsWhereInput
  }

  /**
   * ruler_tweets upsert
   */
  export type ruler_tweetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * The filter to search for the ruler_tweets to update in case it exists.
     */
    where: ruler_tweetsWhereUniqueInput
    /**
     * In case the ruler_tweets found by the `where` argument doesn't exist, create a new ruler_tweets with this data.
     */
    create: XOR<ruler_tweetsCreateInput, ruler_tweetsUncheckedCreateInput>
    /**
     * In case the ruler_tweets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ruler_tweetsUpdateInput, ruler_tweetsUncheckedUpdateInput>
  }

  /**
   * ruler_tweets delete
   */
  export type ruler_tweetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
    /**
     * Filter which ruler_tweets to delete.
     */
    where: ruler_tweetsWhereUniqueInput
  }

  /**
   * ruler_tweets deleteMany
   */
  export type ruler_tweetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ruler_tweets to delete
     */
    where?: ruler_tweetsWhereInput
  }

  /**
   * ruler_tweets without action
   */
  export type ruler_tweetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ruler_tweets
     */
    select?: ruler_tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ruler_tweets
     */
    omit?: ruler_tweetsOmit<ExtArgs> | null
  }


  /**
   * Model token_interact
   */

  export type AggregateToken_interact = {
    _count: Token_interactCountAggregateOutputType | null
    _avg: Token_interactAvgAggregateOutputType | null
    _sum: Token_interactSumAggregateOutputType | null
    _min: Token_interactMinAggregateOutputType | null
    _max: Token_interactMaxAggregateOutputType | null
  }

  export type Token_interactAvgAggregateOutputType = {
    id: number | null
  }

  export type Token_interactSumAggregateOutputType = {
    id: number | null
  }

  export type Token_interactMinAggregateOutputType = {
    id: number | null
    token_address: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Token_interactMaxAggregateOutputType = {
    id: number | null
    token_address: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Token_interactCountAggregateOutputType = {
    id: number
    token_address: number
    network: number
    liker: number
    disliker: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Token_interactAvgAggregateInputType = {
    id?: true
  }

  export type Token_interactSumAggregateInputType = {
    id?: true
  }

  export type Token_interactMinAggregateInputType = {
    id?: true
    token_address?: true
    network?: true
    created_at?: true
    updated_at?: true
  }

  export type Token_interactMaxAggregateInputType = {
    id?: true
    token_address?: true
    network?: true
    created_at?: true
    updated_at?: true
  }

  export type Token_interactCountAggregateInputType = {
    id?: true
    token_address?: true
    network?: true
    liker?: true
    disliker?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Token_interactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which token_interact to aggregate.
     */
    where?: token_interactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_interacts to fetch.
     */
    orderBy?: token_interactOrderByWithRelationInput | token_interactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: token_interactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_interacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_interacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned token_interacts
    **/
    _count?: true | Token_interactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Token_interactAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Token_interactSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Token_interactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Token_interactMaxAggregateInputType
  }

  export type GetToken_interactAggregateType<T extends Token_interactAggregateArgs> = {
        [P in keyof T & keyof AggregateToken_interact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateToken_interact[P]>
      : GetScalarType<T[P], AggregateToken_interact[P]>
  }




  export type token_interactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: token_interactWhereInput
    orderBy?: token_interactOrderByWithAggregationInput | token_interactOrderByWithAggregationInput[]
    by: Token_interactScalarFieldEnum[] | Token_interactScalarFieldEnum
    having?: token_interactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Token_interactCountAggregateInputType | true
    _avg?: Token_interactAvgAggregateInputType
    _sum?: Token_interactSumAggregateInputType
    _min?: Token_interactMinAggregateInputType
    _max?: Token_interactMaxAggregateInputType
  }

  export type Token_interactGroupByOutputType = {
    id: number
    token_address: string
    network: string
    liker: string[]
    disliker: string[]
    created_at: Date
    updated_at: Date
    _count: Token_interactCountAggregateOutputType | null
    _avg: Token_interactAvgAggregateOutputType | null
    _sum: Token_interactSumAggregateOutputType | null
    _min: Token_interactMinAggregateOutputType | null
    _max: Token_interactMaxAggregateOutputType | null
  }

  type GetToken_interactGroupByPayload<T extends token_interactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Token_interactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Token_interactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Token_interactGroupByOutputType[P]>
            : GetScalarType<T[P], Token_interactGroupByOutputType[P]>
        }
      >
    >


  export type token_interactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    network?: boolean
    liker?: boolean
    disliker?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["token_interact"]>

  export type token_interactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    network?: boolean
    liker?: boolean
    disliker?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["token_interact"]>

  export type token_interactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    network?: boolean
    liker?: boolean
    disliker?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["token_interact"]>

  export type token_interactSelectScalar = {
    id?: boolean
    token_address?: boolean
    network?: boolean
    liker?: boolean
    disliker?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type token_interactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token_address" | "network" | "liker" | "disliker" | "created_at" | "updated_at", ExtArgs["result"]["token_interact"]>

  export type $token_interactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "token_interact"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token_address: string
      network: string
      liker: string[]
      disliker: string[]
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["token_interact"]>
    composites: {}
  }

  type token_interactGetPayload<S extends boolean | null | undefined | token_interactDefaultArgs> = $Result.GetResult<Prisma.$token_interactPayload, S>

  type token_interactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<token_interactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Token_interactCountAggregateInputType | true
    }

  export interface token_interactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['token_interact'], meta: { name: 'token_interact' } }
    /**
     * Find zero or one Token_interact that matches the filter.
     * @param {token_interactFindUniqueArgs} args - Arguments to find a Token_interact
     * @example
     * // Get one Token_interact
     * const token_interact = await prisma.token_interact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends token_interactFindUniqueArgs>(args: SelectSubset<T, token_interactFindUniqueArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Token_interact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {token_interactFindUniqueOrThrowArgs} args - Arguments to find a Token_interact
     * @example
     * // Get one Token_interact
     * const token_interact = await prisma.token_interact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends token_interactFindUniqueOrThrowArgs>(args: SelectSubset<T, token_interactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Token_interact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_interactFindFirstArgs} args - Arguments to find a Token_interact
     * @example
     * // Get one Token_interact
     * const token_interact = await prisma.token_interact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends token_interactFindFirstArgs>(args?: SelectSubset<T, token_interactFindFirstArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Token_interact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_interactFindFirstOrThrowArgs} args - Arguments to find a Token_interact
     * @example
     * // Get one Token_interact
     * const token_interact = await prisma.token_interact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends token_interactFindFirstOrThrowArgs>(args?: SelectSubset<T, token_interactFindFirstOrThrowArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Token_interacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_interactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Token_interacts
     * const token_interacts = await prisma.token_interact.findMany()
     * 
     * // Get first 10 Token_interacts
     * const token_interacts = await prisma.token_interact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const token_interactWithIdOnly = await prisma.token_interact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends token_interactFindManyArgs>(args?: SelectSubset<T, token_interactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Token_interact.
     * @param {token_interactCreateArgs} args - Arguments to create a Token_interact.
     * @example
     * // Create one Token_interact
     * const Token_interact = await prisma.token_interact.create({
     *   data: {
     *     // ... data to create a Token_interact
     *   }
     * })
     * 
     */
    create<T extends token_interactCreateArgs>(args: SelectSubset<T, token_interactCreateArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Token_interacts.
     * @param {token_interactCreateManyArgs} args - Arguments to create many Token_interacts.
     * @example
     * // Create many Token_interacts
     * const token_interact = await prisma.token_interact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends token_interactCreateManyArgs>(args?: SelectSubset<T, token_interactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Token_interacts and returns the data saved in the database.
     * @param {token_interactCreateManyAndReturnArgs} args - Arguments to create many Token_interacts.
     * @example
     * // Create many Token_interacts
     * const token_interact = await prisma.token_interact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Token_interacts and only return the `id`
     * const token_interactWithIdOnly = await prisma.token_interact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends token_interactCreateManyAndReturnArgs>(args?: SelectSubset<T, token_interactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Token_interact.
     * @param {token_interactDeleteArgs} args - Arguments to delete one Token_interact.
     * @example
     * // Delete one Token_interact
     * const Token_interact = await prisma.token_interact.delete({
     *   where: {
     *     // ... filter to delete one Token_interact
     *   }
     * })
     * 
     */
    delete<T extends token_interactDeleteArgs>(args: SelectSubset<T, token_interactDeleteArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Token_interact.
     * @param {token_interactUpdateArgs} args - Arguments to update one Token_interact.
     * @example
     * // Update one Token_interact
     * const token_interact = await prisma.token_interact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends token_interactUpdateArgs>(args: SelectSubset<T, token_interactUpdateArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Token_interacts.
     * @param {token_interactDeleteManyArgs} args - Arguments to filter Token_interacts to delete.
     * @example
     * // Delete a few Token_interacts
     * const { count } = await prisma.token_interact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends token_interactDeleteManyArgs>(args?: SelectSubset<T, token_interactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Token_interacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_interactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Token_interacts
     * const token_interact = await prisma.token_interact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends token_interactUpdateManyArgs>(args: SelectSubset<T, token_interactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Token_interacts and returns the data updated in the database.
     * @param {token_interactUpdateManyAndReturnArgs} args - Arguments to update many Token_interacts.
     * @example
     * // Update many Token_interacts
     * const token_interact = await prisma.token_interact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Token_interacts and only return the `id`
     * const token_interactWithIdOnly = await prisma.token_interact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends token_interactUpdateManyAndReturnArgs>(args: SelectSubset<T, token_interactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Token_interact.
     * @param {token_interactUpsertArgs} args - Arguments to update or create a Token_interact.
     * @example
     * // Update or create a Token_interact
     * const token_interact = await prisma.token_interact.upsert({
     *   create: {
     *     // ... data to create a Token_interact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Token_interact we want to update
     *   }
     * })
     */
    upsert<T extends token_interactUpsertArgs>(args: SelectSubset<T, token_interactUpsertArgs<ExtArgs>>): Prisma__token_interactClient<$Result.GetResult<Prisma.$token_interactPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Token_interacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_interactCountArgs} args - Arguments to filter Token_interacts to count.
     * @example
     * // Count the number of Token_interacts
     * const count = await prisma.token_interact.count({
     *   where: {
     *     // ... the filter for the Token_interacts we want to count
     *   }
     * })
    **/
    count<T extends token_interactCountArgs>(
      args?: Subset<T, token_interactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Token_interactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Token_interact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Token_interactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Token_interactAggregateArgs>(args: Subset<T, Token_interactAggregateArgs>): Prisma.PrismaPromise<GetToken_interactAggregateType<T>>

    /**
     * Group by Token_interact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_interactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends token_interactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: token_interactGroupByArgs['orderBy'] }
        : { orderBy?: token_interactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, token_interactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetToken_interactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the token_interact model
   */
  readonly fields: token_interactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for token_interact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__token_interactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the token_interact model
   */ 
  interface token_interactFieldRefs {
    readonly id: FieldRef<"token_interact", 'Int'>
    readonly token_address: FieldRef<"token_interact", 'String'>
    readonly network: FieldRef<"token_interact", 'String'>
    readonly liker: FieldRef<"token_interact", 'String[]'>
    readonly disliker: FieldRef<"token_interact", 'String[]'>
    readonly created_at: FieldRef<"token_interact", 'DateTime'>
    readonly updated_at: FieldRef<"token_interact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * token_interact findUnique
   */
  export type token_interactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * Filter, which token_interact to fetch.
     */
    where: token_interactWhereUniqueInput
  }

  /**
   * token_interact findUniqueOrThrow
   */
  export type token_interactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * Filter, which token_interact to fetch.
     */
    where: token_interactWhereUniqueInput
  }

  /**
   * token_interact findFirst
   */
  export type token_interactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * Filter, which token_interact to fetch.
     */
    where?: token_interactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_interacts to fetch.
     */
    orderBy?: token_interactOrderByWithRelationInput | token_interactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for token_interacts.
     */
    cursor?: token_interactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_interacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_interacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of token_interacts.
     */
    distinct?: Token_interactScalarFieldEnum | Token_interactScalarFieldEnum[]
  }

  /**
   * token_interact findFirstOrThrow
   */
  export type token_interactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * Filter, which token_interact to fetch.
     */
    where?: token_interactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_interacts to fetch.
     */
    orderBy?: token_interactOrderByWithRelationInput | token_interactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for token_interacts.
     */
    cursor?: token_interactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_interacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_interacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of token_interacts.
     */
    distinct?: Token_interactScalarFieldEnum | Token_interactScalarFieldEnum[]
  }

  /**
   * token_interact findMany
   */
  export type token_interactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * Filter, which token_interacts to fetch.
     */
    where?: token_interactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_interacts to fetch.
     */
    orderBy?: token_interactOrderByWithRelationInput | token_interactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing token_interacts.
     */
    cursor?: token_interactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_interacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_interacts.
     */
    skip?: number
    distinct?: Token_interactScalarFieldEnum | Token_interactScalarFieldEnum[]
  }

  /**
   * token_interact create
   */
  export type token_interactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * The data needed to create a token_interact.
     */
    data: XOR<token_interactCreateInput, token_interactUncheckedCreateInput>
  }

  /**
   * token_interact createMany
   */
  export type token_interactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many token_interacts.
     */
    data: token_interactCreateManyInput | token_interactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * token_interact createManyAndReturn
   */
  export type token_interactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * The data used to create many token_interacts.
     */
    data: token_interactCreateManyInput | token_interactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * token_interact update
   */
  export type token_interactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * The data needed to update a token_interact.
     */
    data: XOR<token_interactUpdateInput, token_interactUncheckedUpdateInput>
    /**
     * Choose, which token_interact to update.
     */
    where: token_interactWhereUniqueInput
  }

  /**
   * token_interact updateMany
   */
  export type token_interactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update token_interacts.
     */
    data: XOR<token_interactUpdateManyMutationInput, token_interactUncheckedUpdateManyInput>
    /**
     * Filter which token_interacts to update
     */
    where?: token_interactWhereInput
  }

  /**
   * token_interact updateManyAndReturn
   */
  export type token_interactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * The data used to update token_interacts.
     */
    data: XOR<token_interactUpdateManyMutationInput, token_interactUncheckedUpdateManyInput>
    /**
     * Filter which token_interacts to update
     */
    where?: token_interactWhereInput
  }

  /**
   * token_interact upsert
   */
  export type token_interactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * The filter to search for the token_interact to update in case it exists.
     */
    where: token_interactWhereUniqueInput
    /**
     * In case the token_interact found by the `where` argument doesn't exist, create a new token_interact with this data.
     */
    create: XOR<token_interactCreateInput, token_interactUncheckedCreateInput>
    /**
     * In case the token_interact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<token_interactUpdateInput, token_interactUncheckedUpdateInput>
  }

  /**
   * token_interact delete
   */
  export type token_interactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
    /**
     * Filter which token_interact to delete.
     */
    where: token_interactWhereUniqueInput
  }

  /**
   * token_interact deleteMany
   */
  export type token_interactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which token_interacts to delete
     */
    where?: token_interactWhereInput
  }

  /**
   * token_interact without action
   */
  export type token_interactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_interact
     */
    select?: token_interactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the token_interact
     */
    omit?: token_interactOmit<ExtArgs> | null
  }


  /**
   * Model pro_logs
   */

  export type AggregatePro_logs = {
    _count: Pro_logsCountAggregateOutputType | null
    _avg: Pro_logsAvgAggregateOutputType | null
    _sum: Pro_logsSumAggregateOutputType | null
    _min: Pro_logsMinAggregateOutputType | null
    _max: Pro_logsMaxAggregateOutputType | null
  }

  export type Pro_logsAvgAggregateOutputType = {
    id: number | null
    level: number | null
    renewal: number | null
  }

  export type Pro_logsSumAggregateOutputType = {
    id: number | null
    level: number | null
    renewal: number | null
  }

  export type Pro_logsMinAggregateOutputType = {
    id: number | null
    did: string | null
    signature: string | null
    level: number | null
    renewal: number | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
  }

  export type Pro_logsMaxAggregateOutputType = {
    id: number | null
    did: string | null
    signature: string | null
    level: number | null
    renewal: number | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
  }

  export type Pro_logsCountAggregateOutputType = {
    id: number
    did: number
    signature: number
    level: number
    renewal: number
    created_at: number
    updated_at: number
    email: number
    _all: number
  }


  export type Pro_logsAvgAggregateInputType = {
    id?: true
    level?: true
    renewal?: true
  }

  export type Pro_logsSumAggregateInputType = {
    id?: true
    level?: true
    renewal?: true
  }

  export type Pro_logsMinAggregateInputType = {
    id?: true
    did?: true
    signature?: true
    level?: true
    renewal?: true
    created_at?: true
    updated_at?: true
    email?: true
  }

  export type Pro_logsMaxAggregateInputType = {
    id?: true
    did?: true
    signature?: true
    level?: true
    renewal?: true
    created_at?: true
    updated_at?: true
    email?: true
  }

  export type Pro_logsCountAggregateInputType = {
    id?: true
    did?: true
    signature?: true
    level?: true
    renewal?: true
    created_at?: true
    updated_at?: true
    email?: true
    _all?: true
  }

  export type Pro_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pro_logs to aggregate.
     */
    where?: pro_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_logs to fetch.
     */
    orderBy?: pro_logsOrderByWithRelationInput | pro_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pro_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pro_logs
    **/
    _count?: true | Pro_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pro_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pro_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pro_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pro_logsMaxAggregateInputType
  }

  export type GetPro_logsAggregateType<T extends Pro_logsAggregateArgs> = {
        [P in keyof T & keyof AggregatePro_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePro_logs[P]>
      : GetScalarType<T[P], AggregatePro_logs[P]>
  }




  export type pro_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pro_logsWhereInput
    orderBy?: pro_logsOrderByWithAggregationInput | pro_logsOrderByWithAggregationInput[]
    by: Pro_logsScalarFieldEnum[] | Pro_logsScalarFieldEnum
    having?: pro_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pro_logsCountAggregateInputType | true
    _avg?: Pro_logsAvgAggregateInputType
    _sum?: Pro_logsSumAggregateInputType
    _min?: Pro_logsMinAggregateInputType
    _max?: Pro_logsMaxAggregateInputType
  }

  export type Pro_logsGroupByOutputType = {
    id: number
    did: string | null
    signature: string
    level: number
    renewal: number
    created_at: Date
    updated_at: Date
    email: string | null
    _count: Pro_logsCountAggregateOutputType | null
    _avg: Pro_logsAvgAggregateOutputType | null
    _sum: Pro_logsSumAggregateOutputType | null
    _min: Pro_logsMinAggregateOutputType | null
    _max: Pro_logsMaxAggregateOutputType | null
  }

  type GetPro_logsGroupByPayload<T extends pro_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pro_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pro_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pro_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Pro_logsGroupByOutputType[P]>
        }
      >
    >


  export type pro_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    signature?: boolean
    level?: boolean
    renewal?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
  }, ExtArgs["result"]["pro_logs"]>

  export type pro_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    signature?: boolean
    level?: boolean
    renewal?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
  }, ExtArgs["result"]["pro_logs"]>

  export type pro_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    signature?: boolean
    level?: boolean
    renewal?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
  }, ExtArgs["result"]["pro_logs"]>

  export type pro_logsSelectScalar = {
    id?: boolean
    did?: boolean
    signature?: boolean
    level?: boolean
    renewal?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
  }

  export type pro_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "did" | "signature" | "level" | "renewal" | "created_at" | "updated_at" | "email", ExtArgs["result"]["pro_logs"]>

  export type $pro_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pro_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      did: string | null
      signature: string
      level: number
      renewal: number
      created_at: Date
      updated_at: Date
      email: string | null
    }, ExtArgs["result"]["pro_logs"]>
    composites: {}
  }

  type pro_logsGetPayload<S extends boolean | null | undefined | pro_logsDefaultArgs> = $Result.GetResult<Prisma.$pro_logsPayload, S>

  type pro_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pro_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pro_logsCountAggregateInputType | true
    }

  export interface pro_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pro_logs'], meta: { name: 'pro_logs' } }
    /**
     * Find zero or one Pro_logs that matches the filter.
     * @param {pro_logsFindUniqueArgs} args - Arguments to find a Pro_logs
     * @example
     * // Get one Pro_logs
     * const pro_logs = await prisma.pro_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pro_logsFindUniqueArgs>(args: SelectSubset<T, pro_logsFindUniqueArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Pro_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pro_logsFindUniqueOrThrowArgs} args - Arguments to find a Pro_logs
     * @example
     * // Get one Pro_logs
     * const pro_logs = await prisma.pro_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pro_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, pro_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Pro_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_logsFindFirstArgs} args - Arguments to find a Pro_logs
     * @example
     * // Get one Pro_logs
     * const pro_logs = await prisma.pro_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pro_logsFindFirstArgs>(args?: SelectSubset<T, pro_logsFindFirstArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Pro_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_logsFindFirstOrThrowArgs} args - Arguments to find a Pro_logs
     * @example
     * // Get one Pro_logs
     * const pro_logs = await prisma.pro_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pro_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, pro_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Pro_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pro_logs
     * const pro_logs = await prisma.pro_logs.findMany()
     * 
     * // Get first 10 Pro_logs
     * const pro_logs = await prisma.pro_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pro_logsWithIdOnly = await prisma.pro_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pro_logsFindManyArgs>(args?: SelectSubset<T, pro_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Pro_logs.
     * @param {pro_logsCreateArgs} args - Arguments to create a Pro_logs.
     * @example
     * // Create one Pro_logs
     * const Pro_logs = await prisma.pro_logs.create({
     *   data: {
     *     // ... data to create a Pro_logs
     *   }
     * })
     * 
     */
    create<T extends pro_logsCreateArgs>(args: SelectSubset<T, pro_logsCreateArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Pro_logs.
     * @param {pro_logsCreateManyArgs} args - Arguments to create many Pro_logs.
     * @example
     * // Create many Pro_logs
     * const pro_logs = await prisma.pro_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pro_logsCreateManyArgs>(args?: SelectSubset<T, pro_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pro_logs and returns the data saved in the database.
     * @param {pro_logsCreateManyAndReturnArgs} args - Arguments to create many Pro_logs.
     * @example
     * // Create many Pro_logs
     * const pro_logs = await prisma.pro_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pro_logs and only return the `id`
     * const pro_logsWithIdOnly = await prisma.pro_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pro_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, pro_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Pro_logs.
     * @param {pro_logsDeleteArgs} args - Arguments to delete one Pro_logs.
     * @example
     * // Delete one Pro_logs
     * const Pro_logs = await prisma.pro_logs.delete({
     *   where: {
     *     // ... filter to delete one Pro_logs
     *   }
     * })
     * 
     */
    delete<T extends pro_logsDeleteArgs>(args: SelectSubset<T, pro_logsDeleteArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Pro_logs.
     * @param {pro_logsUpdateArgs} args - Arguments to update one Pro_logs.
     * @example
     * // Update one Pro_logs
     * const pro_logs = await prisma.pro_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pro_logsUpdateArgs>(args: SelectSubset<T, pro_logsUpdateArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Pro_logs.
     * @param {pro_logsDeleteManyArgs} args - Arguments to filter Pro_logs to delete.
     * @example
     * // Delete a few Pro_logs
     * const { count } = await prisma.pro_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pro_logsDeleteManyArgs>(args?: SelectSubset<T, pro_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pro_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pro_logs
     * const pro_logs = await prisma.pro_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pro_logsUpdateManyArgs>(args: SelectSubset<T, pro_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pro_logs and returns the data updated in the database.
     * @param {pro_logsUpdateManyAndReturnArgs} args - Arguments to update many Pro_logs.
     * @example
     * // Update many Pro_logs
     * const pro_logs = await prisma.pro_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pro_logs and only return the `id`
     * const pro_logsWithIdOnly = await prisma.pro_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pro_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, pro_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Pro_logs.
     * @param {pro_logsUpsertArgs} args - Arguments to update or create a Pro_logs.
     * @example
     * // Update or create a Pro_logs
     * const pro_logs = await prisma.pro_logs.upsert({
     *   create: {
     *     // ... data to create a Pro_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pro_logs we want to update
     *   }
     * })
     */
    upsert<T extends pro_logsUpsertArgs>(args: SelectSubset<T, pro_logsUpsertArgs<ExtArgs>>): Prisma__pro_logsClient<$Result.GetResult<Prisma.$pro_logsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Pro_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_logsCountArgs} args - Arguments to filter Pro_logs to count.
     * @example
     * // Count the number of Pro_logs
     * const count = await prisma.pro_logs.count({
     *   where: {
     *     // ... the filter for the Pro_logs we want to count
     *   }
     * })
    **/
    count<T extends pro_logsCountArgs>(
      args?: Subset<T, pro_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pro_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pro_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pro_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pro_logsAggregateArgs>(args: Subset<T, Pro_logsAggregateArgs>): Prisma.PrismaPromise<GetPro_logsAggregateType<T>>

    /**
     * Group by Pro_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pro_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pro_logsGroupByArgs['orderBy'] }
        : { orderBy?: pro_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pro_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPro_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pro_logs model
   */
  readonly fields: pro_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pro_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pro_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pro_logs model
   */ 
  interface pro_logsFieldRefs {
    readonly id: FieldRef<"pro_logs", 'Int'>
    readonly did: FieldRef<"pro_logs", 'String'>
    readonly signature: FieldRef<"pro_logs", 'String'>
    readonly level: FieldRef<"pro_logs", 'Int'>
    readonly renewal: FieldRef<"pro_logs", 'Int'>
    readonly created_at: FieldRef<"pro_logs", 'DateTime'>
    readonly updated_at: FieldRef<"pro_logs", 'DateTime'>
    readonly email: FieldRef<"pro_logs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pro_logs findUnique
   */
  export type pro_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * Filter, which pro_logs to fetch.
     */
    where: pro_logsWhereUniqueInput
  }

  /**
   * pro_logs findUniqueOrThrow
   */
  export type pro_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * Filter, which pro_logs to fetch.
     */
    where: pro_logsWhereUniqueInput
  }

  /**
   * pro_logs findFirst
   */
  export type pro_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * Filter, which pro_logs to fetch.
     */
    where?: pro_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_logs to fetch.
     */
    orderBy?: pro_logsOrderByWithRelationInput | pro_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pro_logs.
     */
    cursor?: pro_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pro_logs.
     */
    distinct?: Pro_logsScalarFieldEnum | Pro_logsScalarFieldEnum[]
  }

  /**
   * pro_logs findFirstOrThrow
   */
  export type pro_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * Filter, which pro_logs to fetch.
     */
    where?: pro_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_logs to fetch.
     */
    orderBy?: pro_logsOrderByWithRelationInput | pro_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pro_logs.
     */
    cursor?: pro_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pro_logs.
     */
    distinct?: Pro_logsScalarFieldEnum | Pro_logsScalarFieldEnum[]
  }

  /**
   * pro_logs findMany
   */
  export type pro_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * Filter, which pro_logs to fetch.
     */
    where?: pro_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_logs to fetch.
     */
    orderBy?: pro_logsOrderByWithRelationInput | pro_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pro_logs.
     */
    cursor?: pro_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_logs.
     */
    skip?: number
    distinct?: Pro_logsScalarFieldEnum | Pro_logsScalarFieldEnum[]
  }

  /**
   * pro_logs create
   */
  export type pro_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a pro_logs.
     */
    data: XOR<pro_logsCreateInput, pro_logsUncheckedCreateInput>
  }

  /**
   * pro_logs createMany
   */
  export type pro_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pro_logs.
     */
    data: pro_logsCreateManyInput | pro_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pro_logs createManyAndReturn
   */
  export type pro_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * The data used to create many pro_logs.
     */
    data: pro_logsCreateManyInput | pro_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pro_logs update
   */
  export type pro_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a pro_logs.
     */
    data: XOR<pro_logsUpdateInput, pro_logsUncheckedUpdateInput>
    /**
     * Choose, which pro_logs to update.
     */
    where: pro_logsWhereUniqueInput
  }

  /**
   * pro_logs updateMany
   */
  export type pro_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pro_logs.
     */
    data: XOR<pro_logsUpdateManyMutationInput, pro_logsUncheckedUpdateManyInput>
    /**
     * Filter which pro_logs to update
     */
    where?: pro_logsWhereInput
  }

  /**
   * pro_logs updateManyAndReturn
   */
  export type pro_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * The data used to update pro_logs.
     */
    data: XOR<pro_logsUpdateManyMutationInput, pro_logsUncheckedUpdateManyInput>
    /**
     * Filter which pro_logs to update
     */
    where?: pro_logsWhereInput
  }

  /**
   * pro_logs upsert
   */
  export type pro_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the pro_logs to update in case it exists.
     */
    where: pro_logsWhereUniqueInput
    /**
     * In case the pro_logs found by the `where` argument doesn't exist, create a new pro_logs with this data.
     */
    create: XOR<pro_logsCreateInput, pro_logsUncheckedCreateInput>
    /**
     * In case the pro_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pro_logsUpdateInput, pro_logsUncheckedUpdateInput>
  }

  /**
   * pro_logs delete
   */
  export type pro_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
    /**
     * Filter which pro_logs to delete.
     */
    where: pro_logsWhereUniqueInput
  }

  /**
   * pro_logs deleteMany
   */
  export type pro_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pro_logs to delete
     */
    where?: pro_logsWhereInput
  }

  /**
   * pro_logs without action
   */
  export type pro_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_logs
     */
    select?: pro_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_logs
     */
    omit?: pro_logsOmit<ExtArgs> | null
  }


  /**
   * Model tweets
   */

  export type AggregateTweets = {
    _count: TweetsCountAggregateOutputType | null
    _avg: TweetsAvgAggregateOutputType | null
    _sum: TweetsSumAggregateOutputType | null
    _min: TweetsMinAggregateOutputType | null
    _max: TweetsMaxAggregateOutputType | null
  }

  export type TweetsAvgAggregateOutputType = {
    id: number | null
    favorite_count: number | null
    quote_count: number | null
    reply_count: number | null
    retweet_count: number | null
    created_time: number | null
    views: number | null
  }

  export type TweetsSumAggregateOutputType = {
    id: number | null
    favorite_count: number | null
    quote_count: number | null
    reply_count: number | null
    retweet_count: number | null
    created_time: number | null
    views: number | null
  }

  export type TweetsMinAggregateOutputType = {
    id: number | null
    token_address: string | null
    symbol: string | null
    network: string | null
    tweet_id: string | null
    user_id: string | null
    text: string | null
    is_self_send: boolean | null
    is_retweet: boolean | null
    is_quote: boolean | null
    is_reply: boolean | null
    is_like: boolean | null
    related_tweet_id: string | null
    related_user_id: string | null
    favorite_count: number | null
    quote_count: number | null
    reply_count: number | null
    retweet_count: number | null
    author: string | null
    created_at: Date | null
    updated_at: Date | null
    created_time: number | null
    link: string | null
    media_type: string | null
    token_image: string | null
    views: number | null
    is_official: boolean | null
    text_zh: string | null
  }

  export type TweetsMaxAggregateOutputType = {
    id: number | null
    token_address: string | null
    symbol: string | null
    network: string | null
    tweet_id: string | null
    user_id: string | null
    text: string | null
    is_self_send: boolean | null
    is_retweet: boolean | null
    is_quote: boolean | null
    is_reply: boolean | null
    is_like: boolean | null
    related_tweet_id: string | null
    related_user_id: string | null
    favorite_count: number | null
    quote_count: number | null
    reply_count: number | null
    retweet_count: number | null
    author: string | null
    created_at: Date | null
    updated_at: Date | null
    created_time: number | null
    link: string | null
    media_type: string | null
    token_image: string | null
    views: number | null
    is_official: boolean | null
    text_zh: string | null
  }

  export type TweetsCountAggregateOutputType = {
    id: number
    token_address: number
    symbol: number
    network: number
    tweet_id: number
    user_id: number
    text: number
    medias: number
    is_self_send: number
    is_retweet: number
    is_quote: number
    is_reply: number
    is_like: number
    related_tweet_id: number
    related_user_id: number
    favorite_count: number
    quote_count: number
    reply_count: number
    retweet_count: number
    author: number
    user: number
    created_at: number
    updated_at: number
    created_time: number
    link: number
    media_type: number
    token_image: number
    related_tweets: number
    views: number
    is_official: number
    text_zh: number
    _all: number
  }


  export type TweetsAvgAggregateInputType = {
    id?: true
    favorite_count?: true
    quote_count?: true
    reply_count?: true
    retweet_count?: true
    created_time?: true
    views?: true
  }

  export type TweetsSumAggregateInputType = {
    id?: true
    favorite_count?: true
    quote_count?: true
    reply_count?: true
    retweet_count?: true
    created_time?: true
    views?: true
  }

  export type TweetsMinAggregateInputType = {
    id?: true
    token_address?: true
    symbol?: true
    network?: true
    tweet_id?: true
    user_id?: true
    text?: true
    is_self_send?: true
    is_retweet?: true
    is_quote?: true
    is_reply?: true
    is_like?: true
    related_tweet_id?: true
    related_user_id?: true
    favorite_count?: true
    quote_count?: true
    reply_count?: true
    retweet_count?: true
    author?: true
    created_at?: true
    updated_at?: true
    created_time?: true
    link?: true
    media_type?: true
    token_image?: true
    views?: true
    is_official?: true
    text_zh?: true
  }

  export type TweetsMaxAggregateInputType = {
    id?: true
    token_address?: true
    symbol?: true
    network?: true
    tweet_id?: true
    user_id?: true
    text?: true
    is_self_send?: true
    is_retweet?: true
    is_quote?: true
    is_reply?: true
    is_like?: true
    related_tweet_id?: true
    related_user_id?: true
    favorite_count?: true
    quote_count?: true
    reply_count?: true
    retweet_count?: true
    author?: true
    created_at?: true
    updated_at?: true
    created_time?: true
    link?: true
    media_type?: true
    token_image?: true
    views?: true
    is_official?: true
    text_zh?: true
  }

  export type TweetsCountAggregateInputType = {
    id?: true
    token_address?: true
    symbol?: true
    network?: true
    tweet_id?: true
    user_id?: true
    text?: true
    medias?: true
    is_self_send?: true
    is_retweet?: true
    is_quote?: true
    is_reply?: true
    is_like?: true
    related_tweet_id?: true
    related_user_id?: true
    favorite_count?: true
    quote_count?: true
    reply_count?: true
    retweet_count?: true
    author?: true
    user?: true
    created_at?: true
    updated_at?: true
    created_time?: true
    link?: true
    media_type?: true
    token_image?: true
    related_tweets?: true
    views?: true
    is_official?: true
    text_zh?: true
    _all?: true
  }

  export type TweetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tweets to aggregate.
     */
    where?: tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweets to fetch.
     */
    orderBy?: tweetsOrderByWithRelationInput | tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tweets
    **/
    _count?: true | TweetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TweetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TweetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TweetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TweetsMaxAggregateInputType
  }

  export type GetTweetsAggregateType<T extends TweetsAggregateArgs> = {
        [P in keyof T & keyof AggregateTweets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTweets[P]>
      : GetScalarType<T[P], AggregateTweets[P]>
  }




  export type tweetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tweetsWhereInput
    orderBy?: tweetsOrderByWithAggregationInput | tweetsOrderByWithAggregationInput[]
    by: TweetsScalarFieldEnum[] | TweetsScalarFieldEnum
    having?: tweetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TweetsCountAggregateInputType | true
    _avg?: TweetsAvgAggregateInputType
    _sum?: TweetsSumAggregateInputType
    _min?: TweetsMinAggregateInputType
    _max?: TweetsMaxAggregateInputType
  }

  export type TweetsGroupByOutputType = {
    id: number
    token_address: string
    symbol: string
    network: string
    tweet_id: string
    user_id: string
    text: string
    medias: JsonValue | null
    is_self_send: boolean
    is_retweet: boolean
    is_quote: boolean
    is_reply: boolean
    is_like: boolean
    related_tweet_id: string
    related_user_id: string
    favorite_count: number
    quote_count: number
    reply_count: number
    retweet_count: number
    author: string
    user: JsonValue
    created_at: Date
    updated_at: Date
    created_time: number
    link: string
    media_type: string
    token_image: string
    related_tweets: JsonValue
    views: number
    is_official: boolean
    text_zh: string
    _count: TweetsCountAggregateOutputType | null
    _avg: TweetsAvgAggregateOutputType | null
    _sum: TweetsSumAggregateOutputType | null
    _min: TweetsMinAggregateOutputType | null
    _max: TweetsMaxAggregateOutputType | null
  }

  type GetTweetsGroupByPayload<T extends tweetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TweetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TweetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TweetsGroupByOutputType[P]>
            : GetScalarType<T[P], TweetsGroupByOutputType[P]>
        }
      >
    >


  export type tweetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    user_id?: boolean
    text?: boolean
    medias?: boolean
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: boolean
    related_user_id?: boolean
    favorite_count?: boolean
    quote_count?: boolean
    reply_count?: boolean
    retweet_count?: boolean
    author?: boolean
    user?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_time?: boolean
    link?: boolean
    media_type?: boolean
    token_image?: boolean
    related_tweets?: boolean
    views?: boolean
    is_official?: boolean
    text_zh?: boolean
  }, ExtArgs["result"]["tweets"]>

  export type tweetsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    user_id?: boolean
    text?: boolean
    medias?: boolean
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: boolean
    related_user_id?: boolean
    favorite_count?: boolean
    quote_count?: boolean
    reply_count?: boolean
    retweet_count?: boolean
    author?: boolean
    user?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_time?: boolean
    link?: boolean
    media_type?: boolean
    token_image?: boolean
    related_tweets?: boolean
    views?: boolean
    is_official?: boolean
    text_zh?: boolean
  }, ExtArgs["result"]["tweets"]>

  export type tweetsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    user_id?: boolean
    text?: boolean
    medias?: boolean
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: boolean
    related_user_id?: boolean
    favorite_count?: boolean
    quote_count?: boolean
    reply_count?: boolean
    retweet_count?: boolean
    author?: boolean
    user?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_time?: boolean
    link?: boolean
    media_type?: boolean
    token_image?: boolean
    related_tweets?: boolean
    views?: boolean
    is_official?: boolean
    text_zh?: boolean
  }, ExtArgs["result"]["tweets"]>

  export type tweetsSelectScalar = {
    id?: boolean
    token_address?: boolean
    symbol?: boolean
    network?: boolean
    tweet_id?: boolean
    user_id?: boolean
    text?: boolean
    medias?: boolean
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: boolean
    related_user_id?: boolean
    favorite_count?: boolean
    quote_count?: boolean
    reply_count?: boolean
    retweet_count?: boolean
    author?: boolean
    user?: boolean
    created_at?: boolean
    updated_at?: boolean
    created_time?: boolean
    link?: boolean
    media_type?: boolean
    token_image?: boolean
    related_tweets?: boolean
    views?: boolean
    is_official?: boolean
    text_zh?: boolean
  }

  export type tweetsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token_address" | "symbol" | "network" | "tweet_id" | "user_id" | "text" | "medias" | "is_self_send" | "is_retweet" | "is_quote" | "is_reply" | "is_like" | "related_tweet_id" | "related_user_id" | "favorite_count" | "quote_count" | "reply_count" | "retweet_count" | "author" | "user" | "created_at" | "updated_at" | "created_time" | "link" | "media_type" | "token_image" | "related_tweets" | "views" | "is_official" | "text_zh", ExtArgs["result"]["tweets"]>

  export type $tweetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tweets"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token_address: string
      symbol: string
      network: string
      tweet_id: string
      user_id: string
      text: string
      medias: Prisma.JsonValue | null
      is_self_send: boolean
      is_retweet: boolean
      is_quote: boolean
      is_reply: boolean
      is_like: boolean
      related_tweet_id: string
      related_user_id: string
      favorite_count: number
      quote_count: number
      reply_count: number
      retweet_count: number
      author: string
      user: Prisma.JsonValue
      created_at: Date
      updated_at: Date
      created_time: number
      link: string
      media_type: string
      token_image: string
      related_tweets: Prisma.JsonValue
      views: number
      is_official: boolean
      text_zh: string
    }, ExtArgs["result"]["tweets"]>
    composites: {}
  }

  type tweetsGetPayload<S extends boolean | null | undefined | tweetsDefaultArgs> = $Result.GetResult<Prisma.$tweetsPayload, S>

  type tweetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tweetsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TweetsCountAggregateInputType | true
    }

  export interface tweetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tweets'], meta: { name: 'tweets' } }
    /**
     * Find zero or one Tweets that matches the filter.
     * @param {tweetsFindUniqueArgs} args - Arguments to find a Tweets
     * @example
     * // Get one Tweets
     * const tweets = await prisma.tweets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tweetsFindUniqueArgs>(args: SelectSubset<T, tweetsFindUniqueArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Tweets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tweetsFindUniqueOrThrowArgs} args - Arguments to find a Tweets
     * @example
     * // Get one Tweets
     * const tweets = await prisma.tweets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tweetsFindUniqueOrThrowArgs>(args: SelectSubset<T, tweetsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Tweets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweetsFindFirstArgs} args - Arguments to find a Tweets
     * @example
     * // Get one Tweets
     * const tweets = await prisma.tweets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tweetsFindFirstArgs>(args?: SelectSubset<T, tweetsFindFirstArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Tweets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweetsFindFirstOrThrowArgs} args - Arguments to find a Tweets
     * @example
     * // Get one Tweets
     * const tweets = await prisma.tweets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tweetsFindFirstOrThrowArgs>(args?: SelectSubset<T, tweetsFindFirstOrThrowArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Tweets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweetsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tweets
     * const tweets = await prisma.tweets.findMany()
     * 
     * // Get first 10 Tweets
     * const tweets = await prisma.tweets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tweetsWithIdOnly = await prisma.tweets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tweetsFindManyArgs>(args?: SelectSubset<T, tweetsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Tweets.
     * @param {tweetsCreateArgs} args - Arguments to create a Tweets.
     * @example
     * // Create one Tweets
     * const Tweets = await prisma.tweets.create({
     *   data: {
     *     // ... data to create a Tweets
     *   }
     * })
     * 
     */
    create<T extends tweetsCreateArgs>(args: SelectSubset<T, tweetsCreateArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Tweets.
     * @param {tweetsCreateManyArgs} args - Arguments to create many Tweets.
     * @example
     * // Create many Tweets
     * const tweets = await prisma.tweets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tweetsCreateManyArgs>(args?: SelectSubset<T, tweetsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tweets and returns the data saved in the database.
     * @param {tweetsCreateManyAndReturnArgs} args - Arguments to create many Tweets.
     * @example
     * // Create many Tweets
     * const tweets = await prisma.tweets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tweets and only return the `id`
     * const tweetsWithIdOnly = await prisma.tweets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tweetsCreateManyAndReturnArgs>(args?: SelectSubset<T, tweetsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Tweets.
     * @param {tweetsDeleteArgs} args - Arguments to delete one Tweets.
     * @example
     * // Delete one Tweets
     * const Tweets = await prisma.tweets.delete({
     *   where: {
     *     // ... filter to delete one Tweets
     *   }
     * })
     * 
     */
    delete<T extends tweetsDeleteArgs>(args: SelectSubset<T, tweetsDeleteArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Tweets.
     * @param {tweetsUpdateArgs} args - Arguments to update one Tweets.
     * @example
     * // Update one Tweets
     * const tweets = await prisma.tweets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tweetsUpdateArgs>(args: SelectSubset<T, tweetsUpdateArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Tweets.
     * @param {tweetsDeleteManyArgs} args - Arguments to filter Tweets to delete.
     * @example
     * // Delete a few Tweets
     * const { count } = await prisma.tweets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tweetsDeleteManyArgs>(args?: SelectSubset<T, tweetsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tweets
     * const tweets = await prisma.tweets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tweetsUpdateManyArgs>(args: SelectSubset<T, tweetsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tweets and returns the data updated in the database.
     * @param {tweetsUpdateManyAndReturnArgs} args - Arguments to update many Tweets.
     * @example
     * // Update many Tweets
     * const tweets = await prisma.tweets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tweets and only return the `id`
     * const tweetsWithIdOnly = await prisma.tweets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tweetsUpdateManyAndReturnArgs>(args: SelectSubset<T, tweetsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Tweets.
     * @param {tweetsUpsertArgs} args - Arguments to update or create a Tweets.
     * @example
     * // Update or create a Tweets
     * const tweets = await prisma.tweets.upsert({
     *   create: {
     *     // ... data to create a Tweets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tweets we want to update
     *   }
     * })
     */
    upsert<T extends tweetsUpsertArgs>(args: SelectSubset<T, tweetsUpsertArgs<ExtArgs>>): Prisma__tweetsClient<$Result.GetResult<Prisma.$tweetsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweetsCountArgs} args - Arguments to filter Tweets to count.
     * @example
     * // Count the number of Tweets
     * const count = await prisma.tweets.count({
     *   where: {
     *     // ... the filter for the Tweets we want to count
     *   }
     * })
    **/
    count<T extends tweetsCountArgs>(
      args?: Subset<T, tweetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TweetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TweetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TweetsAggregateArgs>(args: Subset<T, TweetsAggregateArgs>): Prisma.PrismaPromise<GetTweetsAggregateType<T>>

    /**
     * Group by Tweets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tweetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tweetsGroupByArgs['orderBy'] }
        : { orderBy?: tweetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tweetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTweetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tweets model
   */
  readonly fields: tweetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tweets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tweetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tweets model
   */ 
  interface tweetsFieldRefs {
    readonly id: FieldRef<"tweets", 'Int'>
    readonly token_address: FieldRef<"tweets", 'String'>
    readonly symbol: FieldRef<"tweets", 'String'>
    readonly network: FieldRef<"tweets", 'String'>
    readonly tweet_id: FieldRef<"tweets", 'String'>
    readonly user_id: FieldRef<"tweets", 'String'>
    readonly text: FieldRef<"tweets", 'String'>
    readonly medias: FieldRef<"tweets", 'Json'>
    readonly is_self_send: FieldRef<"tweets", 'Boolean'>
    readonly is_retweet: FieldRef<"tweets", 'Boolean'>
    readonly is_quote: FieldRef<"tweets", 'Boolean'>
    readonly is_reply: FieldRef<"tweets", 'Boolean'>
    readonly is_like: FieldRef<"tweets", 'Boolean'>
    readonly related_tweet_id: FieldRef<"tweets", 'String'>
    readonly related_user_id: FieldRef<"tweets", 'String'>
    readonly favorite_count: FieldRef<"tweets", 'Int'>
    readonly quote_count: FieldRef<"tweets", 'Int'>
    readonly reply_count: FieldRef<"tweets", 'Int'>
    readonly retweet_count: FieldRef<"tweets", 'Int'>
    readonly author: FieldRef<"tweets", 'String'>
    readonly user: FieldRef<"tweets", 'Json'>
    readonly created_at: FieldRef<"tweets", 'DateTime'>
    readonly updated_at: FieldRef<"tweets", 'DateTime'>
    readonly created_time: FieldRef<"tweets", 'Int'>
    readonly link: FieldRef<"tweets", 'String'>
    readonly media_type: FieldRef<"tweets", 'String'>
    readonly token_image: FieldRef<"tweets", 'String'>
    readonly related_tweets: FieldRef<"tweets", 'Json'>
    readonly views: FieldRef<"tweets", 'Int'>
    readonly is_official: FieldRef<"tweets", 'Boolean'>
    readonly text_zh: FieldRef<"tweets", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tweets findUnique
   */
  export type tweetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * Filter, which tweets to fetch.
     */
    where: tweetsWhereUniqueInput
  }

  /**
   * tweets findUniqueOrThrow
   */
  export type tweetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * Filter, which tweets to fetch.
     */
    where: tweetsWhereUniqueInput
  }

  /**
   * tweets findFirst
   */
  export type tweetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * Filter, which tweets to fetch.
     */
    where?: tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweets to fetch.
     */
    orderBy?: tweetsOrderByWithRelationInput | tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tweets.
     */
    cursor?: tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tweets.
     */
    distinct?: TweetsScalarFieldEnum | TweetsScalarFieldEnum[]
  }

  /**
   * tweets findFirstOrThrow
   */
  export type tweetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * Filter, which tweets to fetch.
     */
    where?: tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweets to fetch.
     */
    orderBy?: tweetsOrderByWithRelationInput | tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tweets.
     */
    cursor?: tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tweets.
     */
    distinct?: TweetsScalarFieldEnum | TweetsScalarFieldEnum[]
  }

  /**
   * tweets findMany
   */
  export type tweetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * Filter, which tweets to fetch.
     */
    where?: tweetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweets to fetch.
     */
    orderBy?: tweetsOrderByWithRelationInput | tweetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tweets.
     */
    cursor?: tweetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweets.
     */
    skip?: number
    distinct?: TweetsScalarFieldEnum | TweetsScalarFieldEnum[]
  }

  /**
   * tweets create
   */
  export type tweetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * The data needed to create a tweets.
     */
    data: XOR<tweetsCreateInput, tweetsUncheckedCreateInput>
  }

  /**
   * tweets createMany
   */
  export type tweetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tweets.
     */
    data: tweetsCreateManyInput | tweetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tweets createManyAndReturn
   */
  export type tweetsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * The data used to create many tweets.
     */
    data: tweetsCreateManyInput | tweetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tweets update
   */
  export type tweetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * The data needed to update a tweets.
     */
    data: XOR<tweetsUpdateInput, tweetsUncheckedUpdateInput>
    /**
     * Choose, which tweets to update.
     */
    where: tweetsWhereUniqueInput
  }

  /**
   * tweets updateMany
   */
  export type tweetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tweets.
     */
    data: XOR<tweetsUpdateManyMutationInput, tweetsUncheckedUpdateManyInput>
    /**
     * Filter which tweets to update
     */
    where?: tweetsWhereInput
  }

  /**
   * tweets updateManyAndReturn
   */
  export type tweetsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * The data used to update tweets.
     */
    data: XOR<tweetsUpdateManyMutationInput, tweetsUncheckedUpdateManyInput>
    /**
     * Filter which tweets to update
     */
    where?: tweetsWhereInput
  }

  /**
   * tweets upsert
   */
  export type tweetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * The filter to search for the tweets to update in case it exists.
     */
    where: tweetsWhereUniqueInput
    /**
     * In case the tweets found by the `where` argument doesn't exist, create a new tweets with this data.
     */
    create: XOR<tweetsCreateInput, tweetsUncheckedCreateInput>
    /**
     * In case the tweets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tweetsUpdateInput, tweetsUncheckedUpdateInput>
  }

  /**
   * tweets delete
   */
  export type tweetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
    /**
     * Filter which tweets to delete.
     */
    where: tweetsWhereUniqueInput
  }

  /**
   * tweets deleteMany
   */
  export type tweetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tweets to delete
     */
    where?: tweetsWhereInput
  }

  /**
   * tweets without action
   */
  export type tweetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweets
     */
    select?: tweetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweets
     */
    omit?: tweetsOmit<ExtArgs> | null
  }


  /**
   * Model filter_rulers
   */

  export type AggregateFilter_rulers = {
    _count: Filter_rulersCountAggregateOutputType | null
    _avg: Filter_rulersAvgAggregateOutputType | null
    _sum: Filter_rulersSumAggregateOutputType | null
    _min: Filter_rulersMinAggregateOutputType | null
    _max: Filter_rulersMaxAggregateOutputType | null
  }

  export type Filter_rulersAvgAggregateOutputType = {
    id: number | null
  }

  export type Filter_rulersSumAggregateOutputType = {
    id: number | null
  }

  export type Filter_rulersMinAggregateOutputType = {
    id: number | null
    type: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Filter_rulersMaxAggregateOutputType = {
    id: number | null
    type: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Filter_rulersCountAggregateOutputType = {
    id: number
    type: number
    list: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Filter_rulersAvgAggregateInputType = {
    id?: true
  }

  export type Filter_rulersSumAggregateInputType = {
    id?: true
  }

  export type Filter_rulersMinAggregateInputType = {
    id?: true
    type?: true
    created_at?: true
    updated_at?: true
  }

  export type Filter_rulersMaxAggregateInputType = {
    id?: true
    type?: true
    created_at?: true
    updated_at?: true
  }

  export type Filter_rulersCountAggregateInputType = {
    id?: true
    type?: true
    list?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Filter_rulersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which filter_rulers to aggregate.
     */
    where?: filter_rulersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filter_rulers to fetch.
     */
    orderBy?: filter_rulersOrderByWithRelationInput | filter_rulersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: filter_rulersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filter_rulers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filter_rulers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned filter_rulers
    **/
    _count?: true | Filter_rulersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Filter_rulersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Filter_rulersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Filter_rulersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Filter_rulersMaxAggregateInputType
  }

  export type GetFilter_rulersAggregateType<T extends Filter_rulersAggregateArgs> = {
        [P in keyof T & keyof AggregateFilter_rulers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFilter_rulers[P]>
      : GetScalarType<T[P], AggregateFilter_rulers[P]>
  }




  export type filter_rulersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: filter_rulersWhereInput
    orderBy?: filter_rulersOrderByWithAggregationInput | filter_rulersOrderByWithAggregationInput[]
    by: Filter_rulersScalarFieldEnum[] | Filter_rulersScalarFieldEnum
    having?: filter_rulersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Filter_rulersCountAggregateInputType | true
    _avg?: Filter_rulersAvgAggregateInputType
    _sum?: Filter_rulersSumAggregateInputType
    _min?: Filter_rulersMinAggregateInputType
    _max?: Filter_rulersMaxAggregateInputType
  }

  export type Filter_rulersGroupByOutputType = {
    id: number
    type: string
    list: string[]
    created_at: Date
    updated_at: Date
    _count: Filter_rulersCountAggregateOutputType | null
    _avg: Filter_rulersAvgAggregateOutputType | null
    _sum: Filter_rulersSumAggregateOutputType | null
    _min: Filter_rulersMinAggregateOutputType | null
    _max: Filter_rulersMaxAggregateOutputType | null
  }

  type GetFilter_rulersGroupByPayload<T extends filter_rulersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Filter_rulersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Filter_rulersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Filter_rulersGroupByOutputType[P]>
            : GetScalarType<T[P], Filter_rulersGroupByOutputType[P]>
        }
      >
    >


  export type filter_rulersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    list?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["filter_rulers"]>

  export type filter_rulersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    list?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["filter_rulers"]>

  export type filter_rulersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    list?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["filter_rulers"]>

  export type filter_rulersSelectScalar = {
    id?: boolean
    type?: boolean
    list?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type filter_rulersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "list" | "created_at" | "updated_at", ExtArgs["result"]["filter_rulers"]>

  export type $filter_rulersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "filter_rulers"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      list: string[]
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["filter_rulers"]>
    composites: {}
  }

  type filter_rulersGetPayload<S extends boolean | null | undefined | filter_rulersDefaultArgs> = $Result.GetResult<Prisma.$filter_rulersPayload, S>

  type filter_rulersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<filter_rulersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Filter_rulersCountAggregateInputType | true
    }

  export interface filter_rulersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['filter_rulers'], meta: { name: 'filter_rulers' } }
    /**
     * Find zero or one Filter_rulers that matches the filter.
     * @param {filter_rulersFindUniqueArgs} args - Arguments to find a Filter_rulers
     * @example
     * // Get one Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends filter_rulersFindUniqueArgs>(args: SelectSubset<T, filter_rulersFindUniqueArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Filter_rulers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {filter_rulersFindUniqueOrThrowArgs} args - Arguments to find a Filter_rulers
     * @example
     * // Get one Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends filter_rulersFindUniqueOrThrowArgs>(args: SelectSubset<T, filter_rulersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Filter_rulers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filter_rulersFindFirstArgs} args - Arguments to find a Filter_rulers
     * @example
     * // Get one Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends filter_rulersFindFirstArgs>(args?: SelectSubset<T, filter_rulersFindFirstArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Filter_rulers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filter_rulersFindFirstOrThrowArgs} args - Arguments to find a Filter_rulers
     * @example
     * // Get one Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends filter_rulersFindFirstOrThrowArgs>(args?: SelectSubset<T, filter_rulersFindFirstOrThrowArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Filter_rulers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filter_rulersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.findMany()
     * 
     * // Get first 10 Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filter_rulersWithIdOnly = await prisma.filter_rulers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends filter_rulersFindManyArgs>(args?: SelectSubset<T, filter_rulersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Filter_rulers.
     * @param {filter_rulersCreateArgs} args - Arguments to create a Filter_rulers.
     * @example
     * // Create one Filter_rulers
     * const Filter_rulers = await prisma.filter_rulers.create({
     *   data: {
     *     // ... data to create a Filter_rulers
     *   }
     * })
     * 
     */
    create<T extends filter_rulersCreateArgs>(args: SelectSubset<T, filter_rulersCreateArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Filter_rulers.
     * @param {filter_rulersCreateManyArgs} args - Arguments to create many Filter_rulers.
     * @example
     * // Create many Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends filter_rulersCreateManyArgs>(args?: SelectSubset<T, filter_rulersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Filter_rulers and returns the data saved in the database.
     * @param {filter_rulersCreateManyAndReturnArgs} args - Arguments to create many Filter_rulers.
     * @example
     * // Create many Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Filter_rulers and only return the `id`
     * const filter_rulersWithIdOnly = await prisma.filter_rulers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends filter_rulersCreateManyAndReturnArgs>(args?: SelectSubset<T, filter_rulersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Filter_rulers.
     * @param {filter_rulersDeleteArgs} args - Arguments to delete one Filter_rulers.
     * @example
     * // Delete one Filter_rulers
     * const Filter_rulers = await prisma.filter_rulers.delete({
     *   where: {
     *     // ... filter to delete one Filter_rulers
     *   }
     * })
     * 
     */
    delete<T extends filter_rulersDeleteArgs>(args: SelectSubset<T, filter_rulersDeleteArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Filter_rulers.
     * @param {filter_rulersUpdateArgs} args - Arguments to update one Filter_rulers.
     * @example
     * // Update one Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends filter_rulersUpdateArgs>(args: SelectSubset<T, filter_rulersUpdateArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Filter_rulers.
     * @param {filter_rulersDeleteManyArgs} args - Arguments to filter Filter_rulers to delete.
     * @example
     * // Delete a few Filter_rulers
     * const { count } = await prisma.filter_rulers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends filter_rulersDeleteManyArgs>(args?: SelectSubset<T, filter_rulersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Filter_rulers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filter_rulersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends filter_rulersUpdateManyArgs>(args: SelectSubset<T, filter_rulersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Filter_rulers and returns the data updated in the database.
     * @param {filter_rulersUpdateManyAndReturnArgs} args - Arguments to update many Filter_rulers.
     * @example
     * // Update many Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Filter_rulers and only return the `id`
     * const filter_rulersWithIdOnly = await prisma.filter_rulers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends filter_rulersUpdateManyAndReturnArgs>(args: SelectSubset<T, filter_rulersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Filter_rulers.
     * @param {filter_rulersUpsertArgs} args - Arguments to update or create a Filter_rulers.
     * @example
     * // Update or create a Filter_rulers
     * const filter_rulers = await prisma.filter_rulers.upsert({
     *   create: {
     *     // ... data to create a Filter_rulers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Filter_rulers we want to update
     *   }
     * })
     */
    upsert<T extends filter_rulersUpsertArgs>(args: SelectSubset<T, filter_rulersUpsertArgs<ExtArgs>>): Prisma__filter_rulersClient<$Result.GetResult<Prisma.$filter_rulersPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Filter_rulers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filter_rulersCountArgs} args - Arguments to filter Filter_rulers to count.
     * @example
     * // Count the number of Filter_rulers
     * const count = await prisma.filter_rulers.count({
     *   where: {
     *     // ... the filter for the Filter_rulers we want to count
     *   }
     * })
    **/
    count<T extends filter_rulersCountArgs>(
      args?: Subset<T, filter_rulersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Filter_rulersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Filter_rulers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Filter_rulersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Filter_rulersAggregateArgs>(args: Subset<T, Filter_rulersAggregateArgs>): Prisma.PrismaPromise<GetFilter_rulersAggregateType<T>>

    /**
     * Group by Filter_rulers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filter_rulersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends filter_rulersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: filter_rulersGroupByArgs['orderBy'] }
        : { orderBy?: filter_rulersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, filter_rulersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilter_rulersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the filter_rulers model
   */
  readonly fields: filter_rulersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for filter_rulers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__filter_rulersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the filter_rulers model
   */ 
  interface filter_rulersFieldRefs {
    readonly id: FieldRef<"filter_rulers", 'Int'>
    readonly type: FieldRef<"filter_rulers", 'String'>
    readonly list: FieldRef<"filter_rulers", 'String[]'>
    readonly created_at: FieldRef<"filter_rulers", 'DateTime'>
    readonly updated_at: FieldRef<"filter_rulers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * filter_rulers findUnique
   */
  export type filter_rulersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * Filter, which filter_rulers to fetch.
     */
    where: filter_rulersWhereUniqueInput
  }

  /**
   * filter_rulers findUniqueOrThrow
   */
  export type filter_rulersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * Filter, which filter_rulers to fetch.
     */
    where: filter_rulersWhereUniqueInput
  }

  /**
   * filter_rulers findFirst
   */
  export type filter_rulersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * Filter, which filter_rulers to fetch.
     */
    where?: filter_rulersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filter_rulers to fetch.
     */
    orderBy?: filter_rulersOrderByWithRelationInput | filter_rulersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filter_rulers.
     */
    cursor?: filter_rulersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filter_rulers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filter_rulers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filter_rulers.
     */
    distinct?: Filter_rulersScalarFieldEnum | Filter_rulersScalarFieldEnum[]
  }

  /**
   * filter_rulers findFirstOrThrow
   */
  export type filter_rulersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * Filter, which filter_rulers to fetch.
     */
    where?: filter_rulersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filter_rulers to fetch.
     */
    orderBy?: filter_rulersOrderByWithRelationInput | filter_rulersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for filter_rulers.
     */
    cursor?: filter_rulersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filter_rulers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filter_rulers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of filter_rulers.
     */
    distinct?: Filter_rulersScalarFieldEnum | Filter_rulersScalarFieldEnum[]
  }

  /**
   * filter_rulers findMany
   */
  export type filter_rulersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * Filter, which filter_rulers to fetch.
     */
    where?: filter_rulersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of filter_rulers to fetch.
     */
    orderBy?: filter_rulersOrderByWithRelationInput | filter_rulersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing filter_rulers.
     */
    cursor?: filter_rulersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` filter_rulers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` filter_rulers.
     */
    skip?: number
    distinct?: Filter_rulersScalarFieldEnum | Filter_rulersScalarFieldEnum[]
  }

  /**
   * filter_rulers create
   */
  export type filter_rulersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * The data needed to create a filter_rulers.
     */
    data?: XOR<filter_rulersCreateInput, filter_rulersUncheckedCreateInput>
  }

  /**
   * filter_rulers createMany
   */
  export type filter_rulersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many filter_rulers.
     */
    data: filter_rulersCreateManyInput | filter_rulersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * filter_rulers createManyAndReturn
   */
  export type filter_rulersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * The data used to create many filter_rulers.
     */
    data: filter_rulersCreateManyInput | filter_rulersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * filter_rulers update
   */
  export type filter_rulersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * The data needed to update a filter_rulers.
     */
    data: XOR<filter_rulersUpdateInput, filter_rulersUncheckedUpdateInput>
    /**
     * Choose, which filter_rulers to update.
     */
    where: filter_rulersWhereUniqueInput
  }

  /**
   * filter_rulers updateMany
   */
  export type filter_rulersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update filter_rulers.
     */
    data: XOR<filter_rulersUpdateManyMutationInput, filter_rulersUncheckedUpdateManyInput>
    /**
     * Filter which filter_rulers to update
     */
    where?: filter_rulersWhereInput
  }

  /**
   * filter_rulers updateManyAndReturn
   */
  export type filter_rulersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * The data used to update filter_rulers.
     */
    data: XOR<filter_rulersUpdateManyMutationInput, filter_rulersUncheckedUpdateManyInput>
    /**
     * Filter which filter_rulers to update
     */
    where?: filter_rulersWhereInput
  }

  /**
   * filter_rulers upsert
   */
  export type filter_rulersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * The filter to search for the filter_rulers to update in case it exists.
     */
    where: filter_rulersWhereUniqueInput
    /**
     * In case the filter_rulers found by the `where` argument doesn't exist, create a new filter_rulers with this data.
     */
    create: XOR<filter_rulersCreateInput, filter_rulersUncheckedCreateInput>
    /**
     * In case the filter_rulers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<filter_rulersUpdateInput, filter_rulersUncheckedUpdateInput>
  }

  /**
   * filter_rulers delete
   */
  export type filter_rulersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
    /**
     * Filter which filter_rulers to delete.
     */
    where: filter_rulersWhereUniqueInput
  }

  /**
   * filter_rulers deleteMany
   */
  export type filter_rulersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which filter_rulers to delete
     */
    where?: filter_rulersWhereInput
  }

  /**
   * filter_rulers without action
   */
  export type filter_rulersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the filter_rulers
     */
    select?: filter_rulersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the filter_rulers
     */
    omit?: filter_rulersOmit<ExtArgs> | null
  }


  /**
   * Model tweet_latest_id
   */

  export type AggregateTweet_latest_id = {
    _count: Tweet_latest_idCountAggregateOutputType | null
    _avg: Tweet_latest_idAvgAggregateOutputType | null
    _sum: Tweet_latest_idSumAggregateOutputType | null
    _min: Tweet_latest_idMinAggregateOutputType | null
    _max: Tweet_latest_idMaxAggregateOutputType | null
  }

  export type Tweet_latest_idAvgAggregateOutputType = {
    id: number | null
    created_time: number | null
  }

  export type Tweet_latest_idSumAggregateOutputType = {
    id: number | null
    created_time: number | null
  }

  export type Tweet_latest_idMinAggregateOutputType = {
    id: number | null
    tweet_id: string | null
    created_time: number | null
    token_address: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Tweet_latest_idMaxAggregateOutputType = {
    id: number | null
    tweet_id: string | null
    created_time: number | null
    token_address: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Tweet_latest_idCountAggregateOutputType = {
    id: number
    tweet_id: number
    created_time: number
    token_address: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Tweet_latest_idAvgAggregateInputType = {
    id?: true
    created_time?: true
  }

  export type Tweet_latest_idSumAggregateInputType = {
    id?: true
    created_time?: true
  }

  export type Tweet_latest_idMinAggregateInputType = {
    id?: true
    tweet_id?: true
    created_time?: true
    token_address?: true
    created_at?: true
    updated_at?: true
  }

  export type Tweet_latest_idMaxAggregateInputType = {
    id?: true
    tweet_id?: true
    created_time?: true
    token_address?: true
    created_at?: true
    updated_at?: true
  }

  export type Tweet_latest_idCountAggregateInputType = {
    id?: true
    tweet_id?: true
    created_time?: true
    token_address?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Tweet_latest_idAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tweet_latest_id to aggregate.
     */
    where?: tweet_latest_idWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweet_latest_ids to fetch.
     */
    orderBy?: tweet_latest_idOrderByWithRelationInput | tweet_latest_idOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tweet_latest_idWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweet_latest_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweet_latest_ids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tweet_latest_ids
    **/
    _count?: true | Tweet_latest_idCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tweet_latest_idAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tweet_latest_idSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tweet_latest_idMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tweet_latest_idMaxAggregateInputType
  }

  export type GetTweet_latest_idAggregateType<T extends Tweet_latest_idAggregateArgs> = {
        [P in keyof T & keyof AggregateTweet_latest_id]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTweet_latest_id[P]>
      : GetScalarType<T[P], AggregateTweet_latest_id[P]>
  }




  export type tweet_latest_idGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tweet_latest_idWhereInput
    orderBy?: tweet_latest_idOrderByWithAggregationInput | tweet_latest_idOrderByWithAggregationInput[]
    by: Tweet_latest_idScalarFieldEnum[] | Tweet_latest_idScalarFieldEnum
    having?: tweet_latest_idScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tweet_latest_idCountAggregateInputType | true
    _avg?: Tweet_latest_idAvgAggregateInputType
    _sum?: Tweet_latest_idSumAggregateInputType
    _min?: Tweet_latest_idMinAggregateInputType
    _max?: Tweet_latest_idMaxAggregateInputType
  }

  export type Tweet_latest_idGroupByOutputType = {
    id: number
    tweet_id: string
    created_time: number
    token_address: string
    created_at: Date
    updated_at: Date
    _count: Tweet_latest_idCountAggregateOutputType | null
    _avg: Tweet_latest_idAvgAggregateOutputType | null
    _sum: Tweet_latest_idSumAggregateOutputType | null
    _min: Tweet_latest_idMinAggregateOutputType | null
    _max: Tweet_latest_idMaxAggregateOutputType | null
  }

  type GetTweet_latest_idGroupByPayload<T extends tweet_latest_idGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tweet_latest_idGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tweet_latest_idGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tweet_latest_idGroupByOutputType[P]>
            : GetScalarType<T[P], Tweet_latest_idGroupByOutputType[P]>
        }
      >
    >


  export type tweet_latest_idSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tweet_id?: boolean
    created_time?: boolean
    token_address?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tweet_latest_id"]>

  export type tweet_latest_idSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tweet_id?: boolean
    created_time?: boolean
    token_address?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tweet_latest_id"]>

  export type tweet_latest_idSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tweet_id?: boolean
    created_time?: boolean
    token_address?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tweet_latest_id"]>

  export type tweet_latest_idSelectScalar = {
    id?: boolean
    tweet_id?: boolean
    created_time?: boolean
    token_address?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type tweet_latest_idOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tweet_id" | "created_time" | "token_address" | "created_at" | "updated_at", ExtArgs["result"]["tweet_latest_id"]>

  export type $tweet_latest_idPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tweet_latest_id"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tweet_id: string
      created_time: number
      token_address: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["tweet_latest_id"]>
    composites: {}
  }

  type tweet_latest_idGetPayload<S extends boolean | null | undefined | tweet_latest_idDefaultArgs> = $Result.GetResult<Prisma.$tweet_latest_idPayload, S>

  type tweet_latest_idCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tweet_latest_idFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tweet_latest_idCountAggregateInputType | true
    }

  export interface tweet_latest_idDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tweet_latest_id'], meta: { name: 'tweet_latest_id' } }
    /**
     * Find zero or one Tweet_latest_id that matches the filter.
     * @param {tweet_latest_idFindUniqueArgs} args - Arguments to find a Tweet_latest_id
     * @example
     * // Get one Tweet_latest_id
     * const tweet_latest_id = await prisma.tweet_latest_id.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tweet_latest_idFindUniqueArgs>(args: SelectSubset<T, tweet_latest_idFindUniqueArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Tweet_latest_id that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tweet_latest_idFindUniqueOrThrowArgs} args - Arguments to find a Tweet_latest_id
     * @example
     * // Get one Tweet_latest_id
     * const tweet_latest_id = await prisma.tweet_latest_id.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tweet_latest_idFindUniqueOrThrowArgs>(args: SelectSubset<T, tweet_latest_idFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Tweet_latest_id that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweet_latest_idFindFirstArgs} args - Arguments to find a Tweet_latest_id
     * @example
     * // Get one Tweet_latest_id
     * const tweet_latest_id = await prisma.tweet_latest_id.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tweet_latest_idFindFirstArgs>(args?: SelectSubset<T, tweet_latest_idFindFirstArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Tweet_latest_id that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweet_latest_idFindFirstOrThrowArgs} args - Arguments to find a Tweet_latest_id
     * @example
     * // Get one Tweet_latest_id
     * const tweet_latest_id = await prisma.tweet_latest_id.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tweet_latest_idFindFirstOrThrowArgs>(args?: SelectSubset<T, tweet_latest_idFindFirstOrThrowArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Tweet_latest_ids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweet_latest_idFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tweet_latest_ids
     * const tweet_latest_ids = await prisma.tweet_latest_id.findMany()
     * 
     * // Get first 10 Tweet_latest_ids
     * const tweet_latest_ids = await prisma.tweet_latest_id.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tweet_latest_idWithIdOnly = await prisma.tweet_latest_id.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tweet_latest_idFindManyArgs>(args?: SelectSubset<T, tweet_latest_idFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Tweet_latest_id.
     * @param {tweet_latest_idCreateArgs} args - Arguments to create a Tweet_latest_id.
     * @example
     * // Create one Tweet_latest_id
     * const Tweet_latest_id = await prisma.tweet_latest_id.create({
     *   data: {
     *     // ... data to create a Tweet_latest_id
     *   }
     * })
     * 
     */
    create<T extends tweet_latest_idCreateArgs>(args: SelectSubset<T, tweet_latest_idCreateArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Tweet_latest_ids.
     * @param {tweet_latest_idCreateManyArgs} args - Arguments to create many Tweet_latest_ids.
     * @example
     * // Create many Tweet_latest_ids
     * const tweet_latest_id = await prisma.tweet_latest_id.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tweet_latest_idCreateManyArgs>(args?: SelectSubset<T, tweet_latest_idCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tweet_latest_ids and returns the data saved in the database.
     * @param {tweet_latest_idCreateManyAndReturnArgs} args - Arguments to create many Tweet_latest_ids.
     * @example
     * // Create many Tweet_latest_ids
     * const tweet_latest_id = await prisma.tweet_latest_id.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tweet_latest_ids and only return the `id`
     * const tweet_latest_idWithIdOnly = await prisma.tweet_latest_id.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tweet_latest_idCreateManyAndReturnArgs>(args?: SelectSubset<T, tweet_latest_idCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Tweet_latest_id.
     * @param {tweet_latest_idDeleteArgs} args - Arguments to delete one Tweet_latest_id.
     * @example
     * // Delete one Tweet_latest_id
     * const Tweet_latest_id = await prisma.tweet_latest_id.delete({
     *   where: {
     *     // ... filter to delete one Tweet_latest_id
     *   }
     * })
     * 
     */
    delete<T extends tweet_latest_idDeleteArgs>(args: SelectSubset<T, tweet_latest_idDeleteArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Tweet_latest_id.
     * @param {tweet_latest_idUpdateArgs} args - Arguments to update one Tweet_latest_id.
     * @example
     * // Update one Tweet_latest_id
     * const tweet_latest_id = await prisma.tweet_latest_id.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tweet_latest_idUpdateArgs>(args: SelectSubset<T, tweet_latest_idUpdateArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Tweet_latest_ids.
     * @param {tweet_latest_idDeleteManyArgs} args - Arguments to filter Tweet_latest_ids to delete.
     * @example
     * // Delete a few Tweet_latest_ids
     * const { count } = await prisma.tweet_latest_id.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tweet_latest_idDeleteManyArgs>(args?: SelectSubset<T, tweet_latest_idDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tweet_latest_ids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweet_latest_idUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tweet_latest_ids
     * const tweet_latest_id = await prisma.tweet_latest_id.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tweet_latest_idUpdateManyArgs>(args: SelectSubset<T, tweet_latest_idUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tweet_latest_ids and returns the data updated in the database.
     * @param {tweet_latest_idUpdateManyAndReturnArgs} args - Arguments to update many Tweet_latest_ids.
     * @example
     * // Update many Tweet_latest_ids
     * const tweet_latest_id = await prisma.tweet_latest_id.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tweet_latest_ids and only return the `id`
     * const tweet_latest_idWithIdOnly = await prisma.tweet_latest_id.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tweet_latest_idUpdateManyAndReturnArgs>(args: SelectSubset<T, tweet_latest_idUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Tweet_latest_id.
     * @param {tweet_latest_idUpsertArgs} args - Arguments to update or create a Tweet_latest_id.
     * @example
     * // Update or create a Tweet_latest_id
     * const tweet_latest_id = await prisma.tweet_latest_id.upsert({
     *   create: {
     *     // ... data to create a Tweet_latest_id
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tweet_latest_id we want to update
     *   }
     * })
     */
    upsert<T extends tweet_latest_idUpsertArgs>(args: SelectSubset<T, tweet_latest_idUpsertArgs<ExtArgs>>): Prisma__tweet_latest_idClient<$Result.GetResult<Prisma.$tweet_latest_idPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Tweet_latest_ids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweet_latest_idCountArgs} args - Arguments to filter Tweet_latest_ids to count.
     * @example
     * // Count the number of Tweet_latest_ids
     * const count = await prisma.tweet_latest_id.count({
     *   where: {
     *     // ... the filter for the Tweet_latest_ids we want to count
     *   }
     * })
    **/
    count<T extends tweet_latest_idCountArgs>(
      args?: Subset<T, tweet_latest_idCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tweet_latest_idCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tweet_latest_id.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tweet_latest_idAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tweet_latest_idAggregateArgs>(args: Subset<T, Tweet_latest_idAggregateArgs>): Prisma.PrismaPromise<GetTweet_latest_idAggregateType<T>>

    /**
     * Group by Tweet_latest_id.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tweet_latest_idGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tweet_latest_idGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tweet_latest_idGroupByArgs['orderBy'] }
        : { orderBy?: tweet_latest_idGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tweet_latest_idGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTweet_latest_idGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tweet_latest_id model
   */
  readonly fields: tweet_latest_idFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tweet_latest_id.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tweet_latest_idClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tweet_latest_id model
   */ 
  interface tweet_latest_idFieldRefs {
    readonly id: FieldRef<"tweet_latest_id", 'Int'>
    readonly tweet_id: FieldRef<"tweet_latest_id", 'String'>
    readonly created_time: FieldRef<"tweet_latest_id", 'Int'>
    readonly token_address: FieldRef<"tweet_latest_id", 'String'>
    readonly created_at: FieldRef<"tweet_latest_id", 'DateTime'>
    readonly updated_at: FieldRef<"tweet_latest_id", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tweet_latest_id findUnique
   */
  export type tweet_latest_idFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * Filter, which tweet_latest_id to fetch.
     */
    where: tweet_latest_idWhereUniqueInput
  }

  /**
   * tweet_latest_id findUniqueOrThrow
   */
  export type tweet_latest_idFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * Filter, which tweet_latest_id to fetch.
     */
    where: tweet_latest_idWhereUniqueInput
  }

  /**
   * tweet_latest_id findFirst
   */
  export type tweet_latest_idFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * Filter, which tweet_latest_id to fetch.
     */
    where?: tweet_latest_idWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweet_latest_ids to fetch.
     */
    orderBy?: tweet_latest_idOrderByWithRelationInput | tweet_latest_idOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tweet_latest_ids.
     */
    cursor?: tweet_latest_idWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweet_latest_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweet_latest_ids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tweet_latest_ids.
     */
    distinct?: Tweet_latest_idScalarFieldEnum | Tweet_latest_idScalarFieldEnum[]
  }

  /**
   * tweet_latest_id findFirstOrThrow
   */
  export type tweet_latest_idFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * Filter, which tweet_latest_id to fetch.
     */
    where?: tweet_latest_idWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweet_latest_ids to fetch.
     */
    orderBy?: tweet_latest_idOrderByWithRelationInput | tweet_latest_idOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tweet_latest_ids.
     */
    cursor?: tweet_latest_idWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweet_latest_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweet_latest_ids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tweet_latest_ids.
     */
    distinct?: Tweet_latest_idScalarFieldEnum | Tweet_latest_idScalarFieldEnum[]
  }

  /**
   * tweet_latest_id findMany
   */
  export type tweet_latest_idFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * Filter, which tweet_latest_ids to fetch.
     */
    where?: tweet_latest_idWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tweet_latest_ids to fetch.
     */
    orderBy?: tweet_latest_idOrderByWithRelationInput | tweet_latest_idOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tweet_latest_ids.
     */
    cursor?: tweet_latest_idWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tweet_latest_ids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tweet_latest_ids.
     */
    skip?: number
    distinct?: Tweet_latest_idScalarFieldEnum | Tweet_latest_idScalarFieldEnum[]
  }

  /**
   * tweet_latest_id create
   */
  export type tweet_latest_idCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * The data needed to create a tweet_latest_id.
     */
    data?: XOR<tweet_latest_idCreateInput, tweet_latest_idUncheckedCreateInput>
  }

  /**
   * tweet_latest_id createMany
   */
  export type tweet_latest_idCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tweet_latest_ids.
     */
    data: tweet_latest_idCreateManyInput | tweet_latest_idCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tweet_latest_id createManyAndReturn
   */
  export type tweet_latest_idCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * The data used to create many tweet_latest_ids.
     */
    data: tweet_latest_idCreateManyInput | tweet_latest_idCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tweet_latest_id update
   */
  export type tweet_latest_idUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * The data needed to update a tweet_latest_id.
     */
    data: XOR<tweet_latest_idUpdateInput, tweet_latest_idUncheckedUpdateInput>
    /**
     * Choose, which tweet_latest_id to update.
     */
    where: tweet_latest_idWhereUniqueInput
  }

  /**
   * tweet_latest_id updateMany
   */
  export type tweet_latest_idUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tweet_latest_ids.
     */
    data: XOR<tweet_latest_idUpdateManyMutationInput, tweet_latest_idUncheckedUpdateManyInput>
    /**
     * Filter which tweet_latest_ids to update
     */
    where?: tweet_latest_idWhereInput
  }

  /**
   * tweet_latest_id updateManyAndReturn
   */
  export type tweet_latest_idUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * The data used to update tweet_latest_ids.
     */
    data: XOR<tweet_latest_idUpdateManyMutationInput, tweet_latest_idUncheckedUpdateManyInput>
    /**
     * Filter which tweet_latest_ids to update
     */
    where?: tweet_latest_idWhereInput
  }

  /**
   * tweet_latest_id upsert
   */
  export type tweet_latest_idUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * The filter to search for the tweet_latest_id to update in case it exists.
     */
    where: tweet_latest_idWhereUniqueInput
    /**
     * In case the tweet_latest_id found by the `where` argument doesn't exist, create a new tweet_latest_id with this data.
     */
    create: XOR<tweet_latest_idCreateInput, tweet_latest_idUncheckedCreateInput>
    /**
     * In case the tweet_latest_id was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tweet_latest_idUpdateInput, tweet_latest_idUncheckedUpdateInput>
  }

  /**
   * tweet_latest_id delete
   */
  export type tweet_latest_idDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
    /**
     * Filter which tweet_latest_id to delete.
     */
    where: tweet_latest_idWhereUniqueInput
  }

  /**
   * tweet_latest_id deleteMany
   */
  export type tweet_latest_idDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tweet_latest_ids to delete
     */
    where?: tweet_latest_idWhereInput
  }

  /**
   * tweet_latest_id without action
   */
  export type tweet_latest_idDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tweet_latest_id
     */
    select?: tweet_latest_idSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tweet_latest_id
     */
    omit?: tweet_latest_idOmit<ExtArgs> | null
  }


  /**
   * Model reference_tokens
   */

  export type AggregateReference_tokens = {
    _count: Reference_tokensCountAggregateOutputType | null
    _avg: Reference_tokensAvgAggregateOutputType | null
    _sum: Reference_tokensSumAggregateOutputType | null
    _min: Reference_tokensMinAggregateOutputType | null
    _max: Reference_tokensMaxAggregateOutputType | null
  }

  export type Reference_tokensAvgAggregateOutputType = {
    id: number | null
    decimals: number | null
    token_created_at: number | null
  }

  export type Reference_tokensSumAggregateOutputType = {
    id: number | null
    decimals: number | null
    token_created_at: number | null
  }

  export type Reference_tokensMinAggregateOutputType = {
    id: number | null
    address: string | null
    symbol: string | null
    name: string | null
    decimals: number | null
    network: string | null
    token_created_at: number | null
    tweet_analyze: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Reference_tokensMaxAggregateOutputType = {
    id: number | null
    address: string | null
    symbol: string | null
    name: string | null
    decimals: number | null
    network: string | null
    token_created_at: number | null
    tweet_analyze: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Reference_tokensCountAggregateOutputType = {
    id: number
    address: number
    symbol: number
    name: number
    decimals: number
    metadata: number
    network: number
    token_created_at: number
    social_links: number
    tweet_analyze: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Reference_tokensAvgAggregateInputType = {
    id?: true
    decimals?: true
    token_created_at?: true
  }

  export type Reference_tokensSumAggregateInputType = {
    id?: true
    decimals?: true
    token_created_at?: true
  }

  export type Reference_tokensMinAggregateInputType = {
    id?: true
    address?: true
    symbol?: true
    name?: true
    decimals?: true
    network?: true
    token_created_at?: true
    tweet_analyze?: true
    created_at?: true
    updated_at?: true
  }

  export type Reference_tokensMaxAggregateInputType = {
    id?: true
    address?: true
    symbol?: true
    name?: true
    decimals?: true
    network?: true
    token_created_at?: true
    tweet_analyze?: true
    created_at?: true
    updated_at?: true
  }

  export type Reference_tokensCountAggregateInputType = {
    id?: true
    address?: true
    symbol?: true
    name?: true
    decimals?: true
    metadata?: true
    network?: true
    token_created_at?: true
    social_links?: true
    tweet_analyze?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Reference_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reference_tokens to aggregate.
     */
    where?: reference_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reference_tokens to fetch.
     */
    orderBy?: reference_tokensOrderByWithRelationInput | reference_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reference_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reference_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reference_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reference_tokens
    **/
    _count?: true | Reference_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Reference_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Reference_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Reference_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Reference_tokensMaxAggregateInputType
  }

  export type GetReference_tokensAggregateType<T extends Reference_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateReference_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReference_tokens[P]>
      : GetScalarType<T[P], AggregateReference_tokens[P]>
  }




  export type reference_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reference_tokensWhereInput
    orderBy?: reference_tokensOrderByWithAggregationInput | reference_tokensOrderByWithAggregationInput[]
    by: Reference_tokensScalarFieldEnum[] | Reference_tokensScalarFieldEnum
    having?: reference_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Reference_tokensCountAggregateInputType | true
    _avg?: Reference_tokensAvgAggregateInputType
    _sum?: Reference_tokensSumAggregateInputType
    _min?: Reference_tokensMinAggregateInputType
    _max?: Reference_tokensMaxAggregateInputType
  }

  export type Reference_tokensGroupByOutputType = {
    id: number
    address: string
    symbol: string
    name: string
    decimals: number
    metadata: JsonValue
    network: string
    token_created_at: number
    social_links: JsonValue
    tweet_analyze: string
    created_at: Date
    updated_at: Date
    _count: Reference_tokensCountAggregateOutputType | null
    _avg: Reference_tokensAvgAggregateOutputType | null
    _sum: Reference_tokensSumAggregateOutputType | null
    _min: Reference_tokensMinAggregateOutputType | null
    _max: Reference_tokensMaxAggregateOutputType | null
  }

  type GetReference_tokensGroupByPayload<T extends reference_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Reference_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Reference_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Reference_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Reference_tokensGroupByOutputType[P]>
        }
      >
    >


  export type reference_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["reference_tokens"]>

  export type reference_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["reference_tokens"]>

  export type reference_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["reference_tokens"]>

  export type reference_tokensSelectScalar = {
    id?: boolean
    address?: boolean
    symbol?: boolean
    name?: boolean
    decimals?: boolean
    metadata?: boolean
    network?: boolean
    token_created_at?: boolean
    social_links?: boolean
    tweet_analyze?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type reference_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "address" | "symbol" | "name" | "decimals" | "metadata" | "network" | "token_created_at" | "social_links" | "tweet_analyze" | "created_at" | "updated_at", ExtArgs["result"]["reference_tokens"]>

  export type $reference_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reference_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      address: string
      symbol: string
      name: string
      decimals: number
      metadata: Prisma.JsonValue
      network: string
      token_created_at: number
      social_links: Prisma.JsonValue
      tweet_analyze: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["reference_tokens"]>
    composites: {}
  }

  type reference_tokensGetPayload<S extends boolean | null | undefined | reference_tokensDefaultArgs> = $Result.GetResult<Prisma.$reference_tokensPayload, S>

  type reference_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reference_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Reference_tokensCountAggregateInputType | true
    }

  export interface reference_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reference_tokens'], meta: { name: 'reference_tokens' } }
    /**
     * Find zero or one Reference_tokens that matches the filter.
     * @param {reference_tokensFindUniqueArgs} args - Arguments to find a Reference_tokens
     * @example
     * // Get one Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reference_tokensFindUniqueArgs>(args: SelectSubset<T, reference_tokensFindUniqueArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Reference_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reference_tokensFindUniqueOrThrowArgs} args - Arguments to find a Reference_tokens
     * @example
     * // Get one Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reference_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, reference_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Reference_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reference_tokensFindFirstArgs} args - Arguments to find a Reference_tokens
     * @example
     * // Get one Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reference_tokensFindFirstArgs>(args?: SelectSubset<T, reference_tokensFindFirstArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Reference_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reference_tokensFindFirstOrThrowArgs} args - Arguments to find a Reference_tokens
     * @example
     * // Get one Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reference_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, reference_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Reference_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reference_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.findMany()
     * 
     * // Get first 10 Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reference_tokensWithIdOnly = await prisma.reference_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reference_tokensFindManyArgs>(args?: SelectSubset<T, reference_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Reference_tokens.
     * @param {reference_tokensCreateArgs} args - Arguments to create a Reference_tokens.
     * @example
     * // Create one Reference_tokens
     * const Reference_tokens = await prisma.reference_tokens.create({
     *   data: {
     *     // ... data to create a Reference_tokens
     *   }
     * })
     * 
     */
    create<T extends reference_tokensCreateArgs>(args: SelectSubset<T, reference_tokensCreateArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Reference_tokens.
     * @param {reference_tokensCreateManyArgs} args - Arguments to create many Reference_tokens.
     * @example
     * // Create many Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reference_tokensCreateManyArgs>(args?: SelectSubset<T, reference_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reference_tokens and returns the data saved in the database.
     * @param {reference_tokensCreateManyAndReturnArgs} args - Arguments to create many Reference_tokens.
     * @example
     * // Create many Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reference_tokens and only return the `id`
     * const reference_tokensWithIdOnly = await prisma.reference_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reference_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, reference_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Reference_tokens.
     * @param {reference_tokensDeleteArgs} args - Arguments to delete one Reference_tokens.
     * @example
     * // Delete one Reference_tokens
     * const Reference_tokens = await prisma.reference_tokens.delete({
     *   where: {
     *     // ... filter to delete one Reference_tokens
     *   }
     * })
     * 
     */
    delete<T extends reference_tokensDeleteArgs>(args: SelectSubset<T, reference_tokensDeleteArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Reference_tokens.
     * @param {reference_tokensUpdateArgs} args - Arguments to update one Reference_tokens.
     * @example
     * // Update one Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reference_tokensUpdateArgs>(args: SelectSubset<T, reference_tokensUpdateArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Reference_tokens.
     * @param {reference_tokensDeleteManyArgs} args - Arguments to filter Reference_tokens to delete.
     * @example
     * // Delete a few Reference_tokens
     * const { count } = await prisma.reference_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reference_tokensDeleteManyArgs>(args?: SelectSubset<T, reference_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reference_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reference_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reference_tokensUpdateManyArgs>(args: SelectSubset<T, reference_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reference_tokens and returns the data updated in the database.
     * @param {reference_tokensUpdateManyAndReturnArgs} args - Arguments to update many Reference_tokens.
     * @example
     * // Update many Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reference_tokens and only return the `id`
     * const reference_tokensWithIdOnly = await prisma.reference_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reference_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, reference_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Reference_tokens.
     * @param {reference_tokensUpsertArgs} args - Arguments to update or create a Reference_tokens.
     * @example
     * // Update or create a Reference_tokens
     * const reference_tokens = await prisma.reference_tokens.upsert({
     *   create: {
     *     // ... data to create a Reference_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reference_tokens we want to update
     *   }
     * })
     */
    upsert<T extends reference_tokensUpsertArgs>(args: SelectSubset<T, reference_tokensUpsertArgs<ExtArgs>>): Prisma__reference_tokensClient<$Result.GetResult<Prisma.$reference_tokensPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Reference_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reference_tokensCountArgs} args - Arguments to filter Reference_tokens to count.
     * @example
     * // Count the number of Reference_tokens
     * const count = await prisma.reference_tokens.count({
     *   where: {
     *     // ... the filter for the Reference_tokens we want to count
     *   }
     * })
    **/
    count<T extends reference_tokensCountArgs>(
      args?: Subset<T, reference_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Reference_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reference_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Reference_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Reference_tokensAggregateArgs>(args: Subset<T, Reference_tokensAggregateArgs>): Prisma.PrismaPromise<GetReference_tokensAggregateType<T>>

    /**
     * Group by Reference_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reference_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reference_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reference_tokensGroupByArgs['orderBy'] }
        : { orderBy?: reference_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reference_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReference_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reference_tokens model
   */
  readonly fields: reference_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reference_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reference_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reference_tokens model
   */ 
  interface reference_tokensFieldRefs {
    readonly id: FieldRef<"reference_tokens", 'Int'>
    readonly address: FieldRef<"reference_tokens", 'String'>
    readonly symbol: FieldRef<"reference_tokens", 'String'>
    readonly name: FieldRef<"reference_tokens", 'String'>
    readonly decimals: FieldRef<"reference_tokens", 'Int'>
    readonly metadata: FieldRef<"reference_tokens", 'Json'>
    readonly network: FieldRef<"reference_tokens", 'String'>
    readonly token_created_at: FieldRef<"reference_tokens", 'Int'>
    readonly social_links: FieldRef<"reference_tokens", 'Json'>
    readonly tweet_analyze: FieldRef<"reference_tokens", 'String'>
    readonly created_at: FieldRef<"reference_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"reference_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * reference_tokens findUnique
   */
  export type reference_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * Filter, which reference_tokens to fetch.
     */
    where: reference_tokensWhereUniqueInput
  }

  /**
   * reference_tokens findUniqueOrThrow
   */
  export type reference_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * Filter, which reference_tokens to fetch.
     */
    where: reference_tokensWhereUniqueInput
  }

  /**
   * reference_tokens findFirst
   */
  export type reference_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * Filter, which reference_tokens to fetch.
     */
    where?: reference_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reference_tokens to fetch.
     */
    orderBy?: reference_tokensOrderByWithRelationInput | reference_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reference_tokens.
     */
    cursor?: reference_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reference_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reference_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reference_tokens.
     */
    distinct?: Reference_tokensScalarFieldEnum | Reference_tokensScalarFieldEnum[]
  }

  /**
   * reference_tokens findFirstOrThrow
   */
  export type reference_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * Filter, which reference_tokens to fetch.
     */
    where?: reference_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reference_tokens to fetch.
     */
    orderBy?: reference_tokensOrderByWithRelationInput | reference_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reference_tokens.
     */
    cursor?: reference_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reference_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reference_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reference_tokens.
     */
    distinct?: Reference_tokensScalarFieldEnum | Reference_tokensScalarFieldEnum[]
  }

  /**
   * reference_tokens findMany
   */
  export type reference_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * Filter, which reference_tokens to fetch.
     */
    where?: reference_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reference_tokens to fetch.
     */
    orderBy?: reference_tokensOrderByWithRelationInput | reference_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reference_tokens.
     */
    cursor?: reference_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reference_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reference_tokens.
     */
    skip?: number
    distinct?: Reference_tokensScalarFieldEnum | Reference_tokensScalarFieldEnum[]
  }

  /**
   * reference_tokens create
   */
  export type reference_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * The data needed to create a reference_tokens.
     */
    data: XOR<reference_tokensCreateInput, reference_tokensUncheckedCreateInput>
  }

  /**
   * reference_tokens createMany
   */
  export type reference_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reference_tokens.
     */
    data: reference_tokensCreateManyInput | reference_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reference_tokens createManyAndReturn
   */
  export type reference_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many reference_tokens.
     */
    data: reference_tokensCreateManyInput | reference_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reference_tokens update
   */
  export type reference_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * The data needed to update a reference_tokens.
     */
    data: XOR<reference_tokensUpdateInput, reference_tokensUncheckedUpdateInput>
    /**
     * Choose, which reference_tokens to update.
     */
    where: reference_tokensWhereUniqueInput
  }

  /**
   * reference_tokens updateMany
   */
  export type reference_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reference_tokens.
     */
    data: XOR<reference_tokensUpdateManyMutationInput, reference_tokensUncheckedUpdateManyInput>
    /**
     * Filter which reference_tokens to update
     */
    where?: reference_tokensWhereInput
  }

  /**
   * reference_tokens updateManyAndReturn
   */
  export type reference_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * The data used to update reference_tokens.
     */
    data: XOR<reference_tokensUpdateManyMutationInput, reference_tokensUncheckedUpdateManyInput>
    /**
     * Filter which reference_tokens to update
     */
    where?: reference_tokensWhereInput
  }

  /**
   * reference_tokens upsert
   */
  export type reference_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * The filter to search for the reference_tokens to update in case it exists.
     */
    where: reference_tokensWhereUniqueInput
    /**
     * In case the reference_tokens found by the `where` argument doesn't exist, create a new reference_tokens with this data.
     */
    create: XOR<reference_tokensCreateInput, reference_tokensUncheckedCreateInput>
    /**
     * In case the reference_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reference_tokensUpdateInput, reference_tokensUncheckedUpdateInput>
  }

  /**
   * reference_tokens delete
   */
  export type reference_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
    /**
     * Filter which reference_tokens to delete.
     */
    where: reference_tokensWhereUniqueInput
  }

  /**
   * reference_tokens deleteMany
   */
  export type reference_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reference_tokens to delete
     */
    where?: reference_tokensWhereInput
  }

  /**
   * reference_tokens without action
   */
  export type reference_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reference_tokens
     */
    select?: reference_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reference_tokens
     */
    omit?: reference_tokensOmit<ExtArgs> | null
  }


  /**
   * Model invite_code
   */

  export type AggregateInvite_code = {
    _count: Invite_codeCountAggregateOutputType | null
    _avg: Invite_codeAvgAggregateOutputType | null
    _sum: Invite_codeSumAggregateOutputType | null
    _min: Invite_codeMinAggregateOutputType | null
    _max: Invite_codeMaxAggregateOutputType | null
  }

  export type Invite_codeAvgAggregateOutputType = {
    id: number | null
    pending: number | null
  }

  export type Invite_codeSumAggregateOutputType = {
    id: number | null
    pending: number | null
  }

  export type Invite_codeMinAggregateOutputType = {
    id: number | null
    code: string | null
    user_did: string | null
    created_at: Date | null
    updated_at: Date | null
    user_email: string | null
    pending: number | null
  }

  export type Invite_codeMaxAggregateOutputType = {
    id: number | null
    code: string | null
    user_did: string | null
    created_at: Date | null
    updated_at: Date | null
    user_email: string | null
    pending: number | null
  }

  export type Invite_codeCountAggregateOutputType = {
    id: number
    code: number
    user_did: number
    created_at: number
    updated_at: number
    user_email: number
    pending: number
    _all: number
  }


  export type Invite_codeAvgAggregateInputType = {
    id?: true
    pending?: true
  }

  export type Invite_codeSumAggregateInputType = {
    id?: true
    pending?: true
  }

  export type Invite_codeMinAggregateInputType = {
    id?: true
    code?: true
    user_did?: true
    created_at?: true
    updated_at?: true
    user_email?: true
    pending?: true
  }

  export type Invite_codeMaxAggregateInputType = {
    id?: true
    code?: true
    user_did?: true
    created_at?: true
    updated_at?: true
    user_email?: true
    pending?: true
  }

  export type Invite_codeCountAggregateInputType = {
    id?: true
    code?: true
    user_did?: true
    created_at?: true
    updated_at?: true
    user_email?: true
    pending?: true
    _all?: true
  }

  export type Invite_codeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invite_code to aggregate.
     */
    where?: invite_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_codes to fetch.
     */
    orderBy?: invite_codeOrderByWithRelationInput | invite_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: invite_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned invite_codes
    **/
    _count?: true | Invite_codeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Invite_codeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Invite_codeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Invite_codeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Invite_codeMaxAggregateInputType
  }

  export type GetInvite_codeAggregateType<T extends Invite_codeAggregateArgs> = {
        [P in keyof T & keyof AggregateInvite_code]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvite_code[P]>
      : GetScalarType<T[P], AggregateInvite_code[P]>
  }




  export type invite_codeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: invite_codeWhereInput
    orderBy?: invite_codeOrderByWithAggregationInput | invite_codeOrderByWithAggregationInput[]
    by: Invite_codeScalarFieldEnum[] | Invite_codeScalarFieldEnum
    having?: invite_codeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Invite_codeCountAggregateInputType | true
    _avg?: Invite_codeAvgAggregateInputType
    _sum?: Invite_codeSumAggregateInputType
    _min?: Invite_codeMinAggregateInputType
    _max?: Invite_codeMaxAggregateInputType
  }

  export type Invite_codeGroupByOutputType = {
    id: number
    code: string
    user_did: string
    created_at: Date
    updated_at: Date
    user_email: string | null
    pending: number
    _count: Invite_codeCountAggregateOutputType | null
    _avg: Invite_codeAvgAggregateOutputType | null
    _sum: Invite_codeSumAggregateOutputType | null
    _min: Invite_codeMinAggregateOutputType | null
    _max: Invite_codeMaxAggregateOutputType | null
  }

  type GetInvite_codeGroupByPayload<T extends invite_codeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Invite_codeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Invite_codeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Invite_codeGroupByOutputType[P]>
            : GetScalarType<T[P], Invite_codeGroupByOutputType[P]>
        }
      >
    >


  export type invite_codeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    user_did?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_email?: boolean
    pending?: boolean
  }, ExtArgs["result"]["invite_code"]>

  export type invite_codeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    user_did?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_email?: boolean
    pending?: boolean
  }, ExtArgs["result"]["invite_code"]>

  export type invite_codeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    user_did?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_email?: boolean
    pending?: boolean
  }, ExtArgs["result"]["invite_code"]>

  export type invite_codeSelectScalar = {
    id?: boolean
    code?: boolean
    user_did?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_email?: boolean
    pending?: boolean
  }

  export type invite_codeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "user_did" | "created_at" | "updated_at" | "user_email" | "pending", ExtArgs["result"]["invite_code"]>

  export type $invite_codePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "invite_code"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      code: string
      user_did: string
      created_at: Date
      updated_at: Date
      user_email: string | null
      pending: number
    }, ExtArgs["result"]["invite_code"]>
    composites: {}
  }

  type invite_codeGetPayload<S extends boolean | null | undefined | invite_codeDefaultArgs> = $Result.GetResult<Prisma.$invite_codePayload, S>

  type invite_codeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<invite_codeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Invite_codeCountAggregateInputType | true
    }

  export interface invite_codeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['invite_code'], meta: { name: 'invite_code' } }
    /**
     * Find zero or one Invite_code that matches the filter.
     * @param {invite_codeFindUniqueArgs} args - Arguments to find a Invite_code
     * @example
     * // Get one Invite_code
     * const invite_code = await prisma.invite_code.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends invite_codeFindUniqueArgs>(args: SelectSubset<T, invite_codeFindUniqueArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Invite_code that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {invite_codeFindUniqueOrThrowArgs} args - Arguments to find a Invite_code
     * @example
     * // Get one Invite_code
     * const invite_code = await prisma.invite_code.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends invite_codeFindUniqueOrThrowArgs>(args: SelectSubset<T, invite_codeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Invite_code that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_codeFindFirstArgs} args - Arguments to find a Invite_code
     * @example
     * // Get one Invite_code
     * const invite_code = await prisma.invite_code.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends invite_codeFindFirstArgs>(args?: SelectSubset<T, invite_codeFindFirstArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Invite_code that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_codeFindFirstOrThrowArgs} args - Arguments to find a Invite_code
     * @example
     * // Get one Invite_code
     * const invite_code = await prisma.invite_code.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends invite_codeFindFirstOrThrowArgs>(args?: SelectSubset<T, invite_codeFindFirstOrThrowArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Invite_codes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_codeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invite_codes
     * const invite_codes = await prisma.invite_code.findMany()
     * 
     * // Get first 10 Invite_codes
     * const invite_codes = await prisma.invite_code.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invite_codeWithIdOnly = await prisma.invite_code.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends invite_codeFindManyArgs>(args?: SelectSubset<T, invite_codeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Invite_code.
     * @param {invite_codeCreateArgs} args - Arguments to create a Invite_code.
     * @example
     * // Create one Invite_code
     * const Invite_code = await prisma.invite_code.create({
     *   data: {
     *     // ... data to create a Invite_code
     *   }
     * })
     * 
     */
    create<T extends invite_codeCreateArgs>(args: SelectSubset<T, invite_codeCreateArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Invite_codes.
     * @param {invite_codeCreateManyArgs} args - Arguments to create many Invite_codes.
     * @example
     * // Create many Invite_codes
     * const invite_code = await prisma.invite_code.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends invite_codeCreateManyArgs>(args?: SelectSubset<T, invite_codeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invite_codes and returns the data saved in the database.
     * @param {invite_codeCreateManyAndReturnArgs} args - Arguments to create many Invite_codes.
     * @example
     * // Create many Invite_codes
     * const invite_code = await prisma.invite_code.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invite_codes and only return the `id`
     * const invite_codeWithIdOnly = await prisma.invite_code.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends invite_codeCreateManyAndReturnArgs>(args?: SelectSubset<T, invite_codeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Invite_code.
     * @param {invite_codeDeleteArgs} args - Arguments to delete one Invite_code.
     * @example
     * // Delete one Invite_code
     * const Invite_code = await prisma.invite_code.delete({
     *   where: {
     *     // ... filter to delete one Invite_code
     *   }
     * })
     * 
     */
    delete<T extends invite_codeDeleteArgs>(args: SelectSubset<T, invite_codeDeleteArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Invite_code.
     * @param {invite_codeUpdateArgs} args - Arguments to update one Invite_code.
     * @example
     * // Update one Invite_code
     * const invite_code = await prisma.invite_code.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends invite_codeUpdateArgs>(args: SelectSubset<T, invite_codeUpdateArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Invite_codes.
     * @param {invite_codeDeleteManyArgs} args - Arguments to filter Invite_codes to delete.
     * @example
     * // Delete a few Invite_codes
     * const { count } = await prisma.invite_code.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends invite_codeDeleteManyArgs>(args?: SelectSubset<T, invite_codeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invite_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_codeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invite_codes
     * const invite_code = await prisma.invite_code.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends invite_codeUpdateManyArgs>(args: SelectSubset<T, invite_codeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invite_codes and returns the data updated in the database.
     * @param {invite_codeUpdateManyAndReturnArgs} args - Arguments to update many Invite_codes.
     * @example
     * // Update many Invite_codes
     * const invite_code = await prisma.invite_code.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invite_codes and only return the `id`
     * const invite_codeWithIdOnly = await prisma.invite_code.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends invite_codeUpdateManyAndReturnArgs>(args: SelectSubset<T, invite_codeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Invite_code.
     * @param {invite_codeUpsertArgs} args - Arguments to update or create a Invite_code.
     * @example
     * // Update or create a Invite_code
     * const invite_code = await prisma.invite_code.upsert({
     *   create: {
     *     // ... data to create a Invite_code
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invite_code we want to update
     *   }
     * })
     */
    upsert<T extends invite_codeUpsertArgs>(args: SelectSubset<T, invite_codeUpsertArgs<ExtArgs>>): Prisma__invite_codeClient<$Result.GetResult<Prisma.$invite_codePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Invite_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_codeCountArgs} args - Arguments to filter Invite_codes to count.
     * @example
     * // Count the number of Invite_codes
     * const count = await prisma.invite_code.count({
     *   where: {
     *     // ... the filter for the Invite_codes we want to count
     *   }
     * })
    **/
    count<T extends invite_codeCountArgs>(
      args?: Subset<T, invite_codeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Invite_codeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invite_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Invite_codeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Invite_codeAggregateArgs>(args: Subset<T, Invite_codeAggregateArgs>): Prisma.PrismaPromise<GetInvite_codeAggregateType<T>>

    /**
     * Group by Invite_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_codeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends invite_codeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: invite_codeGroupByArgs['orderBy'] }
        : { orderBy?: invite_codeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, invite_codeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvite_codeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the invite_code model
   */
  readonly fields: invite_codeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for invite_code.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__invite_codeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the invite_code model
   */ 
  interface invite_codeFieldRefs {
    readonly id: FieldRef<"invite_code", 'Int'>
    readonly code: FieldRef<"invite_code", 'String'>
    readonly user_did: FieldRef<"invite_code", 'String'>
    readonly created_at: FieldRef<"invite_code", 'DateTime'>
    readonly updated_at: FieldRef<"invite_code", 'DateTime'>
    readonly user_email: FieldRef<"invite_code", 'String'>
    readonly pending: FieldRef<"invite_code", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * invite_code findUnique
   */
  export type invite_codeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * Filter, which invite_code to fetch.
     */
    where: invite_codeWhereUniqueInput
  }

  /**
   * invite_code findUniqueOrThrow
   */
  export type invite_codeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * Filter, which invite_code to fetch.
     */
    where: invite_codeWhereUniqueInput
  }

  /**
   * invite_code findFirst
   */
  export type invite_codeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * Filter, which invite_code to fetch.
     */
    where?: invite_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_codes to fetch.
     */
    orderBy?: invite_codeOrderByWithRelationInput | invite_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invite_codes.
     */
    cursor?: invite_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invite_codes.
     */
    distinct?: Invite_codeScalarFieldEnum | Invite_codeScalarFieldEnum[]
  }

  /**
   * invite_code findFirstOrThrow
   */
  export type invite_codeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * Filter, which invite_code to fetch.
     */
    where?: invite_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_codes to fetch.
     */
    orderBy?: invite_codeOrderByWithRelationInput | invite_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invite_codes.
     */
    cursor?: invite_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invite_codes.
     */
    distinct?: Invite_codeScalarFieldEnum | Invite_codeScalarFieldEnum[]
  }

  /**
   * invite_code findMany
   */
  export type invite_codeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * Filter, which invite_codes to fetch.
     */
    where?: invite_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_codes to fetch.
     */
    orderBy?: invite_codeOrderByWithRelationInput | invite_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing invite_codes.
     */
    cursor?: invite_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_codes.
     */
    skip?: number
    distinct?: Invite_codeScalarFieldEnum | Invite_codeScalarFieldEnum[]
  }

  /**
   * invite_code create
   */
  export type invite_codeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * The data needed to create a invite_code.
     */
    data?: XOR<invite_codeCreateInput, invite_codeUncheckedCreateInput>
  }

  /**
   * invite_code createMany
   */
  export type invite_codeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many invite_codes.
     */
    data: invite_codeCreateManyInput | invite_codeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * invite_code createManyAndReturn
   */
  export type invite_codeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * The data used to create many invite_codes.
     */
    data: invite_codeCreateManyInput | invite_codeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * invite_code update
   */
  export type invite_codeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * The data needed to update a invite_code.
     */
    data: XOR<invite_codeUpdateInput, invite_codeUncheckedUpdateInput>
    /**
     * Choose, which invite_code to update.
     */
    where: invite_codeWhereUniqueInput
  }

  /**
   * invite_code updateMany
   */
  export type invite_codeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update invite_codes.
     */
    data: XOR<invite_codeUpdateManyMutationInput, invite_codeUncheckedUpdateManyInput>
    /**
     * Filter which invite_codes to update
     */
    where?: invite_codeWhereInput
  }

  /**
   * invite_code updateManyAndReturn
   */
  export type invite_codeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * The data used to update invite_codes.
     */
    data: XOR<invite_codeUpdateManyMutationInput, invite_codeUncheckedUpdateManyInput>
    /**
     * Filter which invite_codes to update
     */
    where?: invite_codeWhereInput
  }

  /**
   * invite_code upsert
   */
  export type invite_codeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * The filter to search for the invite_code to update in case it exists.
     */
    where: invite_codeWhereUniqueInput
    /**
     * In case the invite_code found by the `where` argument doesn't exist, create a new invite_code with this data.
     */
    create: XOR<invite_codeCreateInput, invite_codeUncheckedCreateInput>
    /**
     * In case the invite_code was found with the provided `where` argument, update it with this data.
     */
    update: XOR<invite_codeUpdateInput, invite_codeUncheckedUpdateInput>
  }

  /**
   * invite_code delete
   */
  export type invite_codeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
    /**
     * Filter which invite_code to delete.
     */
    where: invite_codeWhereUniqueInput
  }

  /**
   * invite_code deleteMany
   */
  export type invite_codeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invite_codes to delete
     */
    where?: invite_codeWhereInput
  }

  /**
   * invite_code without action
   */
  export type invite_codeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code
     */
    select?: invite_codeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code
     */
    omit?: invite_codeOmit<ExtArgs> | null
  }


  /**
   * Model pro_config
   */

  export type AggregatePro_config = {
    _count: Pro_configCountAggregateOutputType | null
    _avg: Pro_configAvgAggregateOutputType | null
    _sum: Pro_configSumAggregateOutputType | null
    _min: Pro_configMinAggregateOutputType | null
    _max: Pro_configMaxAggregateOutputType | null
  }

  export type Pro_configAvgAggregateOutputType = {
    id: number | null
  }

  export type Pro_configSumAggregateOutputType = {
    id: number | null
  }

  export type Pro_configMinAggregateOutputType = {
    id: number | null
    created_at: Date | null
  }

  export type Pro_configMaxAggregateOutputType = {
    id: number | null
    created_at: Date | null
  }

  export type Pro_configCountAggregateOutputType = {
    id: number
    config: number
    created_at: number
    _all: number
  }


  export type Pro_configAvgAggregateInputType = {
    id?: true
  }

  export type Pro_configSumAggregateInputType = {
    id?: true
  }

  export type Pro_configMinAggregateInputType = {
    id?: true
    created_at?: true
  }

  export type Pro_configMaxAggregateInputType = {
    id?: true
    created_at?: true
  }

  export type Pro_configCountAggregateInputType = {
    id?: true
    config?: true
    created_at?: true
    _all?: true
  }

  export type Pro_configAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pro_config to aggregate.
     */
    where?: pro_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_configs to fetch.
     */
    orderBy?: pro_configOrderByWithRelationInput | pro_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pro_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pro_configs
    **/
    _count?: true | Pro_configCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pro_configAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pro_configSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pro_configMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pro_configMaxAggregateInputType
  }

  export type GetPro_configAggregateType<T extends Pro_configAggregateArgs> = {
        [P in keyof T & keyof AggregatePro_config]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePro_config[P]>
      : GetScalarType<T[P], AggregatePro_config[P]>
  }




  export type pro_configGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pro_configWhereInput
    orderBy?: pro_configOrderByWithAggregationInput | pro_configOrderByWithAggregationInput[]
    by: Pro_configScalarFieldEnum[] | Pro_configScalarFieldEnum
    having?: pro_configScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pro_configCountAggregateInputType | true
    _avg?: Pro_configAvgAggregateInputType
    _sum?: Pro_configSumAggregateInputType
    _min?: Pro_configMinAggregateInputType
    _max?: Pro_configMaxAggregateInputType
  }

  export type Pro_configGroupByOutputType = {
    id: number
    config: JsonValue
    created_at: Date
    _count: Pro_configCountAggregateOutputType | null
    _avg: Pro_configAvgAggregateOutputType | null
    _sum: Pro_configSumAggregateOutputType | null
    _min: Pro_configMinAggregateOutputType | null
    _max: Pro_configMaxAggregateOutputType | null
  }

  type GetPro_configGroupByPayload<T extends pro_configGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pro_configGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pro_configGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pro_configGroupByOutputType[P]>
            : GetScalarType<T[P], Pro_configGroupByOutputType[P]>
        }
      >
    >


  export type pro_configSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    config?: boolean
    created_at?: boolean
    privy_user?: boolean | pro_config$privy_userArgs<ExtArgs>
    _count?: boolean | Pro_configCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pro_config"]>

  export type pro_configSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    config?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["pro_config"]>

  export type pro_configSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    config?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["pro_config"]>

  export type pro_configSelectScalar = {
    id?: boolean
    config?: boolean
    created_at?: boolean
  }

  export type pro_configOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "config" | "created_at", ExtArgs["result"]["pro_config"]>
  export type pro_configInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    privy_user?: boolean | pro_config$privy_userArgs<ExtArgs>
    _count?: boolean | Pro_configCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pro_configIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type pro_configIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $pro_configPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pro_config"
    objects: {
      privy_user: Prisma.$privy_userPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      config: Prisma.JsonValue
      created_at: Date
    }, ExtArgs["result"]["pro_config"]>
    composites: {}
  }

  type pro_configGetPayload<S extends boolean | null | undefined | pro_configDefaultArgs> = $Result.GetResult<Prisma.$pro_configPayload, S>

  type pro_configCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pro_configFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pro_configCountAggregateInputType | true
    }

  export interface pro_configDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pro_config'], meta: { name: 'pro_config' } }
    /**
     * Find zero or one Pro_config that matches the filter.
     * @param {pro_configFindUniqueArgs} args - Arguments to find a Pro_config
     * @example
     * // Get one Pro_config
     * const pro_config = await prisma.pro_config.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pro_configFindUniqueArgs>(args: SelectSubset<T, pro_configFindUniqueArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Pro_config that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pro_configFindUniqueOrThrowArgs} args - Arguments to find a Pro_config
     * @example
     * // Get one Pro_config
     * const pro_config = await prisma.pro_config.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pro_configFindUniqueOrThrowArgs>(args: SelectSubset<T, pro_configFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Pro_config that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_configFindFirstArgs} args - Arguments to find a Pro_config
     * @example
     * // Get one Pro_config
     * const pro_config = await prisma.pro_config.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pro_configFindFirstArgs>(args?: SelectSubset<T, pro_configFindFirstArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Pro_config that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_configFindFirstOrThrowArgs} args - Arguments to find a Pro_config
     * @example
     * // Get one Pro_config
     * const pro_config = await prisma.pro_config.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pro_configFindFirstOrThrowArgs>(args?: SelectSubset<T, pro_configFindFirstOrThrowArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Pro_configs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_configFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pro_configs
     * const pro_configs = await prisma.pro_config.findMany()
     * 
     * // Get first 10 Pro_configs
     * const pro_configs = await prisma.pro_config.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pro_configWithIdOnly = await prisma.pro_config.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pro_configFindManyArgs>(args?: SelectSubset<T, pro_configFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Pro_config.
     * @param {pro_configCreateArgs} args - Arguments to create a Pro_config.
     * @example
     * // Create one Pro_config
     * const Pro_config = await prisma.pro_config.create({
     *   data: {
     *     // ... data to create a Pro_config
     *   }
     * })
     * 
     */
    create<T extends pro_configCreateArgs>(args: SelectSubset<T, pro_configCreateArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Pro_configs.
     * @param {pro_configCreateManyArgs} args - Arguments to create many Pro_configs.
     * @example
     * // Create many Pro_configs
     * const pro_config = await prisma.pro_config.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pro_configCreateManyArgs>(args?: SelectSubset<T, pro_configCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pro_configs and returns the data saved in the database.
     * @param {pro_configCreateManyAndReturnArgs} args - Arguments to create many Pro_configs.
     * @example
     * // Create many Pro_configs
     * const pro_config = await prisma.pro_config.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pro_configs and only return the `id`
     * const pro_configWithIdOnly = await prisma.pro_config.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pro_configCreateManyAndReturnArgs>(args?: SelectSubset<T, pro_configCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Pro_config.
     * @param {pro_configDeleteArgs} args - Arguments to delete one Pro_config.
     * @example
     * // Delete one Pro_config
     * const Pro_config = await prisma.pro_config.delete({
     *   where: {
     *     // ... filter to delete one Pro_config
     *   }
     * })
     * 
     */
    delete<T extends pro_configDeleteArgs>(args: SelectSubset<T, pro_configDeleteArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Pro_config.
     * @param {pro_configUpdateArgs} args - Arguments to update one Pro_config.
     * @example
     * // Update one Pro_config
     * const pro_config = await prisma.pro_config.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pro_configUpdateArgs>(args: SelectSubset<T, pro_configUpdateArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Pro_configs.
     * @param {pro_configDeleteManyArgs} args - Arguments to filter Pro_configs to delete.
     * @example
     * // Delete a few Pro_configs
     * const { count } = await prisma.pro_config.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pro_configDeleteManyArgs>(args?: SelectSubset<T, pro_configDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pro_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_configUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pro_configs
     * const pro_config = await prisma.pro_config.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pro_configUpdateManyArgs>(args: SelectSubset<T, pro_configUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pro_configs and returns the data updated in the database.
     * @param {pro_configUpdateManyAndReturnArgs} args - Arguments to update many Pro_configs.
     * @example
     * // Update many Pro_configs
     * const pro_config = await prisma.pro_config.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pro_configs and only return the `id`
     * const pro_configWithIdOnly = await prisma.pro_config.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pro_configUpdateManyAndReturnArgs>(args: SelectSubset<T, pro_configUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Pro_config.
     * @param {pro_configUpsertArgs} args - Arguments to update or create a Pro_config.
     * @example
     * // Update or create a Pro_config
     * const pro_config = await prisma.pro_config.upsert({
     *   create: {
     *     // ... data to create a Pro_config
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pro_config we want to update
     *   }
     * })
     */
    upsert<T extends pro_configUpsertArgs>(args: SelectSubset<T, pro_configUpsertArgs<ExtArgs>>): Prisma__pro_configClient<$Result.GetResult<Prisma.$pro_configPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Pro_configs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_configCountArgs} args - Arguments to filter Pro_configs to count.
     * @example
     * // Count the number of Pro_configs
     * const count = await prisma.pro_config.count({
     *   where: {
     *     // ... the filter for the Pro_configs we want to count
     *   }
     * })
    **/
    count<T extends pro_configCountArgs>(
      args?: Subset<T, pro_configCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pro_configCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pro_config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pro_configAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pro_configAggregateArgs>(args: Subset<T, Pro_configAggregateArgs>): Prisma.PrismaPromise<GetPro_configAggregateType<T>>

    /**
     * Group by Pro_config.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pro_configGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pro_configGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pro_configGroupByArgs['orderBy'] }
        : { orderBy?: pro_configGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pro_configGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPro_configGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pro_config model
   */
  readonly fields: pro_configFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pro_config.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pro_configClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    privy_user<T extends pro_config$privy_userArgs<ExtArgs> = {}>(args?: Subset<T, pro_config$privy_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$privy_userPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pro_config model
   */ 
  interface pro_configFieldRefs {
    readonly id: FieldRef<"pro_config", 'Int'>
    readonly config: FieldRef<"pro_config", 'Json'>
    readonly created_at: FieldRef<"pro_config", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pro_config findUnique
   */
  export type pro_configFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * Filter, which pro_config to fetch.
     */
    where: pro_configWhereUniqueInput
  }

  /**
   * pro_config findUniqueOrThrow
   */
  export type pro_configFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * Filter, which pro_config to fetch.
     */
    where: pro_configWhereUniqueInput
  }

  /**
   * pro_config findFirst
   */
  export type pro_configFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * Filter, which pro_config to fetch.
     */
    where?: pro_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_configs to fetch.
     */
    orderBy?: pro_configOrderByWithRelationInput | pro_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pro_configs.
     */
    cursor?: pro_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pro_configs.
     */
    distinct?: Pro_configScalarFieldEnum | Pro_configScalarFieldEnum[]
  }

  /**
   * pro_config findFirstOrThrow
   */
  export type pro_configFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * Filter, which pro_config to fetch.
     */
    where?: pro_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_configs to fetch.
     */
    orderBy?: pro_configOrderByWithRelationInput | pro_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pro_configs.
     */
    cursor?: pro_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_configs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pro_configs.
     */
    distinct?: Pro_configScalarFieldEnum | Pro_configScalarFieldEnum[]
  }

  /**
   * pro_config findMany
   */
  export type pro_configFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * Filter, which pro_configs to fetch.
     */
    where?: pro_configWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pro_configs to fetch.
     */
    orderBy?: pro_configOrderByWithRelationInput | pro_configOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pro_configs.
     */
    cursor?: pro_configWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pro_configs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pro_configs.
     */
    skip?: number
    distinct?: Pro_configScalarFieldEnum | Pro_configScalarFieldEnum[]
  }

  /**
   * pro_config create
   */
  export type pro_configCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * The data needed to create a pro_config.
     */
    data: XOR<pro_configCreateInput, pro_configUncheckedCreateInput>
  }

  /**
   * pro_config createMany
   */
  export type pro_configCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pro_configs.
     */
    data: pro_configCreateManyInput | pro_configCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pro_config createManyAndReturn
   */
  export type pro_configCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * The data used to create many pro_configs.
     */
    data: pro_configCreateManyInput | pro_configCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pro_config update
   */
  export type pro_configUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * The data needed to update a pro_config.
     */
    data: XOR<pro_configUpdateInput, pro_configUncheckedUpdateInput>
    /**
     * Choose, which pro_config to update.
     */
    where: pro_configWhereUniqueInput
  }

  /**
   * pro_config updateMany
   */
  export type pro_configUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pro_configs.
     */
    data: XOR<pro_configUpdateManyMutationInput, pro_configUncheckedUpdateManyInput>
    /**
     * Filter which pro_configs to update
     */
    where?: pro_configWhereInput
  }

  /**
   * pro_config updateManyAndReturn
   */
  export type pro_configUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * The data used to update pro_configs.
     */
    data: XOR<pro_configUpdateManyMutationInput, pro_configUncheckedUpdateManyInput>
    /**
     * Filter which pro_configs to update
     */
    where?: pro_configWhereInput
  }

  /**
   * pro_config upsert
   */
  export type pro_configUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * The filter to search for the pro_config to update in case it exists.
     */
    where: pro_configWhereUniqueInput
    /**
     * In case the pro_config found by the `where` argument doesn't exist, create a new pro_config with this data.
     */
    create: XOR<pro_configCreateInput, pro_configUncheckedCreateInput>
    /**
     * In case the pro_config was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pro_configUpdateInput, pro_configUncheckedUpdateInput>
  }

  /**
   * pro_config delete
   */
  export type pro_configDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
    /**
     * Filter which pro_config to delete.
     */
    where: pro_configWhereUniqueInput
  }

  /**
   * pro_config deleteMany
   */
  export type pro_configDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pro_configs to delete
     */
    where?: pro_configWhereInput
  }

  /**
   * pro_config.privy_user
   */
  export type pro_config$privy_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the privy_user
     */
    select?: privy_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the privy_user
     */
    omit?: privy_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: privy_userInclude<ExtArgs> | null
    where?: privy_userWhereInput
    orderBy?: privy_userOrderByWithRelationInput | privy_userOrderByWithRelationInput[]
    cursor?: privy_userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Privy_userScalarFieldEnum | Privy_userScalarFieldEnum[]
  }

  /**
   * pro_config without action
   */
  export type pro_configDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pro_config
     */
    select?: pro_configSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pro_config
     */
    omit?: pro_configOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pro_configInclude<ExtArgs> | null
  }


  /**
   * Model user_service_call_logs
   */

  export type AggregateUser_service_call_logs = {
    _count: User_service_call_logsCountAggregateOutputType | null
    _avg: User_service_call_logsAvgAggregateOutputType | null
    _sum: User_service_call_logsSumAggregateOutputType | null
    _min: User_service_call_logsMinAggregateOutputType | null
    _max: User_service_call_logsMaxAggregateOutputType | null
  }

  export type User_service_call_logsAvgAggregateOutputType = {
    id: number | null
    call_date: number | null
    call_count: number | null
  }

  export type User_service_call_logsSumAggregateOutputType = {
    id: number | null
    call_date: number | null
    call_count: number | null
  }

  export type User_service_call_logsMinAggregateOutputType = {
    id: number | null
    did: string | null
    call_date: number | null
    call_count: number | null
    service: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type User_service_call_logsMaxAggregateOutputType = {
    id: number | null
    did: string | null
    call_date: number | null
    call_count: number | null
    service: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type User_service_call_logsCountAggregateOutputType = {
    id: number
    did: number
    call_date: number
    call_count: number
    service: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type User_service_call_logsAvgAggregateInputType = {
    id?: true
    call_date?: true
    call_count?: true
  }

  export type User_service_call_logsSumAggregateInputType = {
    id?: true
    call_date?: true
    call_count?: true
  }

  export type User_service_call_logsMinAggregateInputType = {
    id?: true
    did?: true
    call_date?: true
    call_count?: true
    service?: true
    created_at?: true
    updated_at?: true
  }

  export type User_service_call_logsMaxAggregateInputType = {
    id?: true
    did?: true
    call_date?: true
    call_count?: true
    service?: true
    created_at?: true
    updated_at?: true
  }

  export type User_service_call_logsCountAggregateInputType = {
    id?: true
    did?: true
    call_date?: true
    call_count?: true
    service?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type User_service_call_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_service_call_logs to aggregate.
     */
    where?: user_service_call_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_service_call_logs to fetch.
     */
    orderBy?: user_service_call_logsOrderByWithRelationInput | user_service_call_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_service_call_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_service_call_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_service_call_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_service_call_logs
    **/
    _count?: true | User_service_call_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_service_call_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_service_call_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_service_call_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_service_call_logsMaxAggregateInputType
  }

  export type GetUser_service_call_logsAggregateType<T extends User_service_call_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_service_call_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_service_call_logs[P]>
      : GetScalarType<T[P], AggregateUser_service_call_logs[P]>
  }




  export type user_service_call_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_service_call_logsWhereInput
    orderBy?: user_service_call_logsOrderByWithAggregationInput | user_service_call_logsOrderByWithAggregationInput[]
    by: User_service_call_logsScalarFieldEnum[] | User_service_call_logsScalarFieldEnum
    having?: user_service_call_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_service_call_logsCountAggregateInputType | true
    _avg?: User_service_call_logsAvgAggregateInputType
    _sum?: User_service_call_logsSumAggregateInputType
    _min?: User_service_call_logsMinAggregateInputType
    _max?: User_service_call_logsMaxAggregateInputType
  }

  export type User_service_call_logsGroupByOutputType = {
    id: number
    did: string
    call_date: number
    call_count: number
    service: string
    created_at: Date
    updated_at: Date
    _count: User_service_call_logsCountAggregateOutputType | null
    _avg: User_service_call_logsAvgAggregateOutputType | null
    _sum: User_service_call_logsSumAggregateOutputType | null
    _min: User_service_call_logsMinAggregateOutputType | null
    _max: User_service_call_logsMaxAggregateOutputType | null
  }

  type GetUser_service_call_logsGroupByPayload<T extends user_service_call_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_service_call_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_service_call_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_service_call_logsGroupByOutputType[P]>
            : GetScalarType<T[P], User_service_call_logsGroupByOutputType[P]>
        }
      >
    >


  export type user_service_call_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    call_date?: boolean
    call_count?: boolean
    service?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user_service_call_logs"]>

  export type user_service_call_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    call_date?: boolean
    call_count?: boolean
    service?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user_service_call_logs"]>

  export type user_service_call_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    call_date?: boolean
    call_count?: boolean
    service?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["user_service_call_logs"]>

  export type user_service_call_logsSelectScalar = {
    id?: boolean
    did?: boolean
    call_date?: boolean
    call_count?: boolean
    service?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type user_service_call_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "did" | "call_date" | "call_count" | "service" | "created_at" | "updated_at", ExtArgs["result"]["user_service_call_logs"]>

  export type $user_service_call_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_service_call_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      did: string
      call_date: number
      call_count: number
      service: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["user_service_call_logs"]>
    composites: {}
  }

  type user_service_call_logsGetPayload<S extends boolean | null | undefined | user_service_call_logsDefaultArgs> = $Result.GetResult<Prisma.$user_service_call_logsPayload, S>

  type user_service_call_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_service_call_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_service_call_logsCountAggregateInputType | true
    }

  export interface user_service_call_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_service_call_logs'], meta: { name: 'user_service_call_logs' } }
    /**
     * Find zero or one User_service_call_logs that matches the filter.
     * @param {user_service_call_logsFindUniqueArgs} args - Arguments to find a User_service_call_logs
     * @example
     * // Get one User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_service_call_logsFindUniqueArgs>(args: SelectSubset<T, user_service_call_logsFindUniqueArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_service_call_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_service_call_logsFindUniqueOrThrowArgs} args - Arguments to find a User_service_call_logs
     * @example
     * // Get one User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_service_call_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_service_call_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_service_call_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_service_call_logsFindFirstArgs} args - Arguments to find a User_service_call_logs
     * @example
     * // Get one User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_service_call_logsFindFirstArgs>(args?: SelectSubset<T, user_service_call_logsFindFirstArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_service_call_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_service_call_logsFindFirstOrThrowArgs} args - Arguments to find a User_service_call_logs
     * @example
     * // Get one User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_service_call_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_service_call_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_service_call_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_service_call_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.findMany()
     * 
     * // Get first 10 User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_service_call_logsWithIdOnly = await prisma.user_service_call_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_service_call_logsFindManyArgs>(args?: SelectSubset<T, user_service_call_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_service_call_logs.
     * @param {user_service_call_logsCreateArgs} args - Arguments to create a User_service_call_logs.
     * @example
     * // Create one User_service_call_logs
     * const User_service_call_logs = await prisma.user_service_call_logs.create({
     *   data: {
     *     // ... data to create a User_service_call_logs
     *   }
     * })
     * 
     */
    create<T extends user_service_call_logsCreateArgs>(args: SelectSubset<T, user_service_call_logsCreateArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_service_call_logs.
     * @param {user_service_call_logsCreateManyArgs} args - Arguments to create many User_service_call_logs.
     * @example
     * // Create many User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_service_call_logsCreateManyArgs>(args?: SelectSubset<T, user_service_call_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_service_call_logs and returns the data saved in the database.
     * @param {user_service_call_logsCreateManyAndReturnArgs} args - Arguments to create many User_service_call_logs.
     * @example
     * // Create many User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_service_call_logs and only return the `id`
     * const user_service_call_logsWithIdOnly = await prisma.user_service_call_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_service_call_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_service_call_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_service_call_logs.
     * @param {user_service_call_logsDeleteArgs} args - Arguments to delete one User_service_call_logs.
     * @example
     * // Delete one User_service_call_logs
     * const User_service_call_logs = await prisma.user_service_call_logs.delete({
     *   where: {
     *     // ... filter to delete one User_service_call_logs
     *   }
     * })
     * 
     */
    delete<T extends user_service_call_logsDeleteArgs>(args: SelectSubset<T, user_service_call_logsDeleteArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_service_call_logs.
     * @param {user_service_call_logsUpdateArgs} args - Arguments to update one User_service_call_logs.
     * @example
     * // Update one User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_service_call_logsUpdateArgs>(args: SelectSubset<T, user_service_call_logsUpdateArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_service_call_logs.
     * @param {user_service_call_logsDeleteManyArgs} args - Arguments to filter User_service_call_logs to delete.
     * @example
     * // Delete a few User_service_call_logs
     * const { count } = await prisma.user_service_call_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_service_call_logsDeleteManyArgs>(args?: SelectSubset<T, user_service_call_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_service_call_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_service_call_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_service_call_logsUpdateManyArgs>(args: SelectSubset<T, user_service_call_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_service_call_logs and returns the data updated in the database.
     * @param {user_service_call_logsUpdateManyAndReturnArgs} args - Arguments to update many User_service_call_logs.
     * @example
     * // Update many User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_service_call_logs and only return the `id`
     * const user_service_call_logsWithIdOnly = await prisma.user_service_call_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_service_call_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_service_call_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_service_call_logs.
     * @param {user_service_call_logsUpsertArgs} args - Arguments to update or create a User_service_call_logs.
     * @example
     * // Update or create a User_service_call_logs
     * const user_service_call_logs = await prisma.user_service_call_logs.upsert({
     *   create: {
     *     // ... data to create a User_service_call_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_service_call_logs we want to update
     *   }
     * })
     */
    upsert<T extends user_service_call_logsUpsertArgs>(args: SelectSubset<T, user_service_call_logsUpsertArgs<ExtArgs>>): Prisma__user_service_call_logsClient<$Result.GetResult<Prisma.$user_service_call_logsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_service_call_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_service_call_logsCountArgs} args - Arguments to filter User_service_call_logs to count.
     * @example
     * // Count the number of User_service_call_logs
     * const count = await prisma.user_service_call_logs.count({
     *   where: {
     *     // ... the filter for the User_service_call_logs we want to count
     *   }
     * })
    **/
    count<T extends user_service_call_logsCountArgs>(
      args?: Subset<T, user_service_call_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_service_call_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_service_call_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_service_call_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_service_call_logsAggregateArgs>(args: Subset<T, User_service_call_logsAggregateArgs>): Prisma.PrismaPromise<GetUser_service_call_logsAggregateType<T>>

    /**
     * Group by User_service_call_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_service_call_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_service_call_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_service_call_logsGroupByArgs['orderBy'] }
        : { orderBy?: user_service_call_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_service_call_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_service_call_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_service_call_logs model
   */
  readonly fields: user_service_call_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_service_call_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_service_call_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_service_call_logs model
   */ 
  interface user_service_call_logsFieldRefs {
    readonly id: FieldRef<"user_service_call_logs", 'Int'>
    readonly did: FieldRef<"user_service_call_logs", 'String'>
    readonly call_date: FieldRef<"user_service_call_logs", 'Int'>
    readonly call_count: FieldRef<"user_service_call_logs", 'Int'>
    readonly service: FieldRef<"user_service_call_logs", 'String'>
    readonly created_at: FieldRef<"user_service_call_logs", 'DateTime'>
    readonly updated_at: FieldRef<"user_service_call_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_service_call_logs findUnique
   */
  export type user_service_call_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * Filter, which user_service_call_logs to fetch.
     */
    where: user_service_call_logsWhereUniqueInput
  }

  /**
   * user_service_call_logs findUniqueOrThrow
   */
  export type user_service_call_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * Filter, which user_service_call_logs to fetch.
     */
    where: user_service_call_logsWhereUniqueInput
  }

  /**
   * user_service_call_logs findFirst
   */
  export type user_service_call_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * Filter, which user_service_call_logs to fetch.
     */
    where?: user_service_call_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_service_call_logs to fetch.
     */
    orderBy?: user_service_call_logsOrderByWithRelationInput | user_service_call_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_service_call_logs.
     */
    cursor?: user_service_call_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_service_call_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_service_call_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_service_call_logs.
     */
    distinct?: User_service_call_logsScalarFieldEnum | User_service_call_logsScalarFieldEnum[]
  }

  /**
   * user_service_call_logs findFirstOrThrow
   */
  export type user_service_call_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * Filter, which user_service_call_logs to fetch.
     */
    where?: user_service_call_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_service_call_logs to fetch.
     */
    orderBy?: user_service_call_logsOrderByWithRelationInput | user_service_call_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_service_call_logs.
     */
    cursor?: user_service_call_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_service_call_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_service_call_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_service_call_logs.
     */
    distinct?: User_service_call_logsScalarFieldEnum | User_service_call_logsScalarFieldEnum[]
  }

  /**
   * user_service_call_logs findMany
   */
  export type user_service_call_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * Filter, which user_service_call_logs to fetch.
     */
    where?: user_service_call_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_service_call_logs to fetch.
     */
    orderBy?: user_service_call_logsOrderByWithRelationInput | user_service_call_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_service_call_logs.
     */
    cursor?: user_service_call_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_service_call_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_service_call_logs.
     */
    skip?: number
    distinct?: User_service_call_logsScalarFieldEnum | User_service_call_logsScalarFieldEnum[]
  }

  /**
   * user_service_call_logs create
   */
  export type user_service_call_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a user_service_call_logs.
     */
    data: XOR<user_service_call_logsCreateInput, user_service_call_logsUncheckedCreateInput>
  }

  /**
   * user_service_call_logs createMany
   */
  export type user_service_call_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_service_call_logs.
     */
    data: user_service_call_logsCreateManyInput | user_service_call_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_service_call_logs createManyAndReturn
   */
  export type user_service_call_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * The data used to create many user_service_call_logs.
     */
    data: user_service_call_logsCreateManyInput | user_service_call_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_service_call_logs update
   */
  export type user_service_call_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a user_service_call_logs.
     */
    data: XOR<user_service_call_logsUpdateInput, user_service_call_logsUncheckedUpdateInput>
    /**
     * Choose, which user_service_call_logs to update.
     */
    where: user_service_call_logsWhereUniqueInput
  }

  /**
   * user_service_call_logs updateMany
   */
  export type user_service_call_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_service_call_logs.
     */
    data: XOR<user_service_call_logsUpdateManyMutationInput, user_service_call_logsUncheckedUpdateManyInput>
    /**
     * Filter which user_service_call_logs to update
     */
    where?: user_service_call_logsWhereInput
  }

  /**
   * user_service_call_logs updateManyAndReturn
   */
  export type user_service_call_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * The data used to update user_service_call_logs.
     */
    data: XOR<user_service_call_logsUpdateManyMutationInput, user_service_call_logsUncheckedUpdateManyInput>
    /**
     * Filter which user_service_call_logs to update
     */
    where?: user_service_call_logsWhereInput
  }

  /**
   * user_service_call_logs upsert
   */
  export type user_service_call_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the user_service_call_logs to update in case it exists.
     */
    where: user_service_call_logsWhereUniqueInput
    /**
     * In case the user_service_call_logs found by the `where` argument doesn't exist, create a new user_service_call_logs with this data.
     */
    create: XOR<user_service_call_logsCreateInput, user_service_call_logsUncheckedCreateInput>
    /**
     * In case the user_service_call_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_service_call_logsUpdateInput, user_service_call_logsUncheckedUpdateInput>
  }

  /**
   * user_service_call_logs delete
   */
  export type user_service_call_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
    /**
     * Filter which user_service_call_logs to delete.
     */
    where: user_service_call_logsWhereUniqueInput
  }

  /**
   * user_service_call_logs deleteMany
   */
  export type user_service_call_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_service_call_logs to delete
     */
    where?: user_service_call_logsWhereInput
  }

  /**
   * user_service_call_logs without action
   */
  export type user_service_call_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_service_call_logs
     */
    select?: user_service_call_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_service_call_logs
     */
    omit?: user_service_call_logsOmit<ExtArgs> | null
  }


  /**
   * Model invite_code_bind_logs
   */

  export type AggregateInvite_code_bind_logs = {
    _count: Invite_code_bind_logsCountAggregateOutputType | null
    _avg: Invite_code_bind_logsAvgAggregateOutputType | null
    _sum: Invite_code_bind_logsSumAggregateOutputType | null
    _min: Invite_code_bind_logsMinAggregateOutputType | null
    _max: Invite_code_bind_logsMaxAggregateOutputType | null
  }

  export type Invite_code_bind_logsAvgAggregateOutputType = {
    id: number | null
  }

  export type Invite_code_bind_logsSumAggregateOutputType = {
    id: number | null
  }

  export type Invite_code_bind_logsMinAggregateOutputType = {
    id: number | null
    code: string | null
    email: string | null
    signature: string | null
    did: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Invite_code_bind_logsMaxAggregateOutputType = {
    id: number | null
    code: string | null
    email: string | null
    signature: string | null
    did: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Invite_code_bind_logsCountAggregateOutputType = {
    id: number
    code: number
    email: number
    signature: number
    did: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Invite_code_bind_logsAvgAggregateInputType = {
    id?: true
  }

  export type Invite_code_bind_logsSumAggregateInputType = {
    id?: true
  }

  export type Invite_code_bind_logsMinAggregateInputType = {
    id?: true
    code?: true
    email?: true
    signature?: true
    did?: true
    created_at?: true
    updated_at?: true
  }

  export type Invite_code_bind_logsMaxAggregateInputType = {
    id?: true
    code?: true
    email?: true
    signature?: true
    did?: true
    created_at?: true
    updated_at?: true
  }

  export type Invite_code_bind_logsCountAggregateInputType = {
    id?: true
    code?: true
    email?: true
    signature?: true
    did?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Invite_code_bind_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invite_code_bind_logs to aggregate.
     */
    where?: invite_code_bind_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_code_bind_logs to fetch.
     */
    orderBy?: invite_code_bind_logsOrderByWithRelationInput | invite_code_bind_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: invite_code_bind_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_code_bind_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_code_bind_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned invite_code_bind_logs
    **/
    _count?: true | Invite_code_bind_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Invite_code_bind_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Invite_code_bind_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Invite_code_bind_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Invite_code_bind_logsMaxAggregateInputType
  }

  export type GetInvite_code_bind_logsAggregateType<T extends Invite_code_bind_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateInvite_code_bind_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvite_code_bind_logs[P]>
      : GetScalarType<T[P], AggregateInvite_code_bind_logs[P]>
  }




  export type invite_code_bind_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: invite_code_bind_logsWhereInput
    orderBy?: invite_code_bind_logsOrderByWithAggregationInput | invite_code_bind_logsOrderByWithAggregationInput[]
    by: Invite_code_bind_logsScalarFieldEnum[] | Invite_code_bind_logsScalarFieldEnum
    having?: invite_code_bind_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Invite_code_bind_logsCountAggregateInputType | true
    _avg?: Invite_code_bind_logsAvgAggregateInputType
    _sum?: Invite_code_bind_logsSumAggregateInputType
    _min?: Invite_code_bind_logsMinAggregateInputType
    _max?: Invite_code_bind_logsMaxAggregateInputType
  }

  export type Invite_code_bind_logsGroupByOutputType = {
    id: number
    code: string
    email: string
    signature: string
    did: string | null
    created_at: Date
    updated_at: Date
    _count: Invite_code_bind_logsCountAggregateOutputType | null
    _avg: Invite_code_bind_logsAvgAggregateOutputType | null
    _sum: Invite_code_bind_logsSumAggregateOutputType | null
    _min: Invite_code_bind_logsMinAggregateOutputType | null
    _max: Invite_code_bind_logsMaxAggregateOutputType | null
  }

  type GetInvite_code_bind_logsGroupByPayload<T extends invite_code_bind_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Invite_code_bind_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Invite_code_bind_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Invite_code_bind_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Invite_code_bind_logsGroupByOutputType[P]>
        }
      >
    >


  export type invite_code_bind_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    email?: boolean
    signature?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["invite_code_bind_logs"]>

  export type invite_code_bind_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    email?: boolean
    signature?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["invite_code_bind_logs"]>

  export type invite_code_bind_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    email?: boolean
    signature?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["invite_code_bind_logs"]>

  export type invite_code_bind_logsSelectScalar = {
    id?: boolean
    code?: boolean
    email?: boolean
    signature?: boolean
    did?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type invite_code_bind_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "email" | "signature" | "did" | "created_at" | "updated_at", ExtArgs["result"]["invite_code_bind_logs"]>

  export type $invite_code_bind_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "invite_code_bind_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      code: string
      email: string
      signature: string
      did: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["invite_code_bind_logs"]>
    composites: {}
  }

  type invite_code_bind_logsGetPayload<S extends boolean | null | undefined | invite_code_bind_logsDefaultArgs> = $Result.GetResult<Prisma.$invite_code_bind_logsPayload, S>

  type invite_code_bind_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<invite_code_bind_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Invite_code_bind_logsCountAggregateInputType | true
    }

  export interface invite_code_bind_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['invite_code_bind_logs'], meta: { name: 'invite_code_bind_logs' } }
    /**
     * Find zero or one Invite_code_bind_logs that matches the filter.
     * @param {invite_code_bind_logsFindUniqueArgs} args - Arguments to find a Invite_code_bind_logs
     * @example
     * // Get one Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends invite_code_bind_logsFindUniqueArgs>(args: SelectSubset<T, invite_code_bind_logsFindUniqueArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Invite_code_bind_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {invite_code_bind_logsFindUniqueOrThrowArgs} args - Arguments to find a Invite_code_bind_logs
     * @example
     * // Get one Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends invite_code_bind_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, invite_code_bind_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Invite_code_bind_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_code_bind_logsFindFirstArgs} args - Arguments to find a Invite_code_bind_logs
     * @example
     * // Get one Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends invite_code_bind_logsFindFirstArgs>(args?: SelectSubset<T, invite_code_bind_logsFindFirstArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Invite_code_bind_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_code_bind_logsFindFirstOrThrowArgs} args - Arguments to find a Invite_code_bind_logs
     * @example
     * // Get one Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends invite_code_bind_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, invite_code_bind_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Invite_code_bind_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_code_bind_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findMany()
     * 
     * // Get first 10 Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invite_code_bind_logsWithIdOnly = await prisma.invite_code_bind_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends invite_code_bind_logsFindManyArgs>(args?: SelectSubset<T, invite_code_bind_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Invite_code_bind_logs.
     * @param {invite_code_bind_logsCreateArgs} args - Arguments to create a Invite_code_bind_logs.
     * @example
     * // Create one Invite_code_bind_logs
     * const Invite_code_bind_logs = await prisma.invite_code_bind_logs.create({
     *   data: {
     *     // ... data to create a Invite_code_bind_logs
     *   }
     * })
     * 
     */
    create<T extends invite_code_bind_logsCreateArgs>(args: SelectSubset<T, invite_code_bind_logsCreateArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Invite_code_bind_logs.
     * @param {invite_code_bind_logsCreateManyArgs} args - Arguments to create many Invite_code_bind_logs.
     * @example
     * // Create many Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends invite_code_bind_logsCreateManyArgs>(args?: SelectSubset<T, invite_code_bind_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invite_code_bind_logs and returns the data saved in the database.
     * @param {invite_code_bind_logsCreateManyAndReturnArgs} args - Arguments to create many Invite_code_bind_logs.
     * @example
     * // Create many Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invite_code_bind_logs and only return the `id`
     * const invite_code_bind_logsWithIdOnly = await prisma.invite_code_bind_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends invite_code_bind_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, invite_code_bind_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Invite_code_bind_logs.
     * @param {invite_code_bind_logsDeleteArgs} args - Arguments to delete one Invite_code_bind_logs.
     * @example
     * // Delete one Invite_code_bind_logs
     * const Invite_code_bind_logs = await prisma.invite_code_bind_logs.delete({
     *   where: {
     *     // ... filter to delete one Invite_code_bind_logs
     *   }
     * })
     * 
     */
    delete<T extends invite_code_bind_logsDeleteArgs>(args: SelectSubset<T, invite_code_bind_logsDeleteArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Invite_code_bind_logs.
     * @param {invite_code_bind_logsUpdateArgs} args - Arguments to update one Invite_code_bind_logs.
     * @example
     * // Update one Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends invite_code_bind_logsUpdateArgs>(args: SelectSubset<T, invite_code_bind_logsUpdateArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Invite_code_bind_logs.
     * @param {invite_code_bind_logsDeleteManyArgs} args - Arguments to filter Invite_code_bind_logs to delete.
     * @example
     * // Delete a few Invite_code_bind_logs
     * const { count } = await prisma.invite_code_bind_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends invite_code_bind_logsDeleteManyArgs>(args?: SelectSubset<T, invite_code_bind_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invite_code_bind_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_code_bind_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends invite_code_bind_logsUpdateManyArgs>(args: SelectSubset<T, invite_code_bind_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invite_code_bind_logs and returns the data updated in the database.
     * @param {invite_code_bind_logsUpdateManyAndReturnArgs} args - Arguments to update many Invite_code_bind_logs.
     * @example
     * // Update many Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invite_code_bind_logs and only return the `id`
     * const invite_code_bind_logsWithIdOnly = await prisma.invite_code_bind_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends invite_code_bind_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, invite_code_bind_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Invite_code_bind_logs.
     * @param {invite_code_bind_logsUpsertArgs} args - Arguments to update or create a Invite_code_bind_logs.
     * @example
     * // Update or create a Invite_code_bind_logs
     * const invite_code_bind_logs = await prisma.invite_code_bind_logs.upsert({
     *   create: {
     *     // ... data to create a Invite_code_bind_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invite_code_bind_logs we want to update
     *   }
     * })
     */
    upsert<T extends invite_code_bind_logsUpsertArgs>(args: SelectSubset<T, invite_code_bind_logsUpsertArgs<ExtArgs>>): Prisma__invite_code_bind_logsClient<$Result.GetResult<Prisma.$invite_code_bind_logsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Invite_code_bind_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_code_bind_logsCountArgs} args - Arguments to filter Invite_code_bind_logs to count.
     * @example
     * // Count the number of Invite_code_bind_logs
     * const count = await prisma.invite_code_bind_logs.count({
     *   where: {
     *     // ... the filter for the Invite_code_bind_logs we want to count
     *   }
     * })
    **/
    count<T extends invite_code_bind_logsCountArgs>(
      args?: Subset<T, invite_code_bind_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Invite_code_bind_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invite_code_bind_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Invite_code_bind_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Invite_code_bind_logsAggregateArgs>(args: Subset<T, Invite_code_bind_logsAggregateArgs>): Prisma.PrismaPromise<GetInvite_code_bind_logsAggregateType<T>>

    /**
     * Group by Invite_code_bind_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {invite_code_bind_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends invite_code_bind_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: invite_code_bind_logsGroupByArgs['orderBy'] }
        : { orderBy?: invite_code_bind_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, invite_code_bind_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvite_code_bind_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the invite_code_bind_logs model
   */
  readonly fields: invite_code_bind_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for invite_code_bind_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__invite_code_bind_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the invite_code_bind_logs model
   */ 
  interface invite_code_bind_logsFieldRefs {
    readonly id: FieldRef<"invite_code_bind_logs", 'Int'>
    readonly code: FieldRef<"invite_code_bind_logs", 'String'>
    readonly email: FieldRef<"invite_code_bind_logs", 'String'>
    readonly signature: FieldRef<"invite_code_bind_logs", 'String'>
    readonly did: FieldRef<"invite_code_bind_logs", 'String'>
    readonly created_at: FieldRef<"invite_code_bind_logs", 'DateTime'>
    readonly updated_at: FieldRef<"invite_code_bind_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * invite_code_bind_logs findUnique
   */
  export type invite_code_bind_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * Filter, which invite_code_bind_logs to fetch.
     */
    where: invite_code_bind_logsWhereUniqueInput
  }

  /**
   * invite_code_bind_logs findUniqueOrThrow
   */
  export type invite_code_bind_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * Filter, which invite_code_bind_logs to fetch.
     */
    where: invite_code_bind_logsWhereUniqueInput
  }

  /**
   * invite_code_bind_logs findFirst
   */
  export type invite_code_bind_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * Filter, which invite_code_bind_logs to fetch.
     */
    where?: invite_code_bind_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_code_bind_logs to fetch.
     */
    orderBy?: invite_code_bind_logsOrderByWithRelationInput | invite_code_bind_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invite_code_bind_logs.
     */
    cursor?: invite_code_bind_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_code_bind_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_code_bind_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invite_code_bind_logs.
     */
    distinct?: Invite_code_bind_logsScalarFieldEnum | Invite_code_bind_logsScalarFieldEnum[]
  }

  /**
   * invite_code_bind_logs findFirstOrThrow
   */
  export type invite_code_bind_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * Filter, which invite_code_bind_logs to fetch.
     */
    where?: invite_code_bind_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_code_bind_logs to fetch.
     */
    orderBy?: invite_code_bind_logsOrderByWithRelationInput | invite_code_bind_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for invite_code_bind_logs.
     */
    cursor?: invite_code_bind_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_code_bind_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_code_bind_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of invite_code_bind_logs.
     */
    distinct?: Invite_code_bind_logsScalarFieldEnum | Invite_code_bind_logsScalarFieldEnum[]
  }

  /**
   * invite_code_bind_logs findMany
   */
  export type invite_code_bind_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * Filter, which invite_code_bind_logs to fetch.
     */
    where?: invite_code_bind_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of invite_code_bind_logs to fetch.
     */
    orderBy?: invite_code_bind_logsOrderByWithRelationInput | invite_code_bind_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing invite_code_bind_logs.
     */
    cursor?: invite_code_bind_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` invite_code_bind_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` invite_code_bind_logs.
     */
    skip?: number
    distinct?: Invite_code_bind_logsScalarFieldEnum | Invite_code_bind_logsScalarFieldEnum[]
  }

  /**
   * invite_code_bind_logs create
   */
  export type invite_code_bind_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a invite_code_bind_logs.
     */
    data: XOR<invite_code_bind_logsCreateInput, invite_code_bind_logsUncheckedCreateInput>
  }

  /**
   * invite_code_bind_logs createMany
   */
  export type invite_code_bind_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many invite_code_bind_logs.
     */
    data: invite_code_bind_logsCreateManyInput | invite_code_bind_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * invite_code_bind_logs createManyAndReturn
   */
  export type invite_code_bind_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * The data used to create many invite_code_bind_logs.
     */
    data: invite_code_bind_logsCreateManyInput | invite_code_bind_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * invite_code_bind_logs update
   */
  export type invite_code_bind_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a invite_code_bind_logs.
     */
    data: XOR<invite_code_bind_logsUpdateInput, invite_code_bind_logsUncheckedUpdateInput>
    /**
     * Choose, which invite_code_bind_logs to update.
     */
    where: invite_code_bind_logsWhereUniqueInput
  }

  /**
   * invite_code_bind_logs updateMany
   */
  export type invite_code_bind_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update invite_code_bind_logs.
     */
    data: XOR<invite_code_bind_logsUpdateManyMutationInput, invite_code_bind_logsUncheckedUpdateManyInput>
    /**
     * Filter which invite_code_bind_logs to update
     */
    where?: invite_code_bind_logsWhereInput
  }

  /**
   * invite_code_bind_logs updateManyAndReturn
   */
  export type invite_code_bind_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * The data used to update invite_code_bind_logs.
     */
    data: XOR<invite_code_bind_logsUpdateManyMutationInput, invite_code_bind_logsUncheckedUpdateManyInput>
    /**
     * Filter which invite_code_bind_logs to update
     */
    where?: invite_code_bind_logsWhereInput
  }

  /**
   * invite_code_bind_logs upsert
   */
  export type invite_code_bind_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the invite_code_bind_logs to update in case it exists.
     */
    where: invite_code_bind_logsWhereUniqueInput
    /**
     * In case the invite_code_bind_logs found by the `where` argument doesn't exist, create a new invite_code_bind_logs with this data.
     */
    create: XOR<invite_code_bind_logsCreateInput, invite_code_bind_logsUncheckedCreateInput>
    /**
     * In case the invite_code_bind_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<invite_code_bind_logsUpdateInput, invite_code_bind_logsUncheckedUpdateInput>
  }

  /**
   * invite_code_bind_logs delete
   */
  export type invite_code_bind_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
    /**
     * Filter which invite_code_bind_logs to delete.
     */
    where: invite_code_bind_logsWhereUniqueInput
  }

  /**
   * invite_code_bind_logs deleteMany
   */
  export type invite_code_bind_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which invite_code_bind_logs to delete
     */
    where?: invite_code_bind_logsWhereInput
  }

  /**
   * invite_code_bind_logs without action
   */
  export type invite_code_bind_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the invite_code_bind_logs
     */
    select?: invite_code_bind_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the invite_code_bind_logs
     */
    omit?: invite_code_bind_logsOmit<ExtArgs> | null
  }


  /**
   * Model watchlist
   */

  export type AggregateWatchlist = {
    _count: WatchlistCountAggregateOutputType | null
    _avg: WatchlistAvgAggregateOutputType | null
    _sum: WatchlistSumAggregateOutputType | null
    _min: WatchlistMinAggregateOutputType | null
    _max: WatchlistMaxAggregateOutputType | null
  }

  export type WatchlistAvgAggregateOutputType = {
    id: number | null
  }

  export type WatchlistSumAggregateOutputType = {
    id: number | null
  }

  export type WatchlistMinAggregateOutputType = {
    id: number | null
    did: string | null
    token_address: string | null
    token_symbol: string | null
    url: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type WatchlistMaxAggregateOutputType = {
    id: number | null
    did: string | null
    token_address: string | null
    token_symbol: string | null
    url: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type WatchlistCountAggregateOutputType = {
    id: number
    did: number
    token_address: number
    token_symbol: number
    url: number
    network: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type WatchlistAvgAggregateInputType = {
    id?: true
  }

  export type WatchlistSumAggregateInputType = {
    id?: true
  }

  export type WatchlistMinAggregateInputType = {
    id?: true
    did?: true
    token_address?: true
    token_symbol?: true
    url?: true
    network?: true
    created_at?: true
    updated_at?: true
  }

  export type WatchlistMaxAggregateInputType = {
    id?: true
    did?: true
    token_address?: true
    token_symbol?: true
    url?: true
    network?: true
    created_at?: true
    updated_at?: true
  }

  export type WatchlistCountAggregateInputType = {
    id?: true
    did?: true
    token_address?: true
    token_symbol?: true
    url?: true
    network?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type WatchlistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which watchlist to aggregate.
     */
    where?: watchlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchlists to fetch.
     */
    orderBy?: watchlistOrderByWithRelationInput | watchlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: watchlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned watchlists
    **/
    _count?: true | WatchlistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WatchlistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WatchlistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WatchlistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WatchlistMaxAggregateInputType
  }

  export type GetWatchlistAggregateType<T extends WatchlistAggregateArgs> = {
        [P in keyof T & keyof AggregateWatchlist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWatchlist[P]>
      : GetScalarType<T[P], AggregateWatchlist[P]>
  }




  export type watchlistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: watchlistWhereInput
    orderBy?: watchlistOrderByWithAggregationInput | watchlistOrderByWithAggregationInput[]
    by: WatchlistScalarFieldEnum[] | WatchlistScalarFieldEnum
    having?: watchlistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WatchlistCountAggregateInputType | true
    _avg?: WatchlistAvgAggregateInputType
    _sum?: WatchlistSumAggregateInputType
    _min?: WatchlistMinAggregateInputType
    _max?: WatchlistMaxAggregateInputType
  }

  export type WatchlistGroupByOutputType = {
    id: number
    did: string
    token_address: string
    token_symbol: string | null
    url: string | null
    network: string
    created_at: Date
    updated_at: Date
    _count: WatchlistCountAggregateOutputType | null
    _avg: WatchlistAvgAggregateOutputType | null
    _sum: WatchlistSumAggregateOutputType | null
    _min: WatchlistMinAggregateOutputType | null
    _max: WatchlistMaxAggregateOutputType | null
  }

  type GetWatchlistGroupByPayload<T extends watchlistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WatchlistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WatchlistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WatchlistGroupByOutputType[P]>
            : GetScalarType<T[P], WatchlistGroupByOutputType[P]>
        }
      >
    >


  export type watchlistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    token_address?: boolean
    token_symbol?: boolean
    url?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["watchlist"]>

  export type watchlistSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    token_address?: boolean
    token_symbol?: boolean
    url?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["watchlist"]>

  export type watchlistSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    token_address?: boolean
    token_symbol?: boolean
    url?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["watchlist"]>

  export type watchlistSelectScalar = {
    id?: boolean
    did?: boolean
    token_address?: boolean
    token_symbol?: boolean
    url?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type watchlistOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "did" | "token_address" | "token_symbol" | "url" | "network" | "created_at" | "updated_at", ExtArgs["result"]["watchlist"]>

  export type $watchlistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "watchlist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      did: string
      token_address: string
      token_symbol: string | null
      url: string | null
      network: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["watchlist"]>
    composites: {}
  }

  type watchlistGetPayload<S extends boolean | null | undefined | watchlistDefaultArgs> = $Result.GetResult<Prisma.$watchlistPayload, S>

  type watchlistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<watchlistFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WatchlistCountAggregateInputType | true
    }

  export interface watchlistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['watchlist'], meta: { name: 'watchlist' } }
    /**
     * Find zero or one Watchlist that matches the filter.
     * @param {watchlistFindUniqueArgs} args - Arguments to find a Watchlist
     * @example
     * // Get one Watchlist
     * const watchlist = await prisma.watchlist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends watchlistFindUniqueArgs>(args: SelectSubset<T, watchlistFindUniqueArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Watchlist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {watchlistFindUniqueOrThrowArgs} args - Arguments to find a Watchlist
     * @example
     * // Get one Watchlist
     * const watchlist = await prisma.watchlist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends watchlistFindUniqueOrThrowArgs>(args: SelectSubset<T, watchlistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Watchlist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchlistFindFirstArgs} args - Arguments to find a Watchlist
     * @example
     * // Get one Watchlist
     * const watchlist = await prisma.watchlist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends watchlistFindFirstArgs>(args?: SelectSubset<T, watchlistFindFirstArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Watchlist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchlistFindFirstOrThrowArgs} args - Arguments to find a Watchlist
     * @example
     * // Get one Watchlist
     * const watchlist = await prisma.watchlist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends watchlistFindFirstOrThrowArgs>(args?: SelectSubset<T, watchlistFindFirstOrThrowArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Watchlists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchlistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Watchlists
     * const watchlists = await prisma.watchlist.findMany()
     * 
     * // Get first 10 Watchlists
     * const watchlists = await prisma.watchlist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const watchlistWithIdOnly = await prisma.watchlist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends watchlistFindManyArgs>(args?: SelectSubset<T, watchlistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Watchlist.
     * @param {watchlistCreateArgs} args - Arguments to create a Watchlist.
     * @example
     * // Create one Watchlist
     * const Watchlist = await prisma.watchlist.create({
     *   data: {
     *     // ... data to create a Watchlist
     *   }
     * })
     * 
     */
    create<T extends watchlistCreateArgs>(args: SelectSubset<T, watchlistCreateArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Watchlists.
     * @param {watchlistCreateManyArgs} args - Arguments to create many Watchlists.
     * @example
     * // Create many Watchlists
     * const watchlist = await prisma.watchlist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends watchlistCreateManyArgs>(args?: SelectSubset<T, watchlistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Watchlists and returns the data saved in the database.
     * @param {watchlistCreateManyAndReturnArgs} args - Arguments to create many Watchlists.
     * @example
     * // Create many Watchlists
     * const watchlist = await prisma.watchlist.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Watchlists and only return the `id`
     * const watchlistWithIdOnly = await prisma.watchlist.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends watchlistCreateManyAndReturnArgs>(args?: SelectSubset<T, watchlistCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Watchlist.
     * @param {watchlistDeleteArgs} args - Arguments to delete one Watchlist.
     * @example
     * // Delete one Watchlist
     * const Watchlist = await prisma.watchlist.delete({
     *   where: {
     *     // ... filter to delete one Watchlist
     *   }
     * })
     * 
     */
    delete<T extends watchlistDeleteArgs>(args: SelectSubset<T, watchlistDeleteArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Watchlist.
     * @param {watchlistUpdateArgs} args - Arguments to update one Watchlist.
     * @example
     * // Update one Watchlist
     * const watchlist = await prisma.watchlist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends watchlistUpdateArgs>(args: SelectSubset<T, watchlistUpdateArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Watchlists.
     * @param {watchlistDeleteManyArgs} args - Arguments to filter Watchlists to delete.
     * @example
     * // Delete a few Watchlists
     * const { count } = await prisma.watchlist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends watchlistDeleteManyArgs>(args?: SelectSubset<T, watchlistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Watchlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchlistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Watchlists
     * const watchlist = await prisma.watchlist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends watchlistUpdateManyArgs>(args: SelectSubset<T, watchlistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Watchlists and returns the data updated in the database.
     * @param {watchlistUpdateManyAndReturnArgs} args - Arguments to update many Watchlists.
     * @example
     * // Update many Watchlists
     * const watchlist = await prisma.watchlist.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Watchlists and only return the `id`
     * const watchlistWithIdOnly = await prisma.watchlist.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends watchlistUpdateManyAndReturnArgs>(args: SelectSubset<T, watchlistUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Watchlist.
     * @param {watchlistUpsertArgs} args - Arguments to update or create a Watchlist.
     * @example
     * // Update or create a Watchlist
     * const watchlist = await prisma.watchlist.upsert({
     *   create: {
     *     // ... data to create a Watchlist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Watchlist we want to update
     *   }
     * })
     */
    upsert<T extends watchlistUpsertArgs>(args: SelectSubset<T, watchlistUpsertArgs<ExtArgs>>): Prisma__watchlistClient<$Result.GetResult<Prisma.$watchlistPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Watchlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchlistCountArgs} args - Arguments to filter Watchlists to count.
     * @example
     * // Count the number of Watchlists
     * const count = await prisma.watchlist.count({
     *   where: {
     *     // ... the filter for the Watchlists we want to count
     *   }
     * })
    **/
    count<T extends watchlistCountArgs>(
      args?: Subset<T, watchlistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WatchlistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Watchlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WatchlistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WatchlistAggregateArgs>(args: Subset<T, WatchlistAggregateArgs>): Prisma.PrismaPromise<GetWatchlistAggregateType<T>>

    /**
     * Group by Watchlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchlistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends watchlistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: watchlistGroupByArgs['orderBy'] }
        : { orderBy?: watchlistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, watchlistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWatchlistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the watchlist model
   */
  readonly fields: watchlistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for watchlist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__watchlistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the watchlist model
   */ 
  interface watchlistFieldRefs {
    readonly id: FieldRef<"watchlist", 'Int'>
    readonly did: FieldRef<"watchlist", 'String'>
    readonly token_address: FieldRef<"watchlist", 'String'>
    readonly token_symbol: FieldRef<"watchlist", 'String'>
    readonly url: FieldRef<"watchlist", 'String'>
    readonly network: FieldRef<"watchlist", 'String'>
    readonly created_at: FieldRef<"watchlist", 'DateTime'>
    readonly updated_at: FieldRef<"watchlist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * watchlist findUnique
   */
  export type watchlistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * Filter, which watchlist to fetch.
     */
    where: watchlistWhereUniqueInput
  }

  /**
   * watchlist findUniqueOrThrow
   */
  export type watchlistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * Filter, which watchlist to fetch.
     */
    where: watchlistWhereUniqueInput
  }

  /**
   * watchlist findFirst
   */
  export type watchlistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * Filter, which watchlist to fetch.
     */
    where?: watchlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchlists to fetch.
     */
    orderBy?: watchlistOrderByWithRelationInput | watchlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for watchlists.
     */
    cursor?: watchlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of watchlists.
     */
    distinct?: WatchlistScalarFieldEnum | WatchlistScalarFieldEnum[]
  }

  /**
   * watchlist findFirstOrThrow
   */
  export type watchlistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * Filter, which watchlist to fetch.
     */
    where?: watchlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchlists to fetch.
     */
    orderBy?: watchlistOrderByWithRelationInput | watchlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for watchlists.
     */
    cursor?: watchlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of watchlists.
     */
    distinct?: WatchlistScalarFieldEnum | WatchlistScalarFieldEnum[]
  }

  /**
   * watchlist findMany
   */
  export type watchlistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * Filter, which watchlists to fetch.
     */
    where?: watchlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchlists to fetch.
     */
    orderBy?: watchlistOrderByWithRelationInput | watchlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing watchlists.
     */
    cursor?: watchlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchlists.
     */
    skip?: number
    distinct?: WatchlistScalarFieldEnum | WatchlistScalarFieldEnum[]
  }

  /**
   * watchlist create
   */
  export type watchlistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * The data needed to create a watchlist.
     */
    data: XOR<watchlistCreateInput, watchlistUncheckedCreateInput>
  }

  /**
   * watchlist createMany
   */
  export type watchlistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many watchlists.
     */
    data: watchlistCreateManyInput | watchlistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * watchlist createManyAndReturn
   */
  export type watchlistCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * The data used to create many watchlists.
     */
    data: watchlistCreateManyInput | watchlistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * watchlist update
   */
  export type watchlistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * The data needed to update a watchlist.
     */
    data: XOR<watchlistUpdateInput, watchlistUncheckedUpdateInput>
    /**
     * Choose, which watchlist to update.
     */
    where: watchlistWhereUniqueInput
  }

  /**
   * watchlist updateMany
   */
  export type watchlistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update watchlists.
     */
    data: XOR<watchlistUpdateManyMutationInput, watchlistUncheckedUpdateManyInput>
    /**
     * Filter which watchlists to update
     */
    where?: watchlistWhereInput
  }

  /**
   * watchlist updateManyAndReturn
   */
  export type watchlistUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * The data used to update watchlists.
     */
    data: XOR<watchlistUpdateManyMutationInput, watchlistUncheckedUpdateManyInput>
    /**
     * Filter which watchlists to update
     */
    where?: watchlistWhereInput
  }

  /**
   * watchlist upsert
   */
  export type watchlistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * The filter to search for the watchlist to update in case it exists.
     */
    where: watchlistWhereUniqueInput
    /**
     * In case the watchlist found by the `where` argument doesn't exist, create a new watchlist with this data.
     */
    create: XOR<watchlistCreateInput, watchlistUncheckedCreateInput>
    /**
     * In case the watchlist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<watchlistUpdateInput, watchlistUncheckedUpdateInput>
  }

  /**
   * watchlist delete
   */
  export type watchlistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
    /**
     * Filter which watchlist to delete.
     */
    where: watchlistWhereUniqueInput
  }

  /**
   * watchlist deleteMany
   */
  export type watchlistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which watchlists to delete
     */
    where?: watchlistWhereInput
  }

  /**
   * watchlist without action
   */
  export type watchlistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the watchlist
     */
    select?: watchlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the watchlist
     */
    omit?: watchlistOmit<ExtArgs> | null
  }


  /**
   * Model click_logs
   */

  export type AggregateClick_logs = {
    _count: Click_logsCountAggregateOutputType | null
    _avg: Click_logsAvgAggregateOutputType | null
    _sum: Click_logsSumAggregateOutputType | null
    _min: Click_logsMinAggregateOutputType | null
    _max: Click_logsMaxAggregateOutputType | null
  }

  export type Click_logsAvgAggregateOutputType = {
    id: number | null
  }

  export type Click_logsSumAggregateOutputType = {
    id: number | null
  }

  export type Click_logsMinAggregateOutputType = {
    id: number | null
    did: string | null
    type: string | null
    content: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Click_logsMaxAggregateOutputType = {
    id: number | null
    did: string | null
    type: string | null
    content: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Click_logsCountAggregateOutputType = {
    id: number
    did: number
    type: number
    content: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Click_logsAvgAggregateInputType = {
    id?: true
  }

  export type Click_logsSumAggregateInputType = {
    id?: true
  }

  export type Click_logsMinAggregateInputType = {
    id?: true
    did?: true
    type?: true
    content?: true
    created_at?: true
    updated_at?: true
  }

  export type Click_logsMaxAggregateInputType = {
    id?: true
    did?: true
    type?: true
    content?: true
    created_at?: true
    updated_at?: true
  }

  export type Click_logsCountAggregateInputType = {
    id?: true
    did?: true
    type?: true
    content?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Click_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which click_logs to aggregate.
     */
    where?: click_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of click_logs to fetch.
     */
    orderBy?: click_logsOrderByWithRelationInput | click_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: click_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` click_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` click_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned click_logs
    **/
    _count?: true | Click_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Click_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Click_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Click_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Click_logsMaxAggregateInputType
  }

  export type GetClick_logsAggregateType<T extends Click_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateClick_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClick_logs[P]>
      : GetScalarType<T[P], AggregateClick_logs[P]>
  }




  export type click_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: click_logsWhereInput
    orderBy?: click_logsOrderByWithAggregationInput | click_logsOrderByWithAggregationInput[]
    by: Click_logsScalarFieldEnum[] | Click_logsScalarFieldEnum
    having?: click_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Click_logsCountAggregateInputType | true
    _avg?: Click_logsAvgAggregateInputType
    _sum?: Click_logsSumAggregateInputType
    _min?: Click_logsMinAggregateInputType
    _max?: Click_logsMaxAggregateInputType
  }

  export type Click_logsGroupByOutputType = {
    id: number
    did: string
    type: string
    content: string
    created_at: Date
    updated_at: Date
    _count: Click_logsCountAggregateOutputType | null
    _avg: Click_logsAvgAggregateOutputType | null
    _sum: Click_logsSumAggregateOutputType | null
    _min: Click_logsMinAggregateOutputType | null
    _max: Click_logsMaxAggregateOutputType | null
  }

  type GetClick_logsGroupByPayload<T extends click_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Click_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Click_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Click_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Click_logsGroupByOutputType[P]>
        }
      >
    >


  export type click_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    type?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["click_logs"]>

  export type click_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    type?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["click_logs"]>

  export type click_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    did?: boolean
    type?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["click_logs"]>

  export type click_logsSelectScalar = {
    id?: boolean
    did?: boolean
    type?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type click_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "did" | "type" | "content" | "created_at" | "updated_at", ExtArgs["result"]["click_logs"]>

  export type $click_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "click_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      did: string
      type: string
      content: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["click_logs"]>
    composites: {}
  }

  type click_logsGetPayload<S extends boolean | null | undefined | click_logsDefaultArgs> = $Result.GetResult<Prisma.$click_logsPayload, S>

  type click_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<click_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Click_logsCountAggregateInputType | true
    }

  export interface click_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['click_logs'], meta: { name: 'click_logs' } }
    /**
     * Find zero or one Click_logs that matches the filter.
     * @param {click_logsFindUniqueArgs} args - Arguments to find a Click_logs
     * @example
     * // Get one Click_logs
     * const click_logs = await prisma.click_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends click_logsFindUniqueArgs>(args: SelectSubset<T, click_logsFindUniqueArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Click_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {click_logsFindUniqueOrThrowArgs} args - Arguments to find a Click_logs
     * @example
     * // Get one Click_logs
     * const click_logs = await prisma.click_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends click_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, click_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Click_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {click_logsFindFirstArgs} args - Arguments to find a Click_logs
     * @example
     * // Get one Click_logs
     * const click_logs = await prisma.click_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends click_logsFindFirstArgs>(args?: SelectSubset<T, click_logsFindFirstArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Click_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {click_logsFindFirstOrThrowArgs} args - Arguments to find a Click_logs
     * @example
     * // Get one Click_logs
     * const click_logs = await prisma.click_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends click_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, click_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Click_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {click_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Click_logs
     * const click_logs = await prisma.click_logs.findMany()
     * 
     * // Get first 10 Click_logs
     * const click_logs = await prisma.click_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const click_logsWithIdOnly = await prisma.click_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends click_logsFindManyArgs>(args?: SelectSubset<T, click_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Click_logs.
     * @param {click_logsCreateArgs} args - Arguments to create a Click_logs.
     * @example
     * // Create one Click_logs
     * const Click_logs = await prisma.click_logs.create({
     *   data: {
     *     // ... data to create a Click_logs
     *   }
     * })
     * 
     */
    create<T extends click_logsCreateArgs>(args: SelectSubset<T, click_logsCreateArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Click_logs.
     * @param {click_logsCreateManyArgs} args - Arguments to create many Click_logs.
     * @example
     * // Create many Click_logs
     * const click_logs = await prisma.click_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends click_logsCreateManyArgs>(args?: SelectSubset<T, click_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Click_logs and returns the data saved in the database.
     * @param {click_logsCreateManyAndReturnArgs} args - Arguments to create many Click_logs.
     * @example
     * // Create many Click_logs
     * const click_logs = await prisma.click_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Click_logs and only return the `id`
     * const click_logsWithIdOnly = await prisma.click_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends click_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, click_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Click_logs.
     * @param {click_logsDeleteArgs} args - Arguments to delete one Click_logs.
     * @example
     * // Delete one Click_logs
     * const Click_logs = await prisma.click_logs.delete({
     *   where: {
     *     // ... filter to delete one Click_logs
     *   }
     * })
     * 
     */
    delete<T extends click_logsDeleteArgs>(args: SelectSubset<T, click_logsDeleteArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Click_logs.
     * @param {click_logsUpdateArgs} args - Arguments to update one Click_logs.
     * @example
     * // Update one Click_logs
     * const click_logs = await prisma.click_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends click_logsUpdateArgs>(args: SelectSubset<T, click_logsUpdateArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Click_logs.
     * @param {click_logsDeleteManyArgs} args - Arguments to filter Click_logs to delete.
     * @example
     * // Delete a few Click_logs
     * const { count } = await prisma.click_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends click_logsDeleteManyArgs>(args?: SelectSubset<T, click_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Click_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {click_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Click_logs
     * const click_logs = await prisma.click_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends click_logsUpdateManyArgs>(args: SelectSubset<T, click_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Click_logs and returns the data updated in the database.
     * @param {click_logsUpdateManyAndReturnArgs} args - Arguments to update many Click_logs.
     * @example
     * // Update many Click_logs
     * const click_logs = await prisma.click_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Click_logs and only return the `id`
     * const click_logsWithIdOnly = await prisma.click_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends click_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, click_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Click_logs.
     * @param {click_logsUpsertArgs} args - Arguments to update or create a Click_logs.
     * @example
     * // Update or create a Click_logs
     * const click_logs = await prisma.click_logs.upsert({
     *   create: {
     *     // ... data to create a Click_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Click_logs we want to update
     *   }
     * })
     */
    upsert<T extends click_logsUpsertArgs>(args: SelectSubset<T, click_logsUpsertArgs<ExtArgs>>): Prisma__click_logsClient<$Result.GetResult<Prisma.$click_logsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Click_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {click_logsCountArgs} args - Arguments to filter Click_logs to count.
     * @example
     * // Count the number of Click_logs
     * const count = await prisma.click_logs.count({
     *   where: {
     *     // ... the filter for the Click_logs we want to count
     *   }
     * })
    **/
    count<T extends click_logsCountArgs>(
      args?: Subset<T, click_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Click_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Click_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Click_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Click_logsAggregateArgs>(args: Subset<T, Click_logsAggregateArgs>): Prisma.PrismaPromise<GetClick_logsAggregateType<T>>

    /**
     * Group by Click_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {click_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends click_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: click_logsGroupByArgs['orderBy'] }
        : { orderBy?: click_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, click_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClick_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the click_logs model
   */
  readonly fields: click_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for click_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__click_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the click_logs model
   */ 
  interface click_logsFieldRefs {
    readonly id: FieldRef<"click_logs", 'Int'>
    readonly did: FieldRef<"click_logs", 'String'>
    readonly type: FieldRef<"click_logs", 'String'>
    readonly content: FieldRef<"click_logs", 'String'>
    readonly created_at: FieldRef<"click_logs", 'DateTime'>
    readonly updated_at: FieldRef<"click_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * click_logs findUnique
   */
  export type click_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * Filter, which click_logs to fetch.
     */
    where: click_logsWhereUniqueInput
  }

  /**
   * click_logs findUniqueOrThrow
   */
  export type click_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * Filter, which click_logs to fetch.
     */
    where: click_logsWhereUniqueInput
  }

  /**
   * click_logs findFirst
   */
  export type click_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * Filter, which click_logs to fetch.
     */
    where?: click_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of click_logs to fetch.
     */
    orderBy?: click_logsOrderByWithRelationInput | click_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for click_logs.
     */
    cursor?: click_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` click_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` click_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of click_logs.
     */
    distinct?: Click_logsScalarFieldEnum | Click_logsScalarFieldEnum[]
  }

  /**
   * click_logs findFirstOrThrow
   */
  export type click_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * Filter, which click_logs to fetch.
     */
    where?: click_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of click_logs to fetch.
     */
    orderBy?: click_logsOrderByWithRelationInput | click_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for click_logs.
     */
    cursor?: click_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` click_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` click_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of click_logs.
     */
    distinct?: Click_logsScalarFieldEnum | Click_logsScalarFieldEnum[]
  }

  /**
   * click_logs findMany
   */
  export type click_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * Filter, which click_logs to fetch.
     */
    where?: click_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of click_logs to fetch.
     */
    orderBy?: click_logsOrderByWithRelationInput | click_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing click_logs.
     */
    cursor?: click_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` click_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` click_logs.
     */
    skip?: number
    distinct?: Click_logsScalarFieldEnum | Click_logsScalarFieldEnum[]
  }

  /**
   * click_logs create
   */
  export type click_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a click_logs.
     */
    data?: XOR<click_logsCreateInput, click_logsUncheckedCreateInput>
  }

  /**
   * click_logs createMany
   */
  export type click_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many click_logs.
     */
    data: click_logsCreateManyInput | click_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * click_logs createManyAndReturn
   */
  export type click_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * The data used to create many click_logs.
     */
    data: click_logsCreateManyInput | click_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * click_logs update
   */
  export type click_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a click_logs.
     */
    data: XOR<click_logsUpdateInput, click_logsUncheckedUpdateInput>
    /**
     * Choose, which click_logs to update.
     */
    where: click_logsWhereUniqueInput
  }

  /**
   * click_logs updateMany
   */
  export type click_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update click_logs.
     */
    data: XOR<click_logsUpdateManyMutationInput, click_logsUncheckedUpdateManyInput>
    /**
     * Filter which click_logs to update
     */
    where?: click_logsWhereInput
  }

  /**
   * click_logs updateManyAndReturn
   */
  export type click_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * The data used to update click_logs.
     */
    data: XOR<click_logsUpdateManyMutationInput, click_logsUncheckedUpdateManyInput>
    /**
     * Filter which click_logs to update
     */
    where?: click_logsWhereInput
  }

  /**
   * click_logs upsert
   */
  export type click_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the click_logs to update in case it exists.
     */
    where: click_logsWhereUniqueInput
    /**
     * In case the click_logs found by the `where` argument doesn't exist, create a new click_logs with this data.
     */
    create: XOR<click_logsCreateInput, click_logsUncheckedCreateInput>
    /**
     * In case the click_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<click_logsUpdateInput, click_logsUncheckedUpdateInput>
  }

  /**
   * click_logs delete
   */
  export type click_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
    /**
     * Filter which click_logs to delete.
     */
    where: click_logsWhereUniqueInput
  }

  /**
   * click_logs deleteMany
   */
  export type click_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which click_logs to delete
     */
    where?: click_logsWhereInput
  }

  /**
   * click_logs without action
   */
  export type click_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the click_logs
     */
    select?: click_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the click_logs
     */
    omit?: click_logsOmit<ExtArgs> | null
  }


  /**
   * Model smart_wallets
   */

  export type AggregateSmart_wallets = {
    _count: Smart_walletsCountAggregateOutputType | null
    _avg: Smart_walletsAvgAggregateOutputType | null
    _sum: Smart_walletsSumAggregateOutputType | null
    _min: Smart_walletsMinAggregateOutputType | null
    _max: Smart_walletsMaxAggregateOutputType | null
  }

  export type Smart_walletsAvgAggregateOutputType = {
    id: number | null
  }

  export type Smart_walletsSumAggregateOutputType = {
    id: number | null
  }

  export type Smart_walletsMinAggregateOutputType = {
    id: number | null
    address: string | null
    twitter_handle: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
    alias: string | null
  }

  export type Smart_walletsMaxAggregateOutputType = {
    id: number | null
    address: string | null
    twitter_handle: string | null
    network: string | null
    created_at: Date | null
    updated_at: Date | null
    alias: string | null
  }

  export type Smart_walletsCountAggregateOutputType = {
    id: number
    address: number
    twitter_handle: number
    account_info: number
    network: number
    created_at: number
    updated_at: number
    alias: number
    _all: number
  }


  export type Smart_walletsAvgAggregateInputType = {
    id?: true
  }

  export type Smart_walletsSumAggregateInputType = {
    id?: true
  }

  export type Smart_walletsMinAggregateInputType = {
    id?: true
    address?: true
    twitter_handle?: true
    network?: true
    created_at?: true
    updated_at?: true
    alias?: true
  }

  export type Smart_walletsMaxAggregateInputType = {
    id?: true
    address?: true
    twitter_handle?: true
    network?: true
    created_at?: true
    updated_at?: true
    alias?: true
  }

  export type Smart_walletsCountAggregateInputType = {
    id?: true
    address?: true
    twitter_handle?: true
    account_info?: true
    network?: true
    created_at?: true
    updated_at?: true
    alias?: true
    _all?: true
  }

  export type Smart_walletsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which smart_wallets to aggregate.
     */
    where?: smart_walletsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of smart_wallets to fetch.
     */
    orderBy?: smart_walletsOrderByWithRelationInput | smart_walletsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: smart_walletsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` smart_wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` smart_wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned smart_wallets
    **/
    _count?: true | Smart_walletsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Smart_walletsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Smart_walletsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Smart_walletsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Smart_walletsMaxAggregateInputType
  }

  export type GetSmart_walletsAggregateType<T extends Smart_walletsAggregateArgs> = {
        [P in keyof T & keyof AggregateSmart_wallets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSmart_wallets[P]>
      : GetScalarType<T[P], AggregateSmart_wallets[P]>
  }




  export type smart_walletsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: smart_walletsWhereInput
    orderBy?: smart_walletsOrderByWithAggregationInput | smart_walletsOrderByWithAggregationInput[]
    by: Smart_walletsScalarFieldEnum[] | Smart_walletsScalarFieldEnum
    having?: smart_walletsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Smart_walletsCountAggregateInputType | true
    _avg?: Smart_walletsAvgAggregateInputType
    _sum?: Smart_walletsSumAggregateInputType
    _min?: Smart_walletsMinAggregateInputType
    _max?: Smart_walletsMaxAggregateInputType
  }

  export type Smart_walletsGroupByOutputType = {
    id: number
    address: string
    twitter_handle: string | null
    account_info: JsonValue | null
    network: string
    created_at: Date
    updated_at: Date
    alias: string | null
    _count: Smart_walletsCountAggregateOutputType | null
    _avg: Smart_walletsAvgAggregateOutputType | null
    _sum: Smart_walletsSumAggregateOutputType | null
    _min: Smart_walletsMinAggregateOutputType | null
    _max: Smart_walletsMaxAggregateOutputType | null
  }

  type GetSmart_walletsGroupByPayload<T extends smart_walletsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Smart_walletsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Smart_walletsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Smart_walletsGroupByOutputType[P]>
            : GetScalarType<T[P], Smart_walletsGroupByOutputType[P]>
        }
      >
    >


  export type smart_walletsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    twitter_handle?: boolean
    account_info?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    alias?: boolean
  }, ExtArgs["result"]["smart_wallets"]>

  export type smart_walletsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    twitter_handle?: boolean
    account_info?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    alias?: boolean
  }, ExtArgs["result"]["smart_wallets"]>

  export type smart_walletsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    address?: boolean
    twitter_handle?: boolean
    account_info?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    alias?: boolean
  }, ExtArgs["result"]["smart_wallets"]>

  export type smart_walletsSelectScalar = {
    id?: boolean
    address?: boolean
    twitter_handle?: boolean
    account_info?: boolean
    network?: boolean
    created_at?: boolean
    updated_at?: boolean
    alias?: boolean
  }

  export type smart_walletsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "address" | "twitter_handle" | "account_info" | "network" | "created_at" | "updated_at" | "alias", ExtArgs["result"]["smart_wallets"]>

  export type $smart_walletsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "smart_wallets"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      address: string
      twitter_handle: string | null
      account_info: Prisma.JsonValue | null
      network: string
      created_at: Date
      updated_at: Date
      alias: string | null
    }, ExtArgs["result"]["smart_wallets"]>
    composites: {}
  }

  type smart_walletsGetPayload<S extends boolean | null | undefined | smart_walletsDefaultArgs> = $Result.GetResult<Prisma.$smart_walletsPayload, S>

  type smart_walletsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<smart_walletsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Smart_walletsCountAggregateInputType | true
    }

  export interface smart_walletsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['smart_wallets'], meta: { name: 'smart_wallets' } }
    /**
     * Find zero or one Smart_wallets that matches the filter.
     * @param {smart_walletsFindUniqueArgs} args - Arguments to find a Smart_wallets
     * @example
     * // Get one Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends smart_walletsFindUniqueArgs>(args: SelectSubset<T, smart_walletsFindUniqueArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Smart_wallets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {smart_walletsFindUniqueOrThrowArgs} args - Arguments to find a Smart_wallets
     * @example
     * // Get one Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends smart_walletsFindUniqueOrThrowArgs>(args: SelectSubset<T, smart_walletsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Smart_wallets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {smart_walletsFindFirstArgs} args - Arguments to find a Smart_wallets
     * @example
     * // Get one Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends smart_walletsFindFirstArgs>(args?: SelectSubset<T, smart_walletsFindFirstArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Smart_wallets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {smart_walletsFindFirstOrThrowArgs} args - Arguments to find a Smart_wallets
     * @example
     * // Get one Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends smart_walletsFindFirstOrThrowArgs>(args?: SelectSubset<T, smart_walletsFindFirstOrThrowArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Smart_wallets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {smart_walletsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.findMany()
     * 
     * // Get first 10 Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const smart_walletsWithIdOnly = await prisma.smart_wallets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends smart_walletsFindManyArgs>(args?: SelectSubset<T, smart_walletsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Smart_wallets.
     * @param {smart_walletsCreateArgs} args - Arguments to create a Smart_wallets.
     * @example
     * // Create one Smart_wallets
     * const Smart_wallets = await prisma.smart_wallets.create({
     *   data: {
     *     // ... data to create a Smart_wallets
     *   }
     * })
     * 
     */
    create<T extends smart_walletsCreateArgs>(args: SelectSubset<T, smart_walletsCreateArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Smart_wallets.
     * @param {smart_walletsCreateManyArgs} args - Arguments to create many Smart_wallets.
     * @example
     * // Create many Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends smart_walletsCreateManyArgs>(args?: SelectSubset<T, smart_walletsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Smart_wallets and returns the data saved in the database.
     * @param {smart_walletsCreateManyAndReturnArgs} args - Arguments to create many Smart_wallets.
     * @example
     * // Create many Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Smart_wallets and only return the `id`
     * const smart_walletsWithIdOnly = await prisma.smart_wallets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends smart_walletsCreateManyAndReturnArgs>(args?: SelectSubset<T, smart_walletsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Smart_wallets.
     * @param {smart_walletsDeleteArgs} args - Arguments to delete one Smart_wallets.
     * @example
     * // Delete one Smart_wallets
     * const Smart_wallets = await prisma.smart_wallets.delete({
     *   where: {
     *     // ... filter to delete one Smart_wallets
     *   }
     * })
     * 
     */
    delete<T extends smart_walletsDeleteArgs>(args: SelectSubset<T, smart_walletsDeleteArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Smart_wallets.
     * @param {smart_walletsUpdateArgs} args - Arguments to update one Smart_wallets.
     * @example
     * // Update one Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends smart_walletsUpdateArgs>(args: SelectSubset<T, smart_walletsUpdateArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Smart_wallets.
     * @param {smart_walletsDeleteManyArgs} args - Arguments to filter Smart_wallets to delete.
     * @example
     * // Delete a few Smart_wallets
     * const { count } = await prisma.smart_wallets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends smart_walletsDeleteManyArgs>(args?: SelectSubset<T, smart_walletsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Smart_wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {smart_walletsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends smart_walletsUpdateManyArgs>(args: SelectSubset<T, smart_walletsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Smart_wallets and returns the data updated in the database.
     * @param {smart_walletsUpdateManyAndReturnArgs} args - Arguments to update many Smart_wallets.
     * @example
     * // Update many Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Smart_wallets and only return the `id`
     * const smart_walletsWithIdOnly = await prisma.smart_wallets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends smart_walletsUpdateManyAndReturnArgs>(args: SelectSubset<T, smart_walletsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Smart_wallets.
     * @param {smart_walletsUpsertArgs} args - Arguments to update or create a Smart_wallets.
     * @example
     * // Update or create a Smart_wallets
     * const smart_wallets = await prisma.smart_wallets.upsert({
     *   create: {
     *     // ... data to create a Smart_wallets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Smart_wallets we want to update
     *   }
     * })
     */
    upsert<T extends smart_walletsUpsertArgs>(args: SelectSubset<T, smart_walletsUpsertArgs<ExtArgs>>): Prisma__smart_walletsClient<$Result.GetResult<Prisma.$smart_walletsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Smart_wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {smart_walletsCountArgs} args - Arguments to filter Smart_wallets to count.
     * @example
     * // Count the number of Smart_wallets
     * const count = await prisma.smart_wallets.count({
     *   where: {
     *     // ... the filter for the Smart_wallets we want to count
     *   }
     * })
    **/
    count<T extends smart_walletsCountArgs>(
      args?: Subset<T, smart_walletsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Smart_walletsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Smart_wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Smart_walletsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Smart_walletsAggregateArgs>(args: Subset<T, Smart_walletsAggregateArgs>): Prisma.PrismaPromise<GetSmart_walletsAggregateType<T>>

    /**
     * Group by Smart_wallets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {smart_walletsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends smart_walletsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: smart_walletsGroupByArgs['orderBy'] }
        : { orderBy?: smart_walletsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, smart_walletsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSmart_walletsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the smart_wallets model
   */
  readonly fields: smart_walletsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for smart_wallets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__smart_walletsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the smart_wallets model
   */ 
  interface smart_walletsFieldRefs {
    readonly id: FieldRef<"smart_wallets", 'Int'>
    readonly address: FieldRef<"smart_wallets", 'String'>
    readonly twitter_handle: FieldRef<"smart_wallets", 'String'>
    readonly account_info: FieldRef<"smart_wallets", 'Json'>
    readonly network: FieldRef<"smart_wallets", 'String'>
    readonly created_at: FieldRef<"smart_wallets", 'DateTime'>
    readonly updated_at: FieldRef<"smart_wallets", 'DateTime'>
    readonly alias: FieldRef<"smart_wallets", 'String'>
  }
    

  // Custom InputTypes
  /**
   * smart_wallets findUnique
   */
  export type smart_walletsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * Filter, which smart_wallets to fetch.
     */
    where: smart_walletsWhereUniqueInput
  }

  /**
   * smart_wallets findUniqueOrThrow
   */
  export type smart_walletsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * Filter, which smart_wallets to fetch.
     */
    where: smart_walletsWhereUniqueInput
  }

  /**
   * smart_wallets findFirst
   */
  export type smart_walletsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * Filter, which smart_wallets to fetch.
     */
    where?: smart_walletsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of smart_wallets to fetch.
     */
    orderBy?: smart_walletsOrderByWithRelationInput | smart_walletsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for smart_wallets.
     */
    cursor?: smart_walletsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` smart_wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` smart_wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of smart_wallets.
     */
    distinct?: Smart_walletsScalarFieldEnum | Smart_walletsScalarFieldEnum[]
  }

  /**
   * smart_wallets findFirstOrThrow
   */
  export type smart_walletsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * Filter, which smart_wallets to fetch.
     */
    where?: smart_walletsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of smart_wallets to fetch.
     */
    orderBy?: smart_walletsOrderByWithRelationInput | smart_walletsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for smart_wallets.
     */
    cursor?: smart_walletsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` smart_wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` smart_wallets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of smart_wallets.
     */
    distinct?: Smart_walletsScalarFieldEnum | Smart_walletsScalarFieldEnum[]
  }

  /**
   * smart_wallets findMany
   */
  export type smart_walletsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * Filter, which smart_wallets to fetch.
     */
    where?: smart_walletsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of smart_wallets to fetch.
     */
    orderBy?: smart_walletsOrderByWithRelationInput | smart_walletsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing smart_wallets.
     */
    cursor?: smart_walletsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` smart_wallets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` smart_wallets.
     */
    skip?: number
    distinct?: Smart_walletsScalarFieldEnum | Smart_walletsScalarFieldEnum[]
  }

  /**
   * smart_wallets create
   */
  export type smart_walletsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * The data needed to create a smart_wallets.
     */
    data: XOR<smart_walletsCreateInput, smart_walletsUncheckedCreateInput>
  }

  /**
   * smart_wallets createMany
   */
  export type smart_walletsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many smart_wallets.
     */
    data: smart_walletsCreateManyInput | smart_walletsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * smart_wallets createManyAndReturn
   */
  export type smart_walletsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * The data used to create many smart_wallets.
     */
    data: smart_walletsCreateManyInput | smart_walletsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * smart_wallets update
   */
  export type smart_walletsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * The data needed to update a smart_wallets.
     */
    data: XOR<smart_walletsUpdateInput, smart_walletsUncheckedUpdateInput>
    /**
     * Choose, which smart_wallets to update.
     */
    where: smart_walletsWhereUniqueInput
  }

  /**
   * smart_wallets updateMany
   */
  export type smart_walletsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update smart_wallets.
     */
    data: XOR<smart_walletsUpdateManyMutationInput, smart_walletsUncheckedUpdateManyInput>
    /**
     * Filter which smart_wallets to update
     */
    where?: smart_walletsWhereInput
  }

  /**
   * smart_wallets updateManyAndReturn
   */
  export type smart_walletsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * The data used to update smart_wallets.
     */
    data: XOR<smart_walletsUpdateManyMutationInput, smart_walletsUncheckedUpdateManyInput>
    /**
     * Filter which smart_wallets to update
     */
    where?: smart_walletsWhereInput
  }

  /**
   * smart_wallets upsert
   */
  export type smart_walletsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * The filter to search for the smart_wallets to update in case it exists.
     */
    where: smart_walletsWhereUniqueInput
    /**
     * In case the smart_wallets found by the `where` argument doesn't exist, create a new smart_wallets with this data.
     */
    create: XOR<smart_walletsCreateInput, smart_walletsUncheckedCreateInput>
    /**
     * In case the smart_wallets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<smart_walletsUpdateInput, smart_walletsUncheckedUpdateInput>
  }

  /**
   * smart_wallets delete
   */
  export type smart_walletsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
    /**
     * Filter which smart_wallets to delete.
     */
    where: smart_walletsWhereUniqueInput
  }

  /**
   * smart_wallets deleteMany
   */
  export type smart_walletsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which smart_wallets to delete
     */
    where?: smart_walletsWhereInput
  }

  /**
   * smart_wallets without action
   */
  export type smart_walletsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the smart_wallets
     */
    select?: smart_walletsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the smart_wallets
     */
    omit?: smart_walletsOmit<ExtArgs> | null
  }


  /**
   * Model community
   */

  export type AggregateCommunity = {
    _count: CommunityCountAggregateOutputType | null
    _avg: CommunityAvgAggregateOutputType | null
    _sum: CommunitySumAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  export type CommunityAvgAggregateOutputType = {
    id: number | null
  }

  export type CommunitySumAggregateOutputType = {
    id: number | null
  }

  export type CommunityMinAggregateOutputType = {
    id: number | null
    name: string | null
    contact: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommunityMaxAggregateOutputType = {
    id: number | null
    name: string | null
    contact: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommunityCountAggregateOutputType = {
    id: number
    name: number
    contact: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CommunityAvgAggregateInputType = {
    id?: true
  }

  export type CommunitySumAggregateInputType = {
    id?: true
  }

  export type CommunityMinAggregateInputType = {
    id?: true
    name?: true
    contact?: true
    created_at?: true
    updated_at?: true
  }

  export type CommunityMaxAggregateInputType = {
    id?: true
    name?: true
    contact?: true
    created_at?: true
    updated_at?: true
  }

  export type CommunityCountAggregateInputType = {
    id?: true
    name?: true
    contact?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CommunityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community to aggregate.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communities
    **/
    _count?: true | CommunityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommunityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommunitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunityMaxAggregateInputType
  }

  export type GetCommunityAggregateType<T extends CommunityAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity[P]>
      : GetScalarType<T[P], AggregateCommunity[P]>
  }




  export type communityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communityWhereInput
    orderBy?: communityOrderByWithAggregationInput | communityOrderByWithAggregationInput[]
    by: CommunityScalarFieldEnum[] | CommunityScalarFieldEnum
    having?: communityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunityCountAggregateInputType | true
    _avg?: CommunityAvgAggregateInputType
    _sum?: CommunitySumAggregateInputType
    _min?: CommunityMinAggregateInputType
    _max?: CommunityMaxAggregateInputType
  }

  export type CommunityGroupByOutputType = {
    id: number
    name: string
    contact: string | null
    created_at: Date
    updated_at: Date
    _count: CommunityCountAggregateOutputType | null
    _avg: CommunityAvgAggregateOutputType | null
    _sum: CommunitySumAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  type GetCommunityGroupByPayload<T extends communityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunityGroupByOutputType[P]>
            : GetScalarType<T[P], CommunityGroupByOutputType[P]>
        }
      >
    >


  export type communitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contact?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_referral?: boolean | community$community_referralArgs<ExtArgs>
    community_revenue?: boolean | community$community_revenueArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>

  export type communitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contact?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["community"]>

  export type communitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    contact?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["community"]>

  export type communitySelectScalar = {
    id?: boolean
    name?: boolean
    contact?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type communityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "contact" | "created_at" | "updated_at", ExtArgs["result"]["community"]>
  export type communityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_referral?: boolean | community$community_referralArgs<ExtArgs>
    community_revenue?: boolean | community$community_revenueArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type communityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type communityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $communityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community"
    objects: {
      community_referral: Prisma.$community_referralPayload<ExtArgs>[]
      community_revenue: Prisma.$community_revenuePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      contact: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["community"]>
    composites: {}
  }

  type communityGetPayload<S extends boolean | null | undefined | communityDefaultArgs> = $Result.GetResult<Prisma.$communityPayload, S>

  type communityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<communityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunityCountAggregateInputType | true
    }

  export interface communityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community'], meta: { name: 'community' } }
    /**
     * Find zero or one Community that matches the filter.
     * @param {communityFindUniqueArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends communityFindUniqueArgs>(args: SelectSubset<T, communityFindUniqueArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Community that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {communityFindUniqueOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends communityFindUniqueOrThrowArgs>(args: SelectSubset<T, communityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Community that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends communityFindFirstArgs>(args?: SelectSubset<T, communityFindFirstArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Community that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends communityFindFirstOrThrowArgs>(args?: SelectSubset<T, communityFindFirstOrThrowArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Communities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communities
     * const communities = await prisma.community.findMany()
     * 
     * // Get first 10 Communities
     * const communities = await prisma.community.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const communityWithIdOnly = await prisma.community.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends communityFindManyArgs>(args?: SelectSubset<T, communityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Community.
     * @param {communityCreateArgs} args - Arguments to create a Community.
     * @example
     * // Create one Community
     * const Community = await prisma.community.create({
     *   data: {
     *     // ... data to create a Community
     *   }
     * })
     * 
     */
    create<T extends communityCreateArgs>(args: SelectSubset<T, communityCreateArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Communities.
     * @param {communityCreateManyArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends communityCreateManyArgs>(args?: SelectSubset<T, communityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Communities and returns the data saved in the database.
     * @param {communityCreateManyAndReturnArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Communities and only return the `id`
     * const communityWithIdOnly = await prisma.community.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends communityCreateManyAndReturnArgs>(args?: SelectSubset<T, communityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Community.
     * @param {communityDeleteArgs} args - Arguments to delete one Community.
     * @example
     * // Delete one Community
     * const Community = await prisma.community.delete({
     *   where: {
     *     // ... filter to delete one Community
     *   }
     * })
     * 
     */
    delete<T extends communityDeleteArgs>(args: SelectSubset<T, communityDeleteArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Community.
     * @param {communityUpdateArgs} args - Arguments to update one Community.
     * @example
     * // Update one Community
     * const community = await prisma.community.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends communityUpdateArgs>(args: SelectSubset<T, communityUpdateArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Communities.
     * @param {communityDeleteManyArgs} args - Arguments to filter Communities to delete.
     * @example
     * // Delete a few Communities
     * const { count } = await prisma.community.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends communityDeleteManyArgs>(args?: SelectSubset<T, communityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends communityUpdateManyArgs>(args: SelectSubset<T, communityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities and returns the data updated in the database.
     * @param {communityUpdateManyAndReturnArgs} args - Arguments to update many Communities.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Communities and only return the `id`
     * const communityWithIdOnly = await prisma.community.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends communityUpdateManyAndReturnArgs>(args: SelectSubset<T, communityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Community.
     * @param {communityUpsertArgs} args - Arguments to update or create a Community.
     * @example
     * // Update or create a Community
     * const community = await prisma.community.upsert({
     *   create: {
     *     // ... data to create a Community
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community we want to update
     *   }
     * })
     */
    upsert<T extends communityUpsertArgs>(args: SelectSubset<T, communityUpsertArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityCountArgs} args - Arguments to filter Communities to count.
     * @example
     * // Count the number of Communities
     * const count = await prisma.community.count({
     *   where: {
     *     // ... the filter for the Communities we want to count
     *   }
     * })
    **/
    count<T extends communityCountArgs>(
      args?: Subset<T, communityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunityAggregateArgs>(args: Subset<T, CommunityAggregateArgs>): Prisma.PrismaPromise<GetCommunityAggregateType<T>>

    /**
     * Group by Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communityGroupByArgs['orderBy'] }
        : { orderBy?: communityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community model
   */
  readonly fields: communityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community_referral<T extends community$community_referralArgs<ExtArgs> = {}>(args?: Subset<T, community$community_referralArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    community_revenue<T extends community$community_revenueArgs<ExtArgs> = {}>(args?: Subset<T, community$community_revenueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community model
   */ 
  interface communityFieldRefs {
    readonly id: FieldRef<"community", 'Int'>
    readonly name: FieldRef<"community", 'String'>
    readonly contact: FieldRef<"community", 'String'>
    readonly created_at: FieldRef<"community", 'DateTime'>
    readonly updated_at: FieldRef<"community", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community findUnique
   */
  export type communityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findUniqueOrThrow
   */
  export type communityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findFirst
   */
  export type communityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findFirstOrThrow
   */
  export type communityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findMany
   */
  export type communityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which communities to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community create
   */
  export type communityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to create a community.
     */
    data: XOR<communityCreateInput, communityUncheckedCreateInput>
  }

  /**
   * community createMany
   */
  export type communityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communities.
     */
    data: communityCreateManyInput | communityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community createManyAndReturn
   */
  export type communityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * The data used to create many communities.
     */
    data: communityCreateManyInput | communityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community update
   */
  export type communityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to update a community.
     */
    data: XOR<communityUpdateInput, communityUncheckedUpdateInput>
    /**
     * Choose, which community to update.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community updateMany
   */
  export type communityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communities.
     */
    data: XOR<communityUpdateManyMutationInput, communityUncheckedUpdateManyInput>
    /**
     * Filter which communities to update
     */
    where?: communityWhereInput
  }

  /**
   * community updateManyAndReturn
   */
  export type communityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * The data used to update communities.
     */
    data: XOR<communityUpdateManyMutationInput, communityUncheckedUpdateManyInput>
    /**
     * Filter which communities to update
     */
    where?: communityWhereInput
  }

  /**
   * community upsert
   */
  export type communityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The filter to search for the community to update in case it exists.
     */
    where: communityWhereUniqueInput
    /**
     * In case the community found by the `where` argument doesn't exist, create a new community with this data.
     */
    create: XOR<communityCreateInput, communityUncheckedCreateInput>
    /**
     * In case the community was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communityUpdateInput, communityUncheckedUpdateInput>
  }

  /**
   * community delete
   */
  export type communityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter which community to delete.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community deleteMany
   */
  export type communityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communities to delete
     */
    where?: communityWhereInput
  }

  /**
   * community.community_referral
   */
  export type community$community_referralArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    where?: community_referralWhereInput
    orderBy?: community_referralOrderByWithRelationInput | community_referralOrderByWithRelationInput[]
    cursor?: community_referralWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_referralScalarFieldEnum | Community_referralScalarFieldEnum[]
  }

  /**
   * community.community_revenue
   */
  export type community$community_revenueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    where?: community_revenueWhereInput
    orderBy?: community_revenueOrderByWithRelationInput | community_revenueOrderByWithRelationInput[]
    cursor?: community_revenueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_revenueScalarFieldEnum | Community_revenueScalarFieldEnum[]
  }

  /**
   * community without action
   */
  export type communityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the community
     */
    omit?: communityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
  }


  /**
   * Model community_referral
   */

  export type AggregateCommunity_referral = {
    _count: Community_referralCountAggregateOutputType | null
    _avg: Community_referralAvgAggregateOutputType | null
    _sum: Community_referralSumAggregateOutputType | null
    _min: Community_referralMinAggregateOutputType | null
    _max: Community_referralMaxAggregateOutputType | null
  }

  export type Community_referralAvgAggregateOutputType = {
    id: number | null
    expiration_date: number | null
    state: number | null
    community_id: number | null
    proportion: number | null
  }

  export type Community_referralSumAggregateOutputType = {
    id: number | null
    expiration_date: number | null
    state: number | null
    community_id: number | null
    proportion: number | null
  }

  export type Community_referralMinAggregateOutputType = {
    id: number | null
    expiration_date: number | null
    state: number | null
    code: string | null
    community_id: number | null
    proportion: number | null
    sol_address: string | null
    eth_address: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_referralMaxAggregateOutputType = {
    id: number | null
    expiration_date: number | null
    state: number | null
    code: string | null
    community_id: number | null
    proportion: number | null
    sol_address: string | null
    eth_address: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_referralCountAggregateOutputType = {
    id: number
    expiration_date: number
    state: number
    code: number
    community_id: number
    proportion: number
    sol_address: number
    eth_address: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Community_referralAvgAggregateInputType = {
    id?: true
    expiration_date?: true
    state?: true
    community_id?: true
    proportion?: true
  }

  export type Community_referralSumAggregateInputType = {
    id?: true
    expiration_date?: true
    state?: true
    community_id?: true
    proportion?: true
  }

  export type Community_referralMinAggregateInputType = {
    id?: true
    expiration_date?: true
    state?: true
    code?: true
    community_id?: true
    proportion?: true
    sol_address?: true
    eth_address?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_referralMaxAggregateInputType = {
    id?: true
    expiration_date?: true
    state?: true
    code?: true
    community_id?: true
    proportion?: true
    sol_address?: true
    eth_address?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_referralCountAggregateInputType = {
    id?: true
    expiration_date?: true
    state?: true
    code?: true
    community_id?: true
    proportion?: true
    sol_address?: true
    eth_address?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Community_referralAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_referral to aggregate.
     */
    where?: community_referralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referrals to fetch.
     */
    orderBy?: community_referralOrderByWithRelationInput | community_referralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_referralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referrals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_referrals
    **/
    _count?: true | Community_referralCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Community_referralAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Community_referralSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_referralMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_referralMaxAggregateInputType
  }

  export type GetCommunity_referralAggregateType<T extends Community_referralAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_referral]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_referral[P]>
      : GetScalarType<T[P], AggregateCommunity_referral[P]>
  }




  export type community_referralGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_referralWhereInput
    orderBy?: community_referralOrderByWithAggregationInput | community_referralOrderByWithAggregationInput[]
    by: Community_referralScalarFieldEnum[] | Community_referralScalarFieldEnum
    having?: community_referralScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_referralCountAggregateInputType | true
    _avg?: Community_referralAvgAggregateInputType
    _sum?: Community_referralSumAggregateInputType
    _min?: Community_referralMinAggregateInputType
    _max?: Community_referralMaxAggregateInputType
  }

  export type Community_referralGroupByOutputType = {
    id: number
    expiration_date: number
    state: number
    code: string
    community_id: number
    proportion: number
    sol_address: string
    eth_address: string | null
    created_at: Date
    updated_at: Date
    _count: Community_referralCountAggregateOutputType | null
    _avg: Community_referralAvgAggregateOutputType | null
    _sum: Community_referralSumAggregateOutputType | null
    _min: Community_referralMinAggregateOutputType | null
    _max: Community_referralMaxAggregateOutputType | null
  }

  type GetCommunity_referralGroupByPayload<T extends community_referralGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_referralGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_referralGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_referralGroupByOutputType[P]>
            : GetScalarType<T[P], Community_referralGroupByOutputType[P]>
        }
      >
    >


  export type community_referralSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiration_date?: boolean
    state?: boolean
    code?: boolean
    community_id?: boolean
    proportion?: boolean
    sol_address?: boolean
    eth_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    community?: boolean | communityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral"]>

  export type community_referralSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiration_date?: boolean
    state?: boolean
    code?: boolean
    community_id?: boolean
    proportion?: boolean
    sol_address?: boolean
    eth_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    community?: boolean | communityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral"]>

  export type community_referralSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiration_date?: boolean
    state?: boolean
    code?: boolean
    community_id?: boolean
    proportion?: boolean
    sol_address?: boolean
    eth_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    community?: boolean | communityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral"]>

  export type community_referralSelectScalar = {
    id?: boolean
    expiration_date?: boolean
    state?: boolean
    code?: boolean
    community_id?: boolean
    proportion?: boolean
    sol_address?: boolean
    eth_address?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type community_referralOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "expiration_date" | "state" | "code" | "community_id" | "proportion" | "sol_address" | "eth_address" | "created_at" | "updated_at", ExtArgs["result"]["community_referral"]>
  export type community_referralInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | communityDefaultArgs<ExtArgs>
  }
  export type community_referralIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | communityDefaultArgs<ExtArgs>
  }
  export type community_referralIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | communityDefaultArgs<ExtArgs>
  }

  export type $community_referralPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_referral"
    objects: {
      community: Prisma.$communityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      expiration_date: number
      state: number
      code: string
      community_id: number
      proportion: number
      sol_address: string
      eth_address: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["community_referral"]>
    composites: {}
  }

  type community_referralGetPayload<S extends boolean | null | undefined | community_referralDefaultArgs> = $Result.GetResult<Prisma.$community_referralPayload, S>

  type community_referralCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<community_referralFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Community_referralCountAggregateInputType | true
    }

  export interface community_referralDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_referral'], meta: { name: 'community_referral' } }
    /**
     * Find zero or one Community_referral that matches the filter.
     * @param {community_referralFindUniqueArgs} args - Arguments to find a Community_referral
     * @example
     * // Get one Community_referral
     * const community_referral = await prisma.community_referral.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends community_referralFindUniqueArgs>(args: SelectSubset<T, community_referralFindUniqueArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Community_referral that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {community_referralFindUniqueOrThrowArgs} args - Arguments to find a Community_referral
     * @example
     * // Get one Community_referral
     * const community_referral = await prisma.community_referral.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends community_referralFindUniqueOrThrowArgs>(args: SelectSubset<T, community_referralFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Community_referral that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referralFindFirstArgs} args - Arguments to find a Community_referral
     * @example
     * // Get one Community_referral
     * const community_referral = await prisma.community_referral.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends community_referralFindFirstArgs>(args?: SelectSubset<T, community_referralFindFirstArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Community_referral that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referralFindFirstOrThrowArgs} args - Arguments to find a Community_referral
     * @example
     * // Get one Community_referral
     * const community_referral = await prisma.community_referral.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends community_referralFindFirstOrThrowArgs>(args?: SelectSubset<T, community_referralFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Community_referrals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referralFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_referrals
     * const community_referrals = await prisma.community_referral.findMany()
     * 
     * // Get first 10 Community_referrals
     * const community_referrals = await prisma.community_referral.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const community_referralWithIdOnly = await prisma.community_referral.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends community_referralFindManyArgs>(args?: SelectSubset<T, community_referralFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Community_referral.
     * @param {community_referralCreateArgs} args - Arguments to create a Community_referral.
     * @example
     * // Create one Community_referral
     * const Community_referral = await prisma.community_referral.create({
     *   data: {
     *     // ... data to create a Community_referral
     *   }
     * })
     * 
     */
    create<T extends community_referralCreateArgs>(args: SelectSubset<T, community_referralCreateArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Community_referrals.
     * @param {community_referralCreateManyArgs} args - Arguments to create many Community_referrals.
     * @example
     * // Create many Community_referrals
     * const community_referral = await prisma.community_referral.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends community_referralCreateManyArgs>(args?: SelectSubset<T, community_referralCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_referrals and returns the data saved in the database.
     * @param {community_referralCreateManyAndReturnArgs} args - Arguments to create many Community_referrals.
     * @example
     * // Create many Community_referrals
     * const community_referral = await prisma.community_referral.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_referrals and only return the `id`
     * const community_referralWithIdOnly = await prisma.community_referral.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends community_referralCreateManyAndReturnArgs>(args?: SelectSubset<T, community_referralCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Community_referral.
     * @param {community_referralDeleteArgs} args - Arguments to delete one Community_referral.
     * @example
     * // Delete one Community_referral
     * const Community_referral = await prisma.community_referral.delete({
     *   where: {
     *     // ... filter to delete one Community_referral
     *   }
     * })
     * 
     */
    delete<T extends community_referralDeleteArgs>(args: SelectSubset<T, community_referralDeleteArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Community_referral.
     * @param {community_referralUpdateArgs} args - Arguments to update one Community_referral.
     * @example
     * // Update one Community_referral
     * const community_referral = await prisma.community_referral.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends community_referralUpdateArgs>(args: SelectSubset<T, community_referralUpdateArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Community_referrals.
     * @param {community_referralDeleteManyArgs} args - Arguments to filter Community_referrals to delete.
     * @example
     * // Delete a few Community_referrals
     * const { count } = await prisma.community_referral.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends community_referralDeleteManyArgs>(args?: SelectSubset<T, community_referralDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_referrals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referralUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_referrals
     * const community_referral = await prisma.community_referral.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends community_referralUpdateManyArgs>(args: SelectSubset<T, community_referralUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_referrals and returns the data updated in the database.
     * @param {community_referralUpdateManyAndReturnArgs} args - Arguments to update many Community_referrals.
     * @example
     * // Update many Community_referrals
     * const community_referral = await prisma.community_referral.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Community_referrals and only return the `id`
     * const community_referralWithIdOnly = await prisma.community_referral.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends community_referralUpdateManyAndReturnArgs>(args: SelectSubset<T, community_referralUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Community_referral.
     * @param {community_referralUpsertArgs} args - Arguments to update or create a Community_referral.
     * @example
     * // Update or create a Community_referral
     * const community_referral = await prisma.community_referral.upsert({
     *   create: {
     *     // ... data to create a Community_referral
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_referral we want to update
     *   }
     * })
     */
    upsert<T extends community_referralUpsertArgs>(args: SelectSubset<T, community_referralUpsertArgs<ExtArgs>>): Prisma__community_referralClient<$Result.GetResult<Prisma.$community_referralPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Community_referrals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referralCountArgs} args - Arguments to filter Community_referrals to count.
     * @example
     * // Count the number of Community_referrals
     * const count = await prisma.community_referral.count({
     *   where: {
     *     // ... the filter for the Community_referrals we want to count
     *   }
     * })
    **/
    count<T extends community_referralCountArgs>(
      args?: Subset<T, community_referralCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_referralCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_referral.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_referralAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_referralAggregateArgs>(args: Subset<T, Community_referralAggregateArgs>): Prisma.PrismaPromise<GetCommunity_referralAggregateType<T>>

    /**
     * Group by Community_referral.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referralGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_referralGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_referralGroupByArgs['orderBy'] }
        : { orderBy?: community_referralGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_referralGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_referralGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_referral model
   */
  readonly fields: community_referralFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_referral.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_referralClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community<T extends communityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communityDefaultArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community_referral model
   */ 
  interface community_referralFieldRefs {
    readonly id: FieldRef<"community_referral", 'Int'>
    readonly expiration_date: FieldRef<"community_referral", 'Int'>
    readonly state: FieldRef<"community_referral", 'Int'>
    readonly code: FieldRef<"community_referral", 'String'>
    readonly community_id: FieldRef<"community_referral", 'Int'>
    readonly proportion: FieldRef<"community_referral", 'Float'>
    readonly sol_address: FieldRef<"community_referral", 'String'>
    readonly eth_address: FieldRef<"community_referral", 'String'>
    readonly created_at: FieldRef<"community_referral", 'DateTime'>
    readonly updated_at: FieldRef<"community_referral", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_referral findUnique
   */
  export type community_referralFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * Filter, which community_referral to fetch.
     */
    where: community_referralWhereUniqueInput
  }

  /**
   * community_referral findUniqueOrThrow
   */
  export type community_referralFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * Filter, which community_referral to fetch.
     */
    where: community_referralWhereUniqueInput
  }

  /**
   * community_referral findFirst
   */
  export type community_referralFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * Filter, which community_referral to fetch.
     */
    where?: community_referralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referrals to fetch.
     */
    orderBy?: community_referralOrderByWithRelationInput | community_referralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_referrals.
     */
    cursor?: community_referralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referrals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_referrals.
     */
    distinct?: Community_referralScalarFieldEnum | Community_referralScalarFieldEnum[]
  }

  /**
   * community_referral findFirstOrThrow
   */
  export type community_referralFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * Filter, which community_referral to fetch.
     */
    where?: community_referralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referrals to fetch.
     */
    orderBy?: community_referralOrderByWithRelationInput | community_referralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_referrals.
     */
    cursor?: community_referralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referrals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_referrals.
     */
    distinct?: Community_referralScalarFieldEnum | Community_referralScalarFieldEnum[]
  }

  /**
   * community_referral findMany
   */
  export type community_referralFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * Filter, which community_referrals to fetch.
     */
    where?: community_referralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referrals to fetch.
     */
    orderBy?: community_referralOrderByWithRelationInput | community_referralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_referrals.
     */
    cursor?: community_referralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referrals.
     */
    skip?: number
    distinct?: Community_referralScalarFieldEnum | Community_referralScalarFieldEnum[]
  }

  /**
   * community_referral create
   */
  export type community_referralCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * The data needed to create a community_referral.
     */
    data: XOR<community_referralCreateInput, community_referralUncheckedCreateInput>
  }

  /**
   * community_referral createMany
   */
  export type community_referralCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_referrals.
     */
    data: community_referralCreateManyInput | community_referralCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_referral createManyAndReturn
   */
  export type community_referralCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * The data used to create many community_referrals.
     */
    data: community_referralCreateManyInput | community_referralCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_referral update
   */
  export type community_referralUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * The data needed to update a community_referral.
     */
    data: XOR<community_referralUpdateInput, community_referralUncheckedUpdateInput>
    /**
     * Choose, which community_referral to update.
     */
    where: community_referralWhereUniqueInput
  }

  /**
   * community_referral updateMany
   */
  export type community_referralUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_referrals.
     */
    data: XOR<community_referralUpdateManyMutationInput, community_referralUncheckedUpdateManyInput>
    /**
     * Filter which community_referrals to update
     */
    where?: community_referralWhereInput
  }

  /**
   * community_referral updateManyAndReturn
   */
  export type community_referralUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * The data used to update community_referrals.
     */
    data: XOR<community_referralUpdateManyMutationInput, community_referralUncheckedUpdateManyInput>
    /**
     * Filter which community_referrals to update
     */
    where?: community_referralWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_referral upsert
   */
  export type community_referralUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * The filter to search for the community_referral to update in case it exists.
     */
    where: community_referralWhereUniqueInput
    /**
     * In case the community_referral found by the `where` argument doesn't exist, create a new community_referral with this data.
     */
    create: XOR<community_referralCreateInput, community_referralUncheckedCreateInput>
    /**
     * In case the community_referral was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_referralUpdateInput, community_referralUncheckedUpdateInput>
  }

  /**
   * community_referral delete
   */
  export type community_referralDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
    /**
     * Filter which community_referral to delete.
     */
    where: community_referralWhereUniqueInput
  }

  /**
   * community_referral deleteMany
   */
  export type community_referralDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_referrals to delete
     */
    where?: community_referralWhereInput
  }

  /**
   * community_referral without action
   */
  export type community_referralDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral
     */
    select?: community_referralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral
     */
    omit?: community_referralOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referralInclude<ExtArgs> | null
  }


  /**
   * Model community_referral_payed_logs
   */

  export type AggregateCommunity_referral_payed_logs = {
    _count: Community_referral_payed_logsCountAggregateOutputType | null
    _avg: Community_referral_payed_logsAvgAggregateOutputType | null
    _sum: Community_referral_payed_logsSumAggregateOutputType | null
    _min: Community_referral_payed_logsMinAggregateOutputType | null
    _max: Community_referral_payed_logsMaxAggregateOutputType | null
  }

  export type Community_referral_payed_logsAvgAggregateOutputType = {
    id: number | null
    ref_revenue: number | null
    amount: number | null
  }

  export type Community_referral_payed_logsSumAggregateOutputType = {
    id: number | null
    ref_revenue: number | null
    amount: number | null
  }

  export type Community_referral_payed_logsMinAggregateOutputType = {
    id: number | null
    ref_revenue: number | null
    token: string | null
    type: string | null
    amount: number | null
    signature: string | null
    network: string | null
    payee_address: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_referral_payed_logsMaxAggregateOutputType = {
    id: number | null
    ref_revenue: number | null
    token: string | null
    type: string | null
    amount: number | null
    signature: string | null
    network: string | null
    payee_address: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_referral_payed_logsCountAggregateOutputType = {
    id: number
    ref_revenue: number
    token: number
    type: number
    amount: number
    signature: number
    network: number
    payee_address: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Community_referral_payed_logsAvgAggregateInputType = {
    id?: true
    ref_revenue?: true
    amount?: true
  }

  export type Community_referral_payed_logsSumAggregateInputType = {
    id?: true
    ref_revenue?: true
    amount?: true
  }

  export type Community_referral_payed_logsMinAggregateInputType = {
    id?: true
    ref_revenue?: true
    token?: true
    type?: true
    amount?: true
    signature?: true
    network?: true
    payee_address?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_referral_payed_logsMaxAggregateInputType = {
    id?: true
    ref_revenue?: true
    token?: true
    type?: true
    amount?: true
    signature?: true
    network?: true
    payee_address?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_referral_payed_logsCountAggregateInputType = {
    id?: true
    ref_revenue?: true
    token?: true
    type?: true
    amount?: true
    signature?: true
    network?: true
    payee_address?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Community_referral_payed_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_referral_payed_logs to aggregate.
     */
    where?: community_referral_payed_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_payed_logs to fetch.
     */
    orderBy?: community_referral_payed_logsOrderByWithRelationInput | community_referral_payed_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_referral_payed_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_payed_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_payed_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_referral_payed_logs
    **/
    _count?: true | Community_referral_payed_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Community_referral_payed_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Community_referral_payed_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_referral_payed_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_referral_payed_logsMaxAggregateInputType
  }

  export type GetCommunity_referral_payed_logsAggregateType<T extends Community_referral_payed_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_referral_payed_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_referral_payed_logs[P]>
      : GetScalarType<T[P], AggregateCommunity_referral_payed_logs[P]>
  }




  export type community_referral_payed_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_referral_payed_logsWhereInput
    orderBy?: community_referral_payed_logsOrderByWithAggregationInput | community_referral_payed_logsOrderByWithAggregationInput[]
    by: Community_referral_payed_logsScalarFieldEnum[] | Community_referral_payed_logsScalarFieldEnum
    having?: community_referral_payed_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_referral_payed_logsCountAggregateInputType | true
    _avg?: Community_referral_payed_logsAvgAggregateInputType
    _sum?: Community_referral_payed_logsSumAggregateInputType
    _min?: Community_referral_payed_logsMinAggregateInputType
    _max?: Community_referral_payed_logsMaxAggregateInputType
  }

  export type Community_referral_payed_logsGroupByOutputType = {
    id: number
    ref_revenue: number
    token: string
    type: string
    amount: number
    signature: string
    network: string
    payee_address: string
    created_at: Date
    updated_at: Date
    _count: Community_referral_payed_logsCountAggregateOutputType | null
    _avg: Community_referral_payed_logsAvgAggregateOutputType | null
    _sum: Community_referral_payed_logsSumAggregateOutputType | null
    _min: Community_referral_payed_logsMinAggregateOutputType | null
    _max: Community_referral_payed_logsMaxAggregateOutputType | null
  }

  type GetCommunity_referral_payed_logsGroupByPayload<T extends community_referral_payed_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_referral_payed_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_referral_payed_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_referral_payed_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Community_referral_payed_logsGroupByOutputType[P]>
        }
      >
    >


  export type community_referral_payed_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ref_revenue?: boolean
    token?: boolean
    type?: boolean
    amount?: boolean
    signature?: boolean
    network?: boolean
    payee_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral_payed_logs"]>

  export type community_referral_payed_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ref_revenue?: boolean
    token?: boolean
    type?: boolean
    amount?: boolean
    signature?: boolean
    network?: boolean
    payee_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral_payed_logs"]>

  export type community_referral_payed_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ref_revenue?: boolean
    token?: boolean
    type?: boolean
    amount?: boolean
    signature?: boolean
    network?: boolean
    payee_address?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral_payed_logs"]>

  export type community_referral_payed_logsSelectScalar = {
    id?: boolean
    ref_revenue?: boolean
    token?: boolean
    type?: boolean
    amount?: boolean
    signature?: boolean
    network?: boolean
    payee_address?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type community_referral_payed_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ref_revenue" | "token" | "type" | "amount" | "signature" | "network" | "payee_address" | "created_at" | "updated_at", ExtArgs["result"]["community_referral_payed_logs"]>
  export type community_referral_payed_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }
  export type community_referral_payed_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }
  export type community_referral_payed_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }

  export type $community_referral_payed_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_referral_payed_logs"
    objects: {
      community_revenue: Prisma.$community_revenuePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ref_revenue: number
      token: string
      type: string
      amount: number
      signature: string
      network: string
      payee_address: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["community_referral_payed_logs"]>
    composites: {}
  }

  type community_referral_payed_logsGetPayload<S extends boolean | null | undefined | community_referral_payed_logsDefaultArgs> = $Result.GetResult<Prisma.$community_referral_payed_logsPayload, S>

  type community_referral_payed_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<community_referral_payed_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Community_referral_payed_logsCountAggregateInputType | true
    }

  export interface community_referral_payed_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_referral_payed_logs'], meta: { name: 'community_referral_payed_logs' } }
    /**
     * Find zero or one Community_referral_payed_logs that matches the filter.
     * @param {community_referral_payed_logsFindUniqueArgs} args - Arguments to find a Community_referral_payed_logs
     * @example
     * // Get one Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends community_referral_payed_logsFindUniqueArgs>(args: SelectSubset<T, community_referral_payed_logsFindUniqueArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Community_referral_payed_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {community_referral_payed_logsFindUniqueOrThrowArgs} args - Arguments to find a Community_referral_payed_logs
     * @example
     * // Get one Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends community_referral_payed_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_referral_payed_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Community_referral_payed_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_payed_logsFindFirstArgs} args - Arguments to find a Community_referral_payed_logs
     * @example
     * // Get one Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends community_referral_payed_logsFindFirstArgs>(args?: SelectSubset<T, community_referral_payed_logsFindFirstArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Community_referral_payed_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_payed_logsFindFirstOrThrowArgs} args - Arguments to find a Community_referral_payed_logs
     * @example
     * // Get one Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends community_referral_payed_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_referral_payed_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Community_referral_payed_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_payed_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findMany()
     * 
     * // Get first 10 Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const community_referral_payed_logsWithIdOnly = await prisma.community_referral_payed_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends community_referral_payed_logsFindManyArgs>(args?: SelectSubset<T, community_referral_payed_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Community_referral_payed_logs.
     * @param {community_referral_payed_logsCreateArgs} args - Arguments to create a Community_referral_payed_logs.
     * @example
     * // Create one Community_referral_payed_logs
     * const Community_referral_payed_logs = await prisma.community_referral_payed_logs.create({
     *   data: {
     *     // ... data to create a Community_referral_payed_logs
     *   }
     * })
     * 
     */
    create<T extends community_referral_payed_logsCreateArgs>(args: SelectSubset<T, community_referral_payed_logsCreateArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Community_referral_payed_logs.
     * @param {community_referral_payed_logsCreateManyArgs} args - Arguments to create many Community_referral_payed_logs.
     * @example
     * // Create many Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends community_referral_payed_logsCreateManyArgs>(args?: SelectSubset<T, community_referral_payed_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_referral_payed_logs and returns the data saved in the database.
     * @param {community_referral_payed_logsCreateManyAndReturnArgs} args - Arguments to create many Community_referral_payed_logs.
     * @example
     * // Create many Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_referral_payed_logs and only return the `id`
     * const community_referral_payed_logsWithIdOnly = await prisma.community_referral_payed_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends community_referral_payed_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_referral_payed_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Community_referral_payed_logs.
     * @param {community_referral_payed_logsDeleteArgs} args - Arguments to delete one Community_referral_payed_logs.
     * @example
     * // Delete one Community_referral_payed_logs
     * const Community_referral_payed_logs = await prisma.community_referral_payed_logs.delete({
     *   where: {
     *     // ... filter to delete one Community_referral_payed_logs
     *   }
     * })
     * 
     */
    delete<T extends community_referral_payed_logsDeleteArgs>(args: SelectSubset<T, community_referral_payed_logsDeleteArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Community_referral_payed_logs.
     * @param {community_referral_payed_logsUpdateArgs} args - Arguments to update one Community_referral_payed_logs.
     * @example
     * // Update one Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends community_referral_payed_logsUpdateArgs>(args: SelectSubset<T, community_referral_payed_logsUpdateArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Community_referral_payed_logs.
     * @param {community_referral_payed_logsDeleteManyArgs} args - Arguments to filter Community_referral_payed_logs to delete.
     * @example
     * // Delete a few Community_referral_payed_logs
     * const { count } = await prisma.community_referral_payed_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends community_referral_payed_logsDeleteManyArgs>(args?: SelectSubset<T, community_referral_payed_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_referral_payed_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_payed_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends community_referral_payed_logsUpdateManyArgs>(args: SelectSubset<T, community_referral_payed_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_referral_payed_logs and returns the data updated in the database.
     * @param {community_referral_payed_logsUpdateManyAndReturnArgs} args - Arguments to update many Community_referral_payed_logs.
     * @example
     * // Update many Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Community_referral_payed_logs and only return the `id`
     * const community_referral_payed_logsWithIdOnly = await prisma.community_referral_payed_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends community_referral_payed_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_referral_payed_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Community_referral_payed_logs.
     * @param {community_referral_payed_logsUpsertArgs} args - Arguments to update or create a Community_referral_payed_logs.
     * @example
     * // Update or create a Community_referral_payed_logs
     * const community_referral_payed_logs = await prisma.community_referral_payed_logs.upsert({
     *   create: {
     *     // ... data to create a Community_referral_payed_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_referral_payed_logs we want to update
     *   }
     * })
     */
    upsert<T extends community_referral_payed_logsUpsertArgs>(args: SelectSubset<T, community_referral_payed_logsUpsertArgs<ExtArgs>>): Prisma__community_referral_payed_logsClient<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Community_referral_payed_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_payed_logsCountArgs} args - Arguments to filter Community_referral_payed_logs to count.
     * @example
     * // Count the number of Community_referral_payed_logs
     * const count = await prisma.community_referral_payed_logs.count({
     *   where: {
     *     // ... the filter for the Community_referral_payed_logs we want to count
     *   }
     * })
    **/
    count<T extends community_referral_payed_logsCountArgs>(
      args?: Subset<T, community_referral_payed_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_referral_payed_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_referral_payed_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_referral_payed_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_referral_payed_logsAggregateArgs>(args: Subset<T, Community_referral_payed_logsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_referral_payed_logsAggregateType<T>>

    /**
     * Group by Community_referral_payed_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_payed_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_referral_payed_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_referral_payed_logsGroupByArgs['orderBy'] }
        : { orderBy?: community_referral_payed_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_referral_payed_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_referral_payed_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_referral_payed_logs model
   */
  readonly fields: community_referral_payed_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_referral_payed_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_referral_payed_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community_revenue<T extends community_revenueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_revenueDefaultArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community_referral_payed_logs model
   */ 
  interface community_referral_payed_logsFieldRefs {
    readonly id: FieldRef<"community_referral_payed_logs", 'Int'>
    readonly ref_revenue: FieldRef<"community_referral_payed_logs", 'Int'>
    readonly token: FieldRef<"community_referral_payed_logs", 'String'>
    readonly type: FieldRef<"community_referral_payed_logs", 'String'>
    readonly amount: FieldRef<"community_referral_payed_logs", 'Float'>
    readonly signature: FieldRef<"community_referral_payed_logs", 'String'>
    readonly network: FieldRef<"community_referral_payed_logs", 'String'>
    readonly payee_address: FieldRef<"community_referral_payed_logs", 'String'>
    readonly created_at: FieldRef<"community_referral_payed_logs", 'DateTime'>
    readonly updated_at: FieldRef<"community_referral_payed_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_referral_payed_logs findUnique
   */
  export type community_referral_payed_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_payed_logs to fetch.
     */
    where: community_referral_payed_logsWhereUniqueInput
  }

  /**
   * community_referral_payed_logs findUniqueOrThrow
   */
  export type community_referral_payed_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_payed_logs to fetch.
     */
    where: community_referral_payed_logsWhereUniqueInput
  }

  /**
   * community_referral_payed_logs findFirst
   */
  export type community_referral_payed_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_payed_logs to fetch.
     */
    where?: community_referral_payed_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_payed_logs to fetch.
     */
    orderBy?: community_referral_payed_logsOrderByWithRelationInput | community_referral_payed_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_referral_payed_logs.
     */
    cursor?: community_referral_payed_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_payed_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_payed_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_referral_payed_logs.
     */
    distinct?: Community_referral_payed_logsScalarFieldEnum | Community_referral_payed_logsScalarFieldEnum[]
  }

  /**
   * community_referral_payed_logs findFirstOrThrow
   */
  export type community_referral_payed_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_payed_logs to fetch.
     */
    where?: community_referral_payed_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_payed_logs to fetch.
     */
    orderBy?: community_referral_payed_logsOrderByWithRelationInput | community_referral_payed_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_referral_payed_logs.
     */
    cursor?: community_referral_payed_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_payed_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_payed_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_referral_payed_logs.
     */
    distinct?: Community_referral_payed_logsScalarFieldEnum | Community_referral_payed_logsScalarFieldEnum[]
  }

  /**
   * community_referral_payed_logs findMany
   */
  export type community_referral_payed_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_payed_logs to fetch.
     */
    where?: community_referral_payed_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_payed_logs to fetch.
     */
    orderBy?: community_referral_payed_logsOrderByWithRelationInput | community_referral_payed_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_referral_payed_logs.
     */
    cursor?: community_referral_payed_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_payed_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_payed_logs.
     */
    skip?: number
    distinct?: Community_referral_payed_logsScalarFieldEnum | Community_referral_payed_logsScalarFieldEnum[]
  }

  /**
   * community_referral_payed_logs create
   */
  export type community_referral_payed_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a community_referral_payed_logs.
     */
    data: XOR<community_referral_payed_logsCreateInput, community_referral_payed_logsUncheckedCreateInput>
  }

  /**
   * community_referral_payed_logs createMany
   */
  export type community_referral_payed_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_referral_payed_logs.
     */
    data: community_referral_payed_logsCreateManyInput | community_referral_payed_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_referral_payed_logs createManyAndReturn
   */
  export type community_referral_payed_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * The data used to create many community_referral_payed_logs.
     */
    data: community_referral_payed_logsCreateManyInput | community_referral_payed_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_referral_payed_logs update
   */
  export type community_referral_payed_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a community_referral_payed_logs.
     */
    data: XOR<community_referral_payed_logsUpdateInput, community_referral_payed_logsUncheckedUpdateInput>
    /**
     * Choose, which community_referral_payed_logs to update.
     */
    where: community_referral_payed_logsWhereUniqueInput
  }

  /**
   * community_referral_payed_logs updateMany
   */
  export type community_referral_payed_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_referral_payed_logs.
     */
    data: XOR<community_referral_payed_logsUpdateManyMutationInput, community_referral_payed_logsUncheckedUpdateManyInput>
    /**
     * Filter which community_referral_payed_logs to update
     */
    where?: community_referral_payed_logsWhereInput
  }

  /**
   * community_referral_payed_logs updateManyAndReturn
   */
  export type community_referral_payed_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * The data used to update community_referral_payed_logs.
     */
    data: XOR<community_referral_payed_logsUpdateManyMutationInput, community_referral_payed_logsUncheckedUpdateManyInput>
    /**
     * Filter which community_referral_payed_logs to update
     */
    where?: community_referral_payed_logsWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_referral_payed_logs upsert
   */
  export type community_referral_payed_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the community_referral_payed_logs to update in case it exists.
     */
    where: community_referral_payed_logsWhereUniqueInput
    /**
     * In case the community_referral_payed_logs found by the `where` argument doesn't exist, create a new community_referral_payed_logs with this data.
     */
    create: XOR<community_referral_payed_logsCreateInput, community_referral_payed_logsUncheckedCreateInput>
    /**
     * In case the community_referral_payed_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_referral_payed_logsUpdateInput, community_referral_payed_logsUncheckedUpdateInput>
  }

  /**
   * community_referral_payed_logs delete
   */
  export type community_referral_payed_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    /**
     * Filter which community_referral_payed_logs to delete.
     */
    where: community_referral_payed_logsWhereUniqueInput
  }

  /**
   * community_referral_payed_logs deleteMany
   */
  export type community_referral_payed_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_referral_payed_logs to delete
     */
    where?: community_referral_payed_logsWhereInput
  }

  /**
   * community_referral_payed_logs without action
   */
  export type community_referral_payed_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
  }


  /**
   * Model community_referral_revenue_logs
   */

  export type AggregateCommunity_referral_revenue_logs = {
    _count: Community_referral_revenue_logsCountAggregateOutputType | null
    _avg: Community_referral_revenue_logsAvgAggregateOutputType | null
    _sum: Community_referral_revenue_logsSumAggregateOutputType | null
    _min: Community_referral_revenue_logsMinAggregateOutputType | null
    _max: Community_referral_revenue_logsMaxAggregateOutputType | null
  }

  export type Community_referral_revenue_logsAvgAggregateOutputType = {
    id: number | null
    amount: number | null
    proportion: number | null
    ref_revenue: number | null
  }

  export type Community_referral_revenue_logsSumAggregateOutputType = {
    id: number | null
    amount: number | null
    proportion: number | null
    ref_revenue: number | null
  }

  export type Community_referral_revenue_logsMinAggregateOutputType = {
    id: number | null
    user: string | null
    amount: number | null
    token: string | null
    type: string | null
    ref_code: string | null
    proportion: number | null
    signature: string | null
    network: string | null
    ref_revenue: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_referral_revenue_logsMaxAggregateOutputType = {
    id: number | null
    user: string | null
    amount: number | null
    token: string | null
    type: string | null
    ref_code: string | null
    proportion: number | null
    signature: string | null
    network: string | null
    ref_revenue: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_referral_revenue_logsCountAggregateOutputType = {
    id: number
    user: number
    amount: number
    token: number
    type: number
    ref_code: number
    proportion: number
    signature: number
    network: number
    ref_revenue: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Community_referral_revenue_logsAvgAggregateInputType = {
    id?: true
    amount?: true
    proportion?: true
    ref_revenue?: true
  }

  export type Community_referral_revenue_logsSumAggregateInputType = {
    id?: true
    amount?: true
    proportion?: true
    ref_revenue?: true
  }

  export type Community_referral_revenue_logsMinAggregateInputType = {
    id?: true
    user?: true
    amount?: true
    token?: true
    type?: true
    ref_code?: true
    proportion?: true
    signature?: true
    network?: true
    ref_revenue?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_referral_revenue_logsMaxAggregateInputType = {
    id?: true
    user?: true
    amount?: true
    token?: true
    type?: true
    ref_code?: true
    proportion?: true
    signature?: true
    network?: true
    ref_revenue?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_referral_revenue_logsCountAggregateInputType = {
    id?: true
    user?: true
    amount?: true
    token?: true
    type?: true
    ref_code?: true
    proportion?: true
    signature?: true
    network?: true
    ref_revenue?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Community_referral_revenue_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_referral_revenue_logs to aggregate.
     */
    where?: community_referral_revenue_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_revenue_logs to fetch.
     */
    orderBy?: community_referral_revenue_logsOrderByWithRelationInput | community_referral_revenue_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_referral_revenue_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_revenue_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_revenue_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_referral_revenue_logs
    **/
    _count?: true | Community_referral_revenue_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Community_referral_revenue_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Community_referral_revenue_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_referral_revenue_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_referral_revenue_logsMaxAggregateInputType
  }

  export type GetCommunity_referral_revenue_logsAggregateType<T extends Community_referral_revenue_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_referral_revenue_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_referral_revenue_logs[P]>
      : GetScalarType<T[P], AggregateCommunity_referral_revenue_logs[P]>
  }




  export type community_referral_revenue_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_referral_revenue_logsWhereInput
    orderBy?: community_referral_revenue_logsOrderByWithAggregationInput | community_referral_revenue_logsOrderByWithAggregationInput[]
    by: Community_referral_revenue_logsScalarFieldEnum[] | Community_referral_revenue_logsScalarFieldEnum
    having?: community_referral_revenue_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_referral_revenue_logsCountAggregateInputType | true
    _avg?: Community_referral_revenue_logsAvgAggregateInputType
    _sum?: Community_referral_revenue_logsSumAggregateInputType
    _min?: Community_referral_revenue_logsMinAggregateInputType
    _max?: Community_referral_revenue_logsMaxAggregateInputType
  }

  export type Community_referral_revenue_logsGroupByOutputType = {
    id: number
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network: string
    ref_revenue: number
    created_at: Date
    updated_at: Date
    _count: Community_referral_revenue_logsCountAggregateOutputType | null
    _avg: Community_referral_revenue_logsAvgAggregateOutputType | null
    _sum: Community_referral_revenue_logsSumAggregateOutputType | null
    _min: Community_referral_revenue_logsMinAggregateOutputType | null
    _max: Community_referral_revenue_logsMaxAggregateOutputType | null
  }

  type GetCommunity_referral_revenue_logsGroupByPayload<T extends community_referral_revenue_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_referral_revenue_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_referral_revenue_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_referral_revenue_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Community_referral_revenue_logsGroupByOutputType[P]>
        }
      >
    >


  export type community_referral_revenue_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user?: boolean
    amount?: boolean
    token?: boolean
    type?: boolean
    ref_code?: boolean
    proportion?: boolean
    signature?: boolean
    network?: boolean
    ref_revenue?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral_revenue_logs"]>

  export type community_referral_revenue_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user?: boolean
    amount?: boolean
    token?: boolean
    type?: boolean
    ref_code?: boolean
    proportion?: boolean
    signature?: boolean
    network?: boolean
    ref_revenue?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral_revenue_logs"]>

  export type community_referral_revenue_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user?: boolean
    amount?: boolean
    token?: boolean
    type?: boolean
    ref_code?: boolean
    proportion?: boolean
    signature?: boolean
    network?: boolean
    ref_revenue?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_referral_revenue_logs"]>

  export type community_referral_revenue_logsSelectScalar = {
    id?: boolean
    user?: boolean
    amount?: boolean
    token?: boolean
    type?: boolean
    ref_code?: boolean
    proportion?: boolean
    signature?: boolean
    network?: boolean
    ref_revenue?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type community_referral_revenue_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user" | "amount" | "token" | "type" | "ref_code" | "proportion" | "signature" | "network" | "ref_revenue" | "created_at" | "updated_at", ExtArgs["result"]["community_referral_revenue_logs"]>
  export type community_referral_revenue_logsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }
  export type community_referral_revenue_logsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }
  export type community_referral_revenue_logsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_revenue?: boolean | community_revenueDefaultArgs<ExtArgs>
  }

  export type $community_referral_revenue_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_referral_revenue_logs"
    objects: {
      community_revenue: Prisma.$community_revenuePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user: string
      amount: number
      token: string
      type: string
      ref_code: string
      proportion: number
      signature: string
      network: string
      ref_revenue: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["community_referral_revenue_logs"]>
    composites: {}
  }

  type community_referral_revenue_logsGetPayload<S extends boolean | null | undefined | community_referral_revenue_logsDefaultArgs> = $Result.GetResult<Prisma.$community_referral_revenue_logsPayload, S>

  type community_referral_revenue_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<community_referral_revenue_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Community_referral_revenue_logsCountAggregateInputType | true
    }

  export interface community_referral_revenue_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_referral_revenue_logs'], meta: { name: 'community_referral_revenue_logs' } }
    /**
     * Find zero or one Community_referral_revenue_logs that matches the filter.
     * @param {community_referral_revenue_logsFindUniqueArgs} args - Arguments to find a Community_referral_revenue_logs
     * @example
     * // Get one Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends community_referral_revenue_logsFindUniqueArgs>(args: SelectSubset<T, community_referral_revenue_logsFindUniqueArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Community_referral_revenue_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {community_referral_revenue_logsFindUniqueOrThrowArgs} args - Arguments to find a Community_referral_revenue_logs
     * @example
     * // Get one Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends community_referral_revenue_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_referral_revenue_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Community_referral_revenue_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_revenue_logsFindFirstArgs} args - Arguments to find a Community_referral_revenue_logs
     * @example
     * // Get one Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends community_referral_revenue_logsFindFirstArgs>(args?: SelectSubset<T, community_referral_revenue_logsFindFirstArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Community_referral_revenue_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_revenue_logsFindFirstOrThrowArgs} args - Arguments to find a Community_referral_revenue_logs
     * @example
     * // Get one Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends community_referral_revenue_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_referral_revenue_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Community_referral_revenue_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_revenue_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findMany()
     * 
     * // Get first 10 Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const community_referral_revenue_logsWithIdOnly = await prisma.community_referral_revenue_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends community_referral_revenue_logsFindManyArgs>(args?: SelectSubset<T, community_referral_revenue_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Community_referral_revenue_logs.
     * @param {community_referral_revenue_logsCreateArgs} args - Arguments to create a Community_referral_revenue_logs.
     * @example
     * // Create one Community_referral_revenue_logs
     * const Community_referral_revenue_logs = await prisma.community_referral_revenue_logs.create({
     *   data: {
     *     // ... data to create a Community_referral_revenue_logs
     *   }
     * })
     * 
     */
    create<T extends community_referral_revenue_logsCreateArgs>(args: SelectSubset<T, community_referral_revenue_logsCreateArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Community_referral_revenue_logs.
     * @param {community_referral_revenue_logsCreateManyArgs} args - Arguments to create many Community_referral_revenue_logs.
     * @example
     * // Create many Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends community_referral_revenue_logsCreateManyArgs>(args?: SelectSubset<T, community_referral_revenue_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_referral_revenue_logs and returns the data saved in the database.
     * @param {community_referral_revenue_logsCreateManyAndReturnArgs} args - Arguments to create many Community_referral_revenue_logs.
     * @example
     * // Create many Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_referral_revenue_logs and only return the `id`
     * const community_referral_revenue_logsWithIdOnly = await prisma.community_referral_revenue_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends community_referral_revenue_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, community_referral_revenue_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Community_referral_revenue_logs.
     * @param {community_referral_revenue_logsDeleteArgs} args - Arguments to delete one Community_referral_revenue_logs.
     * @example
     * // Delete one Community_referral_revenue_logs
     * const Community_referral_revenue_logs = await prisma.community_referral_revenue_logs.delete({
     *   where: {
     *     // ... filter to delete one Community_referral_revenue_logs
     *   }
     * })
     * 
     */
    delete<T extends community_referral_revenue_logsDeleteArgs>(args: SelectSubset<T, community_referral_revenue_logsDeleteArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Community_referral_revenue_logs.
     * @param {community_referral_revenue_logsUpdateArgs} args - Arguments to update one Community_referral_revenue_logs.
     * @example
     * // Update one Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends community_referral_revenue_logsUpdateArgs>(args: SelectSubset<T, community_referral_revenue_logsUpdateArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Community_referral_revenue_logs.
     * @param {community_referral_revenue_logsDeleteManyArgs} args - Arguments to filter Community_referral_revenue_logs to delete.
     * @example
     * // Delete a few Community_referral_revenue_logs
     * const { count } = await prisma.community_referral_revenue_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends community_referral_revenue_logsDeleteManyArgs>(args?: SelectSubset<T, community_referral_revenue_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_referral_revenue_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_revenue_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends community_referral_revenue_logsUpdateManyArgs>(args: SelectSubset<T, community_referral_revenue_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_referral_revenue_logs and returns the data updated in the database.
     * @param {community_referral_revenue_logsUpdateManyAndReturnArgs} args - Arguments to update many Community_referral_revenue_logs.
     * @example
     * // Update many Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Community_referral_revenue_logs and only return the `id`
     * const community_referral_revenue_logsWithIdOnly = await prisma.community_referral_revenue_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends community_referral_revenue_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, community_referral_revenue_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Community_referral_revenue_logs.
     * @param {community_referral_revenue_logsUpsertArgs} args - Arguments to update or create a Community_referral_revenue_logs.
     * @example
     * // Update or create a Community_referral_revenue_logs
     * const community_referral_revenue_logs = await prisma.community_referral_revenue_logs.upsert({
     *   create: {
     *     // ... data to create a Community_referral_revenue_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_referral_revenue_logs we want to update
     *   }
     * })
     */
    upsert<T extends community_referral_revenue_logsUpsertArgs>(args: SelectSubset<T, community_referral_revenue_logsUpsertArgs<ExtArgs>>): Prisma__community_referral_revenue_logsClient<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Community_referral_revenue_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_revenue_logsCountArgs} args - Arguments to filter Community_referral_revenue_logs to count.
     * @example
     * // Count the number of Community_referral_revenue_logs
     * const count = await prisma.community_referral_revenue_logs.count({
     *   where: {
     *     // ... the filter for the Community_referral_revenue_logs we want to count
     *   }
     * })
    **/
    count<T extends community_referral_revenue_logsCountArgs>(
      args?: Subset<T, community_referral_revenue_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_referral_revenue_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_referral_revenue_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_referral_revenue_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_referral_revenue_logsAggregateArgs>(args: Subset<T, Community_referral_revenue_logsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_referral_revenue_logsAggregateType<T>>

    /**
     * Group by Community_referral_revenue_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_referral_revenue_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_referral_revenue_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_referral_revenue_logsGroupByArgs['orderBy'] }
        : { orderBy?: community_referral_revenue_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_referral_revenue_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_referral_revenue_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_referral_revenue_logs model
   */
  readonly fields: community_referral_revenue_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_referral_revenue_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_referral_revenue_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community_revenue<T extends community_revenueDefaultArgs<ExtArgs> = {}>(args?: Subset<T, community_revenueDefaultArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community_referral_revenue_logs model
   */ 
  interface community_referral_revenue_logsFieldRefs {
    readonly id: FieldRef<"community_referral_revenue_logs", 'Int'>
    readonly user: FieldRef<"community_referral_revenue_logs", 'String'>
    readonly amount: FieldRef<"community_referral_revenue_logs", 'Float'>
    readonly token: FieldRef<"community_referral_revenue_logs", 'String'>
    readonly type: FieldRef<"community_referral_revenue_logs", 'String'>
    readonly ref_code: FieldRef<"community_referral_revenue_logs", 'String'>
    readonly proportion: FieldRef<"community_referral_revenue_logs", 'Float'>
    readonly signature: FieldRef<"community_referral_revenue_logs", 'String'>
    readonly network: FieldRef<"community_referral_revenue_logs", 'String'>
    readonly ref_revenue: FieldRef<"community_referral_revenue_logs", 'Int'>
    readonly created_at: FieldRef<"community_referral_revenue_logs", 'DateTime'>
    readonly updated_at: FieldRef<"community_referral_revenue_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_referral_revenue_logs findUnique
   */
  export type community_referral_revenue_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_revenue_logs to fetch.
     */
    where: community_referral_revenue_logsWhereUniqueInput
  }

  /**
   * community_referral_revenue_logs findUniqueOrThrow
   */
  export type community_referral_revenue_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_revenue_logs to fetch.
     */
    where: community_referral_revenue_logsWhereUniqueInput
  }

  /**
   * community_referral_revenue_logs findFirst
   */
  export type community_referral_revenue_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_revenue_logs to fetch.
     */
    where?: community_referral_revenue_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_revenue_logs to fetch.
     */
    orderBy?: community_referral_revenue_logsOrderByWithRelationInput | community_referral_revenue_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_referral_revenue_logs.
     */
    cursor?: community_referral_revenue_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_revenue_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_revenue_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_referral_revenue_logs.
     */
    distinct?: Community_referral_revenue_logsScalarFieldEnum | Community_referral_revenue_logsScalarFieldEnum[]
  }

  /**
   * community_referral_revenue_logs findFirstOrThrow
   */
  export type community_referral_revenue_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_revenue_logs to fetch.
     */
    where?: community_referral_revenue_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_revenue_logs to fetch.
     */
    orderBy?: community_referral_revenue_logsOrderByWithRelationInput | community_referral_revenue_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_referral_revenue_logs.
     */
    cursor?: community_referral_revenue_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_revenue_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_revenue_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_referral_revenue_logs.
     */
    distinct?: Community_referral_revenue_logsScalarFieldEnum | Community_referral_revenue_logsScalarFieldEnum[]
  }

  /**
   * community_referral_revenue_logs findMany
   */
  export type community_referral_revenue_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * Filter, which community_referral_revenue_logs to fetch.
     */
    where?: community_referral_revenue_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_referral_revenue_logs to fetch.
     */
    orderBy?: community_referral_revenue_logsOrderByWithRelationInput | community_referral_revenue_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_referral_revenue_logs.
     */
    cursor?: community_referral_revenue_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_referral_revenue_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_referral_revenue_logs.
     */
    skip?: number
    distinct?: Community_referral_revenue_logsScalarFieldEnum | Community_referral_revenue_logsScalarFieldEnum[]
  }

  /**
   * community_referral_revenue_logs create
   */
  export type community_referral_revenue_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * The data needed to create a community_referral_revenue_logs.
     */
    data: XOR<community_referral_revenue_logsCreateInput, community_referral_revenue_logsUncheckedCreateInput>
  }

  /**
   * community_referral_revenue_logs createMany
   */
  export type community_referral_revenue_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_referral_revenue_logs.
     */
    data: community_referral_revenue_logsCreateManyInput | community_referral_revenue_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_referral_revenue_logs createManyAndReturn
   */
  export type community_referral_revenue_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * The data used to create many community_referral_revenue_logs.
     */
    data: community_referral_revenue_logsCreateManyInput | community_referral_revenue_logsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_referral_revenue_logs update
   */
  export type community_referral_revenue_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * The data needed to update a community_referral_revenue_logs.
     */
    data: XOR<community_referral_revenue_logsUpdateInput, community_referral_revenue_logsUncheckedUpdateInput>
    /**
     * Choose, which community_referral_revenue_logs to update.
     */
    where: community_referral_revenue_logsWhereUniqueInput
  }

  /**
   * community_referral_revenue_logs updateMany
   */
  export type community_referral_revenue_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_referral_revenue_logs.
     */
    data: XOR<community_referral_revenue_logsUpdateManyMutationInput, community_referral_revenue_logsUncheckedUpdateManyInput>
    /**
     * Filter which community_referral_revenue_logs to update
     */
    where?: community_referral_revenue_logsWhereInput
  }

  /**
   * community_referral_revenue_logs updateManyAndReturn
   */
  export type community_referral_revenue_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * The data used to update community_referral_revenue_logs.
     */
    data: XOR<community_referral_revenue_logsUpdateManyMutationInput, community_referral_revenue_logsUncheckedUpdateManyInput>
    /**
     * Filter which community_referral_revenue_logs to update
     */
    where?: community_referral_revenue_logsWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_referral_revenue_logs upsert
   */
  export type community_referral_revenue_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * The filter to search for the community_referral_revenue_logs to update in case it exists.
     */
    where: community_referral_revenue_logsWhereUniqueInput
    /**
     * In case the community_referral_revenue_logs found by the `where` argument doesn't exist, create a new community_referral_revenue_logs with this data.
     */
    create: XOR<community_referral_revenue_logsCreateInput, community_referral_revenue_logsUncheckedCreateInput>
    /**
     * In case the community_referral_revenue_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_referral_revenue_logsUpdateInput, community_referral_revenue_logsUncheckedUpdateInput>
  }

  /**
   * community_referral_revenue_logs delete
   */
  export type community_referral_revenue_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    /**
     * Filter which community_referral_revenue_logs to delete.
     */
    where: community_referral_revenue_logsWhereUniqueInput
  }

  /**
   * community_referral_revenue_logs deleteMany
   */
  export type community_referral_revenue_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_referral_revenue_logs to delete
     */
    where?: community_referral_revenue_logsWhereInput
  }

  /**
   * community_referral_revenue_logs without action
   */
  export type community_referral_revenue_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
  }


  /**
   * Model community_revenue
   */

  export type AggregateCommunity_revenue = {
    _count: Community_revenueCountAggregateOutputType | null
    _avg: Community_revenueAvgAggregateOutputType | null
    _sum: Community_revenueSumAggregateOutputType | null
    _min: Community_revenueMinAggregateOutputType | null
    _max: Community_revenueMaxAggregateOutputType | null
  }

  export type Community_revenueAvgAggregateOutputType = {
    id: number | null
    community_id: number | null
    total: number | null
    proportion: number | null
    payed: number | null
  }

  export type Community_revenueSumAggregateOutputType = {
    id: number | null
    community_id: number | null
    total: number | null
    proportion: number | null
    payed: number | null
  }

  export type Community_revenueMinAggregateOutputType = {
    id: number | null
    community_id: number | null
    token: string | null
    total: number | null
    proportion: number | null
    payed: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_revenueMaxAggregateOutputType = {
    id: number | null
    community_id: number | null
    token: string | null
    total: number | null
    proportion: number | null
    payed: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_revenueCountAggregateOutputType = {
    id: number
    community_id: number
    token: number
    total: number
    proportion: number
    payed: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Community_revenueAvgAggregateInputType = {
    id?: true
    community_id?: true
    total?: true
    proportion?: true
    payed?: true
  }

  export type Community_revenueSumAggregateInputType = {
    id?: true
    community_id?: true
    total?: true
    proportion?: true
    payed?: true
  }

  export type Community_revenueMinAggregateInputType = {
    id?: true
    community_id?: true
    token?: true
    total?: true
    proportion?: true
    payed?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_revenueMaxAggregateInputType = {
    id?: true
    community_id?: true
    token?: true
    total?: true
    proportion?: true
    payed?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_revenueCountAggregateInputType = {
    id?: true
    community_id?: true
    token?: true
    total?: true
    proportion?: true
    payed?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Community_revenueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_revenue to aggregate.
     */
    where?: community_revenueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_revenues to fetch.
     */
    orderBy?: community_revenueOrderByWithRelationInput | community_revenueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_revenueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_revenues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_revenues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_revenues
    **/
    _count?: true | Community_revenueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Community_revenueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Community_revenueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_revenueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_revenueMaxAggregateInputType
  }

  export type GetCommunity_revenueAggregateType<T extends Community_revenueAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_revenue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_revenue[P]>
      : GetScalarType<T[P], AggregateCommunity_revenue[P]>
  }




  export type community_revenueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_revenueWhereInput
    orderBy?: community_revenueOrderByWithAggregationInput | community_revenueOrderByWithAggregationInput[]
    by: Community_revenueScalarFieldEnum[] | Community_revenueScalarFieldEnum
    having?: community_revenueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_revenueCountAggregateInputType | true
    _avg?: Community_revenueAvgAggregateInputType
    _sum?: Community_revenueSumAggregateInputType
    _min?: Community_revenueMinAggregateInputType
    _max?: Community_revenueMaxAggregateInputType
  }

  export type Community_revenueGroupByOutputType = {
    id: number
    community_id: number
    token: string
    total: number
    proportion: number
    payed: number
    created_at: Date
    updated_at: Date
    _count: Community_revenueCountAggregateOutputType | null
    _avg: Community_revenueAvgAggregateOutputType | null
    _sum: Community_revenueSumAggregateOutputType | null
    _min: Community_revenueMinAggregateOutputType | null
    _max: Community_revenueMaxAggregateOutputType | null
  }

  type GetCommunity_revenueGroupByPayload<T extends community_revenueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_revenueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_revenueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_revenueGroupByOutputType[P]>
            : GetScalarType<T[P], Community_revenueGroupByOutputType[P]>
        }
      >
    >


  export type community_revenueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    community_id?: boolean
    token?: boolean
    total?: boolean
    proportion?: boolean
    payed?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_referral_payed_logs?: boolean | community_revenue$community_referral_payed_logsArgs<ExtArgs>
    community_referral_revenue_logs?: boolean | community_revenue$community_referral_revenue_logsArgs<ExtArgs>
    community?: boolean | communityDefaultArgs<ExtArgs>
    _count?: boolean | Community_revenueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_revenue"]>

  export type community_revenueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    community_id?: boolean
    token?: boolean
    total?: boolean
    proportion?: boolean
    payed?: boolean
    created_at?: boolean
    updated_at?: boolean
    community?: boolean | communityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_revenue"]>

  export type community_revenueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    community_id?: boolean
    token?: boolean
    total?: boolean
    proportion?: boolean
    payed?: boolean
    created_at?: boolean
    updated_at?: boolean
    community?: boolean | communityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community_revenue"]>

  export type community_revenueSelectScalar = {
    id?: boolean
    community_id?: boolean
    token?: boolean
    total?: boolean
    proportion?: boolean
    payed?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type community_revenueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "community_id" | "token" | "total" | "proportion" | "payed" | "created_at" | "updated_at", ExtArgs["result"]["community_revenue"]>
  export type community_revenueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_referral_payed_logs?: boolean | community_revenue$community_referral_payed_logsArgs<ExtArgs>
    community_referral_revenue_logs?: boolean | community_revenue$community_referral_revenue_logsArgs<ExtArgs>
    community?: boolean | communityDefaultArgs<ExtArgs>
    _count?: boolean | Community_revenueCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type community_revenueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | communityDefaultArgs<ExtArgs>
  }
  export type community_revenueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | communityDefaultArgs<ExtArgs>
  }

  export type $community_revenuePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_revenue"
    objects: {
      community_referral_payed_logs: Prisma.$community_referral_payed_logsPayload<ExtArgs>[]
      community_referral_revenue_logs: Prisma.$community_referral_revenue_logsPayload<ExtArgs>[]
      community: Prisma.$communityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      community_id: number
      token: string
      total: number
      proportion: number
      payed: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["community_revenue"]>
    composites: {}
  }

  type community_revenueGetPayload<S extends boolean | null | undefined | community_revenueDefaultArgs> = $Result.GetResult<Prisma.$community_revenuePayload, S>

  type community_revenueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<community_revenueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Community_revenueCountAggregateInputType | true
    }

  export interface community_revenueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_revenue'], meta: { name: 'community_revenue' } }
    /**
     * Find zero or one Community_revenue that matches the filter.
     * @param {community_revenueFindUniqueArgs} args - Arguments to find a Community_revenue
     * @example
     * // Get one Community_revenue
     * const community_revenue = await prisma.community_revenue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends community_revenueFindUniqueArgs>(args: SelectSubset<T, community_revenueFindUniqueArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Community_revenue that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {community_revenueFindUniqueOrThrowArgs} args - Arguments to find a Community_revenue
     * @example
     * // Get one Community_revenue
     * const community_revenue = await prisma.community_revenue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends community_revenueFindUniqueOrThrowArgs>(args: SelectSubset<T, community_revenueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Community_revenue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_revenueFindFirstArgs} args - Arguments to find a Community_revenue
     * @example
     * // Get one Community_revenue
     * const community_revenue = await prisma.community_revenue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends community_revenueFindFirstArgs>(args?: SelectSubset<T, community_revenueFindFirstArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Community_revenue that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_revenueFindFirstOrThrowArgs} args - Arguments to find a Community_revenue
     * @example
     * // Get one Community_revenue
     * const community_revenue = await prisma.community_revenue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends community_revenueFindFirstOrThrowArgs>(args?: SelectSubset<T, community_revenueFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Community_revenues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_revenueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_revenues
     * const community_revenues = await prisma.community_revenue.findMany()
     * 
     * // Get first 10 Community_revenues
     * const community_revenues = await prisma.community_revenue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const community_revenueWithIdOnly = await prisma.community_revenue.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends community_revenueFindManyArgs>(args?: SelectSubset<T, community_revenueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Community_revenue.
     * @param {community_revenueCreateArgs} args - Arguments to create a Community_revenue.
     * @example
     * // Create one Community_revenue
     * const Community_revenue = await prisma.community_revenue.create({
     *   data: {
     *     // ... data to create a Community_revenue
     *   }
     * })
     * 
     */
    create<T extends community_revenueCreateArgs>(args: SelectSubset<T, community_revenueCreateArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Community_revenues.
     * @param {community_revenueCreateManyArgs} args - Arguments to create many Community_revenues.
     * @example
     * // Create many Community_revenues
     * const community_revenue = await prisma.community_revenue.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends community_revenueCreateManyArgs>(args?: SelectSubset<T, community_revenueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Community_revenues and returns the data saved in the database.
     * @param {community_revenueCreateManyAndReturnArgs} args - Arguments to create many Community_revenues.
     * @example
     * // Create many Community_revenues
     * const community_revenue = await prisma.community_revenue.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Community_revenues and only return the `id`
     * const community_revenueWithIdOnly = await prisma.community_revenue.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends community_revenueCreateManyAndReturnArgs>(args?: SelectSubset<T, community_revenueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Community_revenue.
     * @param {community_revenueDeleteArgs} args - Arguments to delete one Community_revenue.
     * @example
     * // Delete one Community_revenue
     * const Community_revenue = await prisma.community_revenue.delete({
     *   where: {
     *     // ... filter to delete one Community_revenue
     *   }
     * })
     * 
     */
    delete<T extends community_revenueDeleteArgs>(args: SelectSubset<T, community_revenueDeleteArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Community_revenue.
     * @param {community_revenueUpdateArgs} args - Arguments to update one Community_revenue.
     * @example
     * // Update one Community_revenue
     * const community_revenue = await prisma.community_revenue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends community_revenueUpdateArgs>(args: SelectSubset<T, community_revenueUpdateArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Community_revenues.
     * @param {community_revenueDeleteManyArgs} args - Arguments to filter Community_revenues to delete.
     * @example
     * // Delete a few Community_revenues
     * const { count } = await prisma.community_revenue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends community_revenueDeleteManyArgs>(args?: SelectSubset<T, community_revenueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_revenues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_revenueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_revenues
     * const community_revenue = await prisma.community_revenue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends community_revenueUpdateManyArgs>(args: SelectSubset<T, community_revenueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_revenues and returns the data updated in the database.
     * @param {community_revenueUpdateManyAndReturnArgs} args - Arguments to update many Community_revenues.
     * @example
     * // Update many Community_revenues
     * const community_revenue = await prisma.community_revenue.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Community_revenues and only return the `id`
     * const community_revenueWithIdOnly = await prisma.community_revenue.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends community_revenueUpdateManyAndReturnArgs>(args: SelectSubset<T, community_revenueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Community_revenue.
     * @param {community_revenueUpsertArgs} args - Arguments to update or create a Community_revenue.
     * @example
     * // Update or create a Community_revenue
     * const community_revenue = await prisma.community_revenue.upsert({
     *   create: {
     *     // ... data to create a Community_revenue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_revenue we want to update
     *   }
     * })
     */
    upsert<T extends community_revenueUpsertArgs>(args: SelectSubset<T, community_revenueUpsertArgs<ExtArgs>>): Prisma__community_revenueClient<$Result.GetResult<Prisma.$community_revenuePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Community_revenues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_revenueCountArgs} args - Arguments to filter Community_revenues to count.
     * @example
     * // Count the number of Community_revenues
     * const count = await prisma.community_revenue.count({
     *   where: {
     *     // ... the filter for the Community_revenues we want to count
     *   }
     * })
    **/
    count<T extends community_revenueCountArgs>(
      args?: Subset<T, community_revenueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_revenueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_revenue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_revenueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_revenueAggregateArgs>(args: Subset<T, Community_revenueAggregateArgs>): Prisma.PrismaPromise<GetCommunity_revenueAggregateType<T>>

    /**
     * Group by Community_revenue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_revenueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_revenueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_revenueGroupByArgs['orderBy'] }
        : { orderBy?: community_revenueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_revenueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_revenueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_revenue model
   */
  readonly fields: community_revenueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_revenue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_revenueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community_referral_payed_logs<T extends community_revenue$community_referral_payed_logsArgs<ExtArgs> = {}>(args?: Subset<T, community_revenue$community_referral_payed_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_payed_logsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    community_referral_revenue_logs<T extends community_revenue$community_referral_revenue_logsArgs<ExtArgs> = {}>(args?: Subset<T, community_revenue$community_referral_revenue_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_referral_revenue_logsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    community<T extends communityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, communityDefaultArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community_revenue model
   */ 
  interface community_revenueFieldRefs {
    readonly id: FieldRef<"community_revenue", 'Int'>
    readonly community_id: FieldRef<"community_revenue", 'Int'>
    readonly token: FieldRef<"community_revenue", 'String'>
    readonly total: FieldRef<"community_revenue", 'Float'>
    readonly proportion: FieldRef<"community_revenue", 'Float'>
    readonly payed: FieldRef<"community_revenue", 'Float'>
    readonly created_at: FieldRef<"community_revenue", 'DateTime'>
    readonly updated_at: FieldRef<"community_revenue", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_revenue findUnique
   */
  export type community_revenueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * Filter, which community_revenue to fetch.
     */
    where: community_revenueWhereUniqueInput
  }

  /**
   * community_revenue findUniqueOrThrow
   */
  export type community_revenueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * Filter, which community_revenue to fetch.
     */
    where: community_revenueWhereUniqueInput
  }

  /**
   * community_revenue findFirst
   */
  export type community_revenueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * Filter, which community_revenue to fetch.
     */
    where?: community_revenueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_revenues to fetch.
     */
    orderBy?: community_revenueOrderByWithRelationInput | community_revenueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_revenues.
     */
    cursor?: community_revenueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_revenues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_revenues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_revenues.
     */
    distinct?: Community_revenueScalarFieldEnum | Community_revenueScalarFieldEnum[]
  }

  /**
   * community_revenue findFirstOrThrow
   */
  export type community_revenueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * Filter, which community_revenue to fetch.
     */
    where?: community_revenueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_revenues to fetch.
     */
    orderBy?: community_revenueOrderByWithRelationInput | community_revenueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_revenues.
     */
    cursor?: community_revenueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_revenues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_revenues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_revenues.
     */
    distinct?: Community_revenueScalarFieldEnum | Community_revenueScalarFieldEnum[]
  }

  /**
   * community_revenue findMany
   */
  export type community_revenueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * Filter, which community_revenues to fetch.
     */
    where?: community_revenueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_revenues to fetch.
     */
    orderBy?: community_revenueOrderByWithRelationInput | community_revenueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_revenues.
     */
    cursor?: community_revenueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_revenues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_revenues.
     */
    skip?: number
    distinct?: Community_revenueScalarFieldEnum | Community_revenueScalarFieldEnum[]
  }

  /**
   * community_revenue create
   */
  export type community_revenueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * The data needed to create a community_revenue.
     */
    data: XOR<community_revenueCreateInput, community_revenueUncheckedCreateInput>
  }

  /**
   * community_revenue createMany
   */
  export type community_revenueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_revenues.
     */
    data: community_revenueCreateManyInput | community_revenueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_revenue createManyAndReturn
   */
  export type community_revenueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * The data used to create many community_revenues.
     */
    data: community_revenueCreateManyInput | community_revenueCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_revenue update
   */
  export type community_revenueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * The data needed to update a community_revenue.
     */
    data: XOR<community_revenueUpdateInput, community_revenueUncheckedUpdateInput>
    /**
     * Choose, which community_revenue to update.
     */
    where: community_revenueWhereUniqueInput
  }

  /**
   * community_revenue updateMany
   */
  export type community_revenueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_revenues.
     */
    data: XOR<community_revenueUpdateManyMutationInput, community_revenueUncheckedUpdateManyInput>
    /**
     * Filter which community_revenues to update
     */
    where?: community_revenueWhereInput
  }

  /**
   * community_revenue updateManyAndReturn
   */
  export type community_revenueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * The data used to update community_revenues.
     */
    data: XOR<community_revenueUpdateManyMutationInput, community_revenueUncheckedUpdateManyInput>
    /**
     * Filter which community_revenues to update
     */
    where?: community_revenueWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * community_revenue upsert
   */
  export type community_revenueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * The filter to search for the community_revenue to update in case it exists.
     */
    where: community_revenueWhereUniqueInput
    /**
     * In case the community_revenue found by the `where` argument doesn't exist, create a new community_revenue with this data.
     */
    create: XOR<community_revenueCreateInput, community_revenueUncheckedCreateInput>
    /**
     * In case the community_revenue was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_revenueUpdateInput, community_revenueUncheckedUpdateInput>
  }

  /**
   * community_revenue delete
   */
  export type community_revenueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
    /**
     * Filter which community_revenue to delete.
     */
    where: community_revenueWhereUniqueInput
  }

  /**
   * community_revenue deleteMany
   */
  export type community_revenueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_revenues to delete
     */
    where?: community_revenueWhereInput
  }

  /**
   * community_revenue.community_referral_payed_logs
   */
  export type community_revenue$community_referral_payed_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_payed_logs
     */
    select?: community_referral_payed_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_payed_logs
     */
    omit?: community_referral_payed_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_payed_logsInclude<ExtArgs> | null
    where?: community_referral_payed_logsWhereInput
    orderBy?: community_referral_payed_logsOrderByWithRelationInput | community_referral_payed_logsOrderByWithRelationInput[]
    cursor?: community_referral_payed_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_referral_payed_logsScalarFieldEnum | Community_referral_payed_logsScalarFieldEnum[]
  }

  /**
   * community_revenue.community_referral_revenue_logs
   */
  export type community_revenue$community_referral_revenue_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_referral_revenue_logs
     */
    select?: community_referral_revenue_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_referral_revenue_logs
     */
    omit?: community_referral_revenue_logsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_referral_revenue_logsInclude<ExtArgs> | null
    where?: community_referral_revenue_logsWhereInput
    orderBy?: community_referral_revenue_logsOrderByWithRelationInput | community_referral_revenue_logsOrderByWithRelationInput[]
    cursor?: community_referral_revenue_logsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_referral_revenue_logsScalarFieldEnum | Community_referral_revenue_logsScalarFieldEnum[]
  }

  /**
   * community_revenue without action
   */
  export type community_revenueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_revenue
     */
    select?: community_revenueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the community_revenue
     */
    omit?: community_revenueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_revenueInclude<ExtArgs> | null
  }


  /**
   * Model rag_tokens
   */

  export type AggregateRag_tokens = {
    _count: Rag_tokensCountAggregateOutputType | null
    _avg: Rag_tokensAvgAggregateOutputType | null
    _sum: Rag_tokensSumAggregateOutputType | null
    _min: Rag_tokensMinAggregateOutputType | null
    _max: Rag_tokensMaxAggregateOutputType | null
  }

  export type Rag_tokensAvgAggregateOutputType = {
    id: number | null
  }

  export type Rag_tokensSumAggregateOutputType = {
    id: number | null
  }

  export type Rag_tokensMinAggregateOutputType = {
    id: number | null
    token_address: string | null
    token_symbol: string | null
    created_at: Date | null
    updated_at: Date | null
    network: string | null
  }

  export type Rag_tokensMaxAggregateOutputType = {
    id: number | null
    token_address: string | null
    token_symbol: string | null
    created_at: Date | null
    updated_at: Date | null
    network: string | null
  }

  export type Rag_tokensCountAggregateOutputType = {
    id: number
    token_address: number
    token_symbol: number
    created_at: number
    updated_at: number
    network: number
    _all: number
  }


  export type Rag_tokensAvgAggregateInputType = {
    id?: true
  }

  export type Rag_tokensSumAggregateInputType = {
    id?: true
  }

  export type Rag_tokensMinAggregateInputType = {
    id?: true
    token_address?: true
    token_symbol?: true
    created_at?: true
    updated_at?: true
    network?: true
  }

  export type Rag_tokensMaxAggregateInputType = {
    id?: true
    token_address?: true
    token_symbol?: true
    created_at?: true
    updated_at?: true
    network?: true
  }

  export type Rag_tokensCountAggregateInputType = {
    id?: true
    token_address?: true
    token_symbol?: true
    created_at?: true
    updated_at?: true
    network?: true
    _all?: true
  }

  export type Rag_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rag_tokens to aggregate.
     */
    where?: rag_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rag_tokens to fetch.
     */
    orderBy?: rag_tokensOrderByWithRelationInput | rag_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rag_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rag_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rag_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rag_tokens
    **/
    _count?: true | Rag_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Rag_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Rag_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Rag_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Rag_tokensMaxAggregateInputType
  }

  export type GetRag_tokensAggregateType<T extends Rag_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateRag_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRag_tokens[P]>
      : GetScalarType<T[P], AggregateRag_tokens[P]>
  }




  export type rag_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rag_tokensWhereInput
    orderBy?: rag_tokensOrderByWithAggregationInput | rag_tokensOrderByWithAggregationInput[]
    by: Rag_tokensScalarFieldEnum[] | Rag_tokensScalarFieldEnum
    having?: rag_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Rag_tokensCountAggregateInputType | true
    _avg?: Rag_tokensAvgAggregateInputType
    _sum?: Rag_tokensSumAggregateInputType
    _min?: Rag_tokensMinAggregateInputType
    _max?: Rag_tokensMaxAggregateInputType
  }

  export type Rag_tokensGroupByOutputType = {
    id: number
    token_address: string
    token_symbol: string
    created_at: Date
    updated_at: Date
    network: string
    _count: Rag_tokensCountAggregateOutputType | null
    _avg: Rag_tokensAvgAggregateOutputType | null
    _sum: Rag_tokensSumAggregateOutputType | null
    _min: Rag_tokensMinAggregateOutputType | null
    _max: Rag_tokensMaxAggregateOutputType | null
  }

  type GetRag_tokensGroupByPayload<T extends rag_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Rag_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Rag_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Rag_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Rag_tokensGroupByOutputType[P]>
        }
      >
    >


  export type rag_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    token_symbol?: boolean
    created_at?: boolean
    updated_at?: boolean
    network?: boolean
  }, ExtArgs["result"]["rag_tokens"]>

  export type rag_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    token_symbol?: boolean
    created_at?: boolean
    updated_at?: boolean
    network?: boolean
  }, ExtArgs["result"]["rag_tokens"]>

  export type rag_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token_address?: boolean
    token_symbol?: boolean
    created_at?: boolean
    updated_at?: boolean
    network?: boolean
  }, ExtArgs["result"]["rag_tokens"]>

  export type rag_tokensSelectScalar = {
    id?: boolean
    token_address?: boolean
    token_symbol?: boolean
    created_at?: boolean
    updated_at?: boolean
    network?: boolean
  }

  export type rag_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token_address" | "token_symbol" | "created_at" | "updated_at" | "network", ExtArgs["result"]["rag_tokens"]>

  export type $rag_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "rag_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token_address: string
      token_symbol: string
      created_at: Date
      updated_at: Date
      network: string
    }, ExtArgs["result"]["rag_tokens"]>
    composites: {}
  }

  type rag_tokensGetPayload<S extends boolean | null | undefined | rag_tokensDefaultArgs> = $Result.GetResult<Prisma.$rag_tokensPayload, S>

  type rag_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rag_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Rag_tokensCountAggregateInputType | true
    }

  export interface rag_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['rag_tokens'], meta: { name: 'rag_tokens' } }
    /**
     * Find zero or one Rag_tokens that matches the filter.
     * @param {rag_tokensFindUniqueArgs} args - Arguments to find a Rag_tokens
     * @example
     * // Get one Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rag_tokensFindUniqueArgs>(args: SelectSubset<T, rag_tokensFindUniqueArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Rag_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rag_tokensFindUniqueOrThrowArgs} args - Arguments to find a Rag_tokens
     * @example
     * // Get one Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rag_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, rag_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Rag_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rag_tokensFindFirstArgs} args - Arguments to find a Rag_tokens
     * @example
     * // Get one Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rag_tokensFindFirstArgs>(args?: SelectSubset<T, rag_tokensFindFirstArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Rag_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rag_tokensFindFirstOrThrowArgs} args - Arguments to find a Rag_tokens
     * @example
     * // Get one Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rag_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, rag_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Rag_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rag_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.findMany()
     * 
     * // Get first 10 Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rag_tokensWithIdOnly = await prisma.rag_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rag_tokensFindManyArgs>(args?: SelectSubset<T, rag_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Rag_tokens.
     * @param {rag_tokensCreateArgs} args - Arguments to create a Rag_tokens.
     * @example
     * // Create one Rag_tokens
     * const Rag_tokens = await prisma.rag_tokens.create({
     *   data: {
     *     // ... data to create a Rag_tokens
     *   }
     * })
     * 
     */
    create<T extends rag_tokensCreateArgs>(args: SelectSubset<T, rag_tokensCreateArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Rag_tokens.
     * @param {rag_tokensCreateManyArgs} args - Arguments to create many Rag_tokens.
     * @example
     * // Create many Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rag_tokensCreateManyArgs>(args?: SelectSubset<T, rag_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rag_tokens and returns the data saved in the database.
     * @param {rag_tokensCreateManyAndReturnArgs} args - Arguments to create many Rag_tokens.
     * @example
     * // Create many Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rag_tokens and only return the `id`
     * const rag_tokensWithIdOnly = await prisma.rag_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rag_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, rag_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Rag_tokens.
     * @param {rag_tokensDeleteArgs} args - Arguments to delete one Rag_tokens.
     * @example
     * // Delete one Rag_tokens
     * const Rag_tokens = await prisma.rag_tokens.delete({
     *   where: {
     *     // ... filter to delete one Rag_tokens
     *   }
     * })
     * 
     */
    delete<T extends rag_tokensDeleteArgs>(args: SelectSubset<T, rag_tokensDeleteArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Rag_tokens.
     * @param {rag_tokensUpdateArgs} args - Arguments to update one Rag_tokens.
     * @example
     * // Update one Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rag_tokensUpdateArgs>(args: SelectSubset<T, rag_tokensUpdateArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Rag_tokens.
     * @param {rag_tokensDeleteManyArgs} args - Arguments to filter Rag_tokens to delete.
     * @example
     * // Delete a few Rag_tokens
     * const { count } = await prisma.rag_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rag_tokensDeleteManyArgs>(args?: SelectSubset<T, rag_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rag_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rag_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rag_tokensUpdateManyArgs>(args: SelectSubset<T, rag_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rag_tokens and returns the data updated in the database.
     * @param {rag_tokensUpdateManyAndReturnArgs} args - Arguments to update many Rag_tokens.
     * @example
     * // Update many Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rag_tokens and only return the `id`
     * const rag_tokensWithIdOnly = await prisma.rag_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rag_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, rag_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Rag_tokens.
     * @param {rag_tokensUpsertArgs} args - Arguments to update or create a Rag_tokens.
     * @example
     * // Update or create a Rag_tokens
     * const rag_tokens = await prisma.rag_tokens.upsert({
     *   create: {
     *     // ... data to create a Rag_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rag_tokens we want to update
     *   }
     * })
     */
    upsert<T extends rag_tokensUpsertArgs>(args: SelectSubset<T, rag_tokensUpsertArgs<ExtArgs>>): Prisma__rag_tokensClient<$Result.GetResult<Prisma.$rag_tokensPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Rag_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rag_tokensCountArgs} args - Arguments to filter Rag_tokens to count.
     * @example
     * // Count the number of Rag_tokens
     * const count = await prisma.rag_tokens.count({
     *   where: {
     *     // ... the filter for the Rag_tokens we want to count
     *   }
     * })
    **/
    count<T extends rag_tokensCountArgs>(
      args?: Subset<T, rag_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Rag_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rag_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Rag_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Rag_tokensAggregateArgs>(args: Subset<T, Rag_tokensAggregateArgs>): Prisma.PrismaPromise<GetRag_tokensAggregateType<T>>

    /**
     * Group by Rag_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rag_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rag_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rag_tokensGroupByArgs['orderBy'] }
        : { orderBy?: rag_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rag_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRag_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the rag_tokens model
   */
  readonly fields: rag_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for rag_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rag_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the rag_tokens model
   */ 
  interface rag_tokensFieldRefs {
    readonly id: FieldRef<"rag_tokens", 'Int'>
    readonly token_address: FieldRef<"rag_tokens", 'String'>
    readonly token_symbol: FieldRef<"rag_tokens", 'String'>
    readonly created_at: FieldRef<"rag_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"rag_tokens", 'DateTime'>
    readonly network: FieldRef<"rag_tokens", 'String'>
  }
    

  // Custom InputTypes
  /**
   * rag_tokens findUnique
   */
  export type rag_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * Filter, which rag_tokens to fetch.
     */
    where: rag_tokensWhereUniqueInput
  }

  /**
   * rag_tokens findUniqueOrThrow
   */
  export type rag_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * Filter, which rag_tokens to fetch.
     */
    where: rag_tokensWhereUniqueInput
  }

  /**
   * rag_tokens findFirst
   */
  export type rag_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * Filter, which rag_tokens to fetch.
     */
    where?: rag_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rag_tokens to fetch.
     */
    orderBy?: rag_tokensOrderByWithRelationInput | rag_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rag_tokens.
     */
    cursor?: rag_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rag_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rag_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rag_tokens.
     */
    distinct?: Rag_tokensScalarFieldEnum | Rag_tokensScalarFieldEnum[]
  }

  /**
   * rag_tokens findFirstOrThrow
   */
  export type rag_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * Filter, which rag_tokens to fetch.
     */
    where?: rag_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rag_tokens to fetch.
     */
    orderBy?: rag_tokensOrderByWithRelationInput | rag_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rag_tokens.
     */
    cursor?: rag_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rag_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rag_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rag_tokens.
     */
    distinct?: Rag_tokensScalarFieldEnum | Rag_tokensScalarFieldEnum[]
  }

  /**
   * rag_tokens findMany
   */
  export type rag_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * Filter, which rag_tokens to fetch.
     */
    where?: rag_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rag_tokens to fetch.
     */
    orderBy?: rag_tokensOrderByWithRelationInput | rag_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rag_tokens.
     */
    cursor?: rag_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rag_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rag_tokens.
     */
    skip?: number
    distinct?: Rag_tokensScalarFieldEnum | Rag_tokensScalarFieldEnum[]
  }

  /**
   * rag_tokens create
   */
  export type rag_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * The data needed to create a rag_tokens.
     */
    data: XOR<rag_tokensCreateInput, rag_tokensUncheckedCreateInput>
  }

  /**
   * rag_tokens createMany
   */
  export type rag_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many rag_tokens.
     */
    data: rag_tokensCreateManyInput | rag_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rag_tokens createManyAndReturn
   */
  export type rag_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many rag_tokens.
     */
    data: rag_tokensCreateManyInput | rag_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rag_tokens update
   */
  export type rag_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * The data needed to update a rag_tokens.
     */
    data: XOR<rag_tokensUpdateInput, rag_tokensUncheckedUpdateInput>
    /**
     * Choose, which rag_tokens to update.
     */
    where: rag_tokensWhereUniqueInput
  }

  /**
   * rag_tokens updateMany
   */
  export type rag_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update rag_tokens.
     */
    data: XOR<rag_tokensUpdateManyMutationInput, rag_tokensUncheckedUpdateManyInput>
    /**
     * Filter which rag_tokens to update
     */
    where?: rag_tokensWhereInput
  }

  /**
   * rag_tokens updateManyAndReturn
   */
  export type rag_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * The data used to update rag_tokens.
     */
    data: XOR<rag_tokensUpdateManyMutationInput, rag_tokensUncheckedUpdateManyInput>
    /**
     * Filter which rag_tokens to update
     */
    where?: rag_tokensWhereInput
  }

  /**
   * rag_tokens upsert
   */
  export type rag_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * The filter to search for the rag_tokens to update in case it exists.
     */
    where: rag_tokensWhereUniqueInput
    /**
     * In case the rag_tokens found by the `where` argument doesn't exist, create a new rag_tokens with this data.
     */
    create: XOR<rag_tokensCreateInput, rag_tokensUncheckedCreateInput>
    /**
     * In case the rag_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rag_tokensUpdateInput, rag_tokensUncheckedUpdateInput>
  }

  /**
   * rag_tokens delete
   */
  export type rag_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
    /**
     * Filter which rag_tokens to delete.
     */
    where: rag_tokensWhereUniqueInput
  }

  /**
   * rag_tokens deleteMany
   */
  export type rag_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rag_tokens to delete
     */
    where?: rag_tokensWhereInput
  }

  /**
   * rag_tokens without action
   */
  export type rag_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rag_tokens
     */
    select?: rag_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rag_tokens
     */
    omit?: rag_tokensOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TokensScalarFieldEnum: {
    id: 'id',
    address: 'address',
    symbol: 'symbol',
    name: 'name',
    decimals: 'decimals',
    metadata: 'metadata',
    network: 'network',
    token_created_at: 'token_created_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    social_links: 'social_links',
    tweet_analyze: 'tweet_analyze',
    pumpfun: 'pumpfun',
    profile: 'profile',
    headline: 'headline',
    officials: 'officials',
    from_pumpfun_listening: 'from_pumpfun_listening',
    completed_time: 'completed_time',
    analysis: 'analysis',
    related_accounts: 'related_accounts'
  };

  export type TokensScalarFieldEnum = (typeof TokensScalarFieldEnum)[keyof typeof TokensScalarFieldEnum]


  export const Privy_userScalarFieldEnum: {
    id: 'id',
    did: 'did',
    created_at: 'created_at',
    updated_at: 'updated_at',
    email: 'email',
    pro: 'pro',
    exp: 'exp',
    invite_code: 'invite_code',
    invite_code_bind_at: 'invite_code_bind_at',
    referral: 'referral'
  };

  export type Privy_userScalarFieldEnum = (typeof Privy_userScalarFieldEnum)[keyof typeof Privy_userScalarFieldEnum]


  export const Ai_analyzeScalarFieldEnum: {
    id: 'id',
    token_address: 'token_address',
    analyze_en: 'analyze_en',
    analyze_zh: 'analyze_zh',
    tweets: 'tweets',
    network: 'network',
    created_at: 'created_at',
    updated_at: 'updated_at',
    symbol: 'symbol',
    search_tweets: 'search_tweets',
    ai_resp: 'ai_resp',
    template: 'template',
    type: 'type',
    version: 'version'
  };

  export type Ai_analyzeScalarFieldEnum = (typeof Ai_analyzeScalarFieldEnum)[keyof typeof Ai_analyzeScalarFieldEnum]


  export const Ruler_tweetsScalarFieldEnum: {
    id: 'id',
    token_address: 'token_address',
    symbol: 'symbol',
    network: 'network',
    tweet_id: 'tweet_id',
    tweet_time: 'tweet_time',
    author: 'author',
    content: 'content',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Ruler_tweetsScalarFieldEnum = (typeof Ruler_tweetsScalarFieldEnum)[keyof typeof Ruler_tweetsScalarFieldEnum]


  export const Token_interactScalarFieldEnum: {
    id: 'id',
    token_address: 'token_address',
    network: 'network',
    liker: 'liker',
    disliker: 'disliker',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Token_interactScalarFieldEnum = (typeof Token_interactScalarFieldEnum)[keyof typeof Token_interactScalarFieldEnum]


  export const Pro_logsScalarFieldEnum: {
    id: 'id',
    did: 'did',
    signature: 'signature',
    level: 'level',
    renewal: 'renewal',
    created_at: 'created_at',
    updated_at: 'updated_at',
    email: 'email'
  };

  export type Pro_logsScalarFieldEnum = (typeof Pro_logsScalarFieldEnum)[keyof typeof Pro_logsScalarFieldEnum]


  export const TweetsScalarFieldEnum: {
    id: 'id',
    token_address: 'token_address',
    symbol: 'symbol',
    network: 'network',
    tweet_id: 'tweet_id',
    user_id: 'user_id',
    text: 'text',
    medias: 'medias',
    is_self_send: 'is_self_send',
    is_retweet: 'is_retweet',
    is_quote: 'is_quote',
    is_reply: 'is_reply',
    is_like: 'is_like',
    related_tweet_id: 'related_tweet_id',
    related_user_id: 'related_user_id',
    favorite_count: 'favorite_count',
    quote_count: 'quote_count',
    reply_count: 'reply_count',
    retweet_count: 'retweet_count',
    author: 'author',
    user: 'user',
    created_at: 'created_at',
    updated_at: 'updated_at',
    created_time: 'created_time',
    link: 'link',
    media_type: 'media_type',
    token_image: 'token_image',
    related_tweets: 'related_tweets',
    views: 'views',
    is_official: 'is_official',
    text_zh: 'text_zh'
  };

  export type TweetsScalarFieldEnum = (typeof TweetsScalarFieldEnum)[keyof typeof TweetsScalarFieldEnum]


  export const Filter_rulersScalarFieldEnum: {
    id: 'id',
    type: 'type',
    list: 'list',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Filter_rulersScalarFieldEnum = (typeof Filter_rulersScalarFieldEnum)[keyof typeof Filter_rulersScalarFieldEnum]


  export const Tweet_latest_idScalarFieldEnum: {
    id: 'id',
    tweet_id: 'tweet_id',
    created_time: 'created_time',
    token_address: 'token_address',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Tweet_latest_idScalarFieldEnum = (typeof Tweet_latest_idScalarFieldEnum)[keyof typeof Tweet_latest_idScalarFieldEnum]


  export const Reference_tokensScalarFieldEnum: {
    id: 'id',
    address: 'address',
    symbol: 'symbol',
    name: 'name',
    decimals: 'decimals',
    metadata: 'metadata',
    network: 'network',
    token_created_at: 'token_created_at',
    social_links: 'social_links',
    tweet_analyze: 'tweet_analyze',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Reference_tokensScalarFieldEnum = (typeof Reference_tokensScalarFieldEnum)[keyof typeof Reference_tokensScalarFieldEnum]


  export const Invite_codeScalarFieldEnum: {
    id: 'id',
    code: 'code',
    user_did: 'user_did',
    created_at: 'created_at',
    updated_at: 'updated_at',
    user_email: 'user_email',
    pending: 'pending'
  };

  export type Invite_codeScalarFieldEnum = (typeof Invite_codeScalarFieldEnum)[keyof typeof Invite_codeScalarFieldEnum]


  export const Pro_configScalarFieldEnum: {
    id: 'id',
    config: 'config',
    created_at: 'created_at'
  };

  export type Pro_configScalarFieldEnum = (typeof Pro_configScalarFieldEnum)[keyof typeof Pro_configScalarFieldEnum]


  export const User_service_call_logsScalarFieldEnum: {
    id: 'id',
    did: 'did',
    call_date: 'call_date',
    call_count: 'call_count',
    service: 'service',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type User_service_call_logsScalarFieldEnum = (typeof User_service_call_logsScalarFieldEnum)[keyof typeof User_service_call_logsScalarFieldEnum]


  export const Invite_code_bind_logsScalarFieldEnum: {
    id: 'id',
    code: 'code',
    email: 'email',
    signature: 'signature',
    did: 'did',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Invite_code_bind_logsScalarFieldEnum = (typeof Invite_code_bind_logsScalarFieldEnum)[keyof typeof Invite_code_bind_logsScalarFieldEnum]


  export const WatchlistScalarFieldEnum: {
    id: 'id',
    did: 'did',
    token_address: 'token_address',
    token_symbol: 'token_symbol',
    url: 'url',
    network: 'network',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type WatchlistScalarFieldEnum = (typeof WatchlistScalarFieldEnum)[keyof typeof WatchlistScalarFieldEnum]


  export const Click_logsScalarFieldEnum: {
    id: 'id',
    did: 'did',
    type: 'type',
    content: 'content',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Click_logsScalarFieldEnum = (typeof Click_logsScalarFieldEnum)[keyof typeof Click_logsScalarFieldEnum]


  export const Smart_walletsScalarFieldEnum: {
    id: 'id',
    address: 'address',
    twitter_handle: 'twitter_handle',
    account_info: 'account_info',
    network: 'network',
    created_at: 'created_at',
    updated_at: 'updated_at',
    alias: 'alias'
  };

  export type Smart_walletsScalarFieldEnum = (typeof Smart_walletsScalarFieldEnum)[keyof typeof Smart_walletsScalarFieldEnum]


  export const CommunityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    contact: 'contact',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CommunityScalarFieldEnum = (typeof CommunityScalarFieldEnum)[keyof typeof CommunityScalarFieldEnum]


  export const Community_referralScalarFieldEnum: {
    id: 'id',
    expiration_date: 'expiration_date',
    state: 'state',
    code: 'code',
    community_id: 'community_id',
    proportion: 'proportion',
    sol_address: 'sol_address',
    eth_address: 'eth_address',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Community_referralScalarFieldEnum = (typeof Community_referralScalarFieldEnum)[keyof typeof Community_referralScalarFieldEnum]


  export const Community_referral_payed_logsScalarFieldEnum: {
    id: 'id',
    ref_revenue: 'ref_revenue',
    token: 'token',
    type: 'type',
    amount: 'amount',
    signature: 'signature',
    network: 'network',
    payee_address: 'payee_address',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Community_referral_payed_logsScalarFieldEnum = (typeof Community_referral_payed_logsScalarFieldEnum)[keyof typeof Community_referral_payed_logsScalarFieldEnum]


  export const Community_referral_revenue_logsScalarFieldEnum: {
    id: 'id',
    user: 'user',
    amount: 'amount',
    token: 'token',
    type: 'type',
    ref_code: 'ref_code',
    proportion: 'proportion',
    signature: 'signature',
    network: 'network',
    ref_revenue: 'ref_revenue',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Community_referral_revenue_logsScalarFieldEnum = (typeof Community_referral_revenue_logsScalarFieldEnum)[keyof typeof Community_referral_revenue_logsScalarFieldEnum]


  export const Community_revenueScalarFieldEnum: {
    id: 'id',
    community_id: 'community_id',
    token: 'token',
    total: 'total',
    proportion: 'proportion',
    payed: 'payed',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Community_revenueScalarFieldEnum = (typeof Community_revenueScalarFieldEnum)[keyof typeof Community_revenueScalarFieldEnum]


  export const Rag_tokensScalarFieldEnum: {
    id: 'id',
    token_address: 'token_address',
    token_symbol: 'token_symbol',
    created_at: 'created_at',
    updated_at: 'updated_at',
    network: 'network'
  };

  export type Rag_tokensScalarFieldEnum = (typeof Rag_tokensScalarFieldEnum)[keyof typeof Rag_tokensScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type tokensWhereInput = {
    AND?: tokensWhereInput | tokensWhereInput[]
    OR?: tokensWhereInput[]
    NOT?: tokensWhereInput | tokensWhereInput[]
    id?: IntFilter<"tokens"> | number
    address?: StringFilter<"tokens"> | string
    symbol?: StringFilter<"tokens"> | string
    name?: StringFilter<"tokens"> | string
    decimals?: IntFilter<"tokens"> | number
    metadata?: JsonFilter<"tokens">
    network?: StringFilter<"tokens"> | string
    token_created_at?: IntFilter<"tokens"> | number
    created_at?: DateTimeFilter<"tokens"> | Date | string
    updated_at?: DateTimeFilter<"tokens"> | Date | string
    social_links?: JsonFilter<"tokens">
    tweet_analyze?: StringFilter<"tokens"> | string
    pumpfun?: JsonNullableFilter<"tokens">
    profile?: JsonNullableFilter<"tokens">
    headline?: StringFilter<"tokens"> | string
    officials?: StringNullableListFilter<"tokens">
    from_pumpfun_listening?: BoolFilter<"tokens"> | boolean
    completed_time?: IntFilter<"tokens"> | number
    analysis?: JsonNullableFilter<"tokens">
    related_accounts?: JsonNullableFilter<"tokens">
  }

  export type tokensOrderByWithRelationInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    metadata?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    social_links?: SortOrder
    tweet_analyze?: SortOrder
    pumpfun?: SortOrderInput | SortOrder
    profile?: SortOrderInput | SortOrder
    headline?: SortOrder
    officials?: SortOrder
    from_pumpfun_listening?: SortOrder
    completed_time?: SortOrder
    analysis?: SortOrderInput | SortOrder
    related_accounts?: SortOrderInput | SortOrder
  }

  export type tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    address?: string
    AND?: tokensWhereInput | tokensWhereInput[]
    OR?: tokensWhereInput[]
    NOT?: tokensWhereInput | tokensWhereInput[]
    symbol?: StringFilter<"tokens"> | string
    name?: StringFilter<"tokens"> | string
    decimals?: IntFilter<"tokens"> | number
    metadata?: JsonFilter<"tokens">
    network?: StringFilter<"tokens"> | string
    token_created_at?: IntFilter<"tokens"> | number
    created_at?: DateTimeFilter<"tokens"> | Date | string
    updated_at?: DateTimeFilter<"tokens"> | Date | string
    social_links?: JsonFilter<"tokens">
    tweet_analyze?: StringFilter<"tokens"> | string
    pumpfun?: JsonNullableFilter<"tokens">
    profile?: JsonNullableFilter<"tokens">
    headline?: StringFilter<"tokens"> | string
    officials?: StringNullableListFilter<"tokens">
    from_pumpfun_listening?: BoolFilter<"tokens"> | boolean
    completed_time?: IntFilter<"tokens"> | number
    analysis?: JsonNullableFilter<"tokens">
    related_accounts?: JsonNullableFilter<"tokens">
  }, "id" | "id" | "address">

  export type tokensOrderByWithAggregationInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    metadata?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    social_links?: SortOrder
    tweet_analyze?: SortOrder
    pumpfun?: SortOrderInput | SortOrder
    profile?: SortOrderInput | SortOrder
    headline?: SortOrder
    officials?: SortOrder
    from_pumpfun_listening?: SortOrder
    completed_time?: SortOrder
    analysis?: SortOrderInput | SortOrder
    related_accounts?: SortOrderInput | SortOrder
    _count?: tokensCountOrderByAggregateInput
    _avg?: tokensAvgOrderByAggregateInput
    _max?: tokensMaxOrderByAggregateInput
    _min?: tokensMinOrderByAggregateInput
    _sum?: tokensSumOrderByAggregateInput
  }

  export type tokensScalarWhereWithAggregatesInput = {
    AND?: tokensScalarWhereWithAggregatesInput | tokensScalarWhereWithAggregatesInput[]
    OR?: tokensScalarWhereWithAggregatesInput[]
    NOT?: tokensScalarWhereWithAggregatesInput | tokensScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tokens"> | number
    address?: StringWithAggregatesFilter<"tokens"> | string
    symbol?: StringWithAggregatesFilter<"tokens"> | string
    name?: StringWithAggregatesFilter<"tokens"> | string
    decimals?: IntWithAggregatesFilter<"tokens"> | number
    metadata?: JsonWithAggregatesFilter<"tokens">
    network?: StringWithAggregatesFilter<"tokens"> | string
    token_created_at?: IntWithAggregatesFilter<"tokens"> | number
    created_at?: DateTimeWithAggregatesFilter<"tokens"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"tokens"> | Date | string
    social_links?: JsonWithAggregatesFilter<"tokens">
    tweet_analyze?: StringWithAggregatesFilter<"tokens"> | string
    pumpfun?: JsonNullableWithAggregatesFilter<"tokens">
    profile?: JsonNullableWithAggregatesFilter<"tokens">
    headline?: StringWithAggregatesFilter<"tokens"> | string
    officials?: StringNullableListFilter<"tokens">
    from_pumpfun_listening?: BoolWithAggregatesFilter<"tokens"> | boolean
    completed_time?: IntWithAggregatesFilter<"tokens"> | number
    analysis?: JsonNullableWithAggregatesFilter<"tokens">
    related_accounts?: JsonNullableWithAggregatesFilter<"tokens">
  }

  export type privy_userWhereInput = {
    AND?: privy_userWhereInput | privy_userWhereInput[]
    OR?: privy_userWhereInput[]
    NOT?: privy_userWhereInput | privy_userWhereInput[]
    id?: IntFilter<"privy_user"> | number
    did?: StringFilter<"privy_user"> | string
    created_at?: DateTimeFilter<"privy_user"> | Date | string
    updated_at?: DateTimeFilter<"privy_user"> | Date | string
    email?: StringFilter<"privy_user"> | string
    pro?: IntFilter<"privy_user"> | number
    exp?: IntFilter<"privy_user"> | number
    invite_code?: StringNullableFilter<"privy_user"> | string | null
    invite_code_bind_at?: IntNullableFilter<"privy_user"> | number | null
    referral?: StringNullableFilter<"privy_user"> | string | null
    pro_config?: XOR<Pro_configScalarRelationFilter, pro_configWhereInput>
  }

  export type privy_userOrderByWithRelationInput = {
    id?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code?: SortOrderInput | SortOrder
    invite_code_bind_at?: SortOrderInput | SortOrder
    referral?: SortOrderInput | SortOrder
    pro_config?: pro_configOrderByWithRelationInput
  }

  export type privy_userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    did?: string
    email?: string
    AND?: privy_userWhereInput | privy_userWhereInput[]
    OR?: privy_userWhereInput[]
    NOT?: privy_userWhereInput | privy_userWhereInput[]
    created_at?: DateTimeFilter<"privy_user"> | Date | string
    updated_at?: DateTimeFilter<"privy_user"> | Date | string
    pro?: IntFilter<"privy_user"> | number
    exp?: IntFilter<"privy_user"> | number
    invite_code?: StringNullableFilter<"privy_user"> | string | null
    invite_code_bind_at?: IntNullableFilter<"privy_user"> | number | null
    referral?: StringNullableFilter<"privy_user"> | string | null
    pro_config?: XOR<Pro_configScalarRelationFilter, pro_configWhereInput>
  }, "id" | "id" | "did" | "email">

  export type privy_userOrderByWithAggregationInput = {
    id?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code?: SortOrderInput | SortOrder
    invite_code_bind_at?: SortOrderInput | SortOrder
    referral?: SortOrderInput | SortOrder
    _count?: privy_userCountOrderByAggregateInput
    _avg?: privy_userAvgOrderByAggregateInput
    _max?: privy_userMaxOrderByAggregateInput
    _min?: privy_userMinOrderByAggregateInput
    _sum?: privy_userSumOrderByAggregateInput
  }

  export type privy_userScalarWhereWithAggregatesInput = {
    AND?: privy_userScalarWhereWithAggregatesInput | privy_userScalarWhereWithAggregatesInput[]
    OR?: privy_userScalarWhereWithAggregatesInput[]
    NOT?: privy_userScalarWhereWithAggregatesInput | privy_userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"privy_user"> | number
    did?: StringWithAggregatesFilter<"privy_user"> | string
    created_at?: DateTimeWithAggregatesFilter<"privy_user"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"privy_user"> | Date | string
    email?: StringWithAggregatesFilter<"privy_user"> | string
    pro?: IntWithAggregatesFilter<"privy_user"> | number
    exp?: IntWithAggregatesFilter<"privy_user"> | number
    invite_code?: StringNullableWithAggregatesFilter<"privy_user"> | string | null
    invite_code_bind_at?: IntNullableWithAggregatesFilter<"privy_user"> | number | null
    referral?: StringNullableWithAggregatesFilter<"privy_user"> | string | null
  }

  export type ai_analyzeWhereInput = {
    AND?: ai_analyzeWhereInput | ai_analyzeWhereInput[]
    OR?: ai_analyzeWhereInput[]
    NOT?: ai_analyzeWhereInput | ai_analyzeWhereInput[]
    id?: IntFilter<"ai_analyze"> | number
    token_address?: StringFilter<"ai_analyze"> | string
    analyze_en?: StringFilter<"ai_analyze"> | string
    analyze_zh?: StringFilter<"ai_analyze"> | string
    tweets?: JsonFilter<"ai_analyze">
    network?: StringFilter<"ai_analyze"> | string
    created_at?: DateTimeFilter<"ai_analyze"> | Date | string
    updated_at?: DateTimeFilter<"ai_analyze"> | Date | string
    symbol?: StringFilter<"ai_analyze"> | string
    search_tweets?: JsonFilter<"ai_analyze">
    ai_resp?: JsonNullableFilter<"ai_analyze">
    template?: StringNullableFilter<"ai_analyze"> | string | null
    type?: StringFilter<"ai_analyze"> | string
    version?: StringFilter<"ai_analyze"> | string
  }

  export type ai_analyzeOrderByWithRelationInput = {
    id?: SortOrder
    token_address?: SortOrder
    analyze_en?: SortOrder
    analyze_zh?: SortOrder
    tweets?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    symbol?: SortOrder
    search_tweets?: SortOrder
    ai_resp?: SortOrderInput | SortOrder
    template?: SortOrderInput | SortOrder
    type?: SortOrder
    version?: SortOrder
  }

  export type ai_analyzeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ai_analyzeWhereInput | ai_analyzeWhereInput[]
    OR?: ai_analyzeWhereInput[]
    NOT?: ai_analyzeWhereInput | ai_analyzeWhereInput[]
    token_address?: StringFilter<"ai_analyze"> | string
    analyze_en?: StringFilter<"ai_analyze"> | string
    analyze_zh?: StringFilter<"ai_analyze"> | string
    tweets?: JsonFilter<"ai_analyze">
    network?: StringFilter<"ai_analyze"> | string
    created_at?: DateTimeFilter<"ai_analyze"> | Date | string
    updated_at?: DateTimeFilter<"ai_analyze"> | Date | string
    symbol?: StringFilter<"ai_analyze"> | string
    search_tweets?: JsonFilter<"ai_analyze">
    ai_resp?: JsonNullableFilter<"ai_analyze">
    template?: StringNullableFilter<"ai_analyze"> | string | null
    type?: StringFilter<"ai_analyze"> | string
    version?: StringFilter<"ai_analyze"> | string
  }, "id" | "id">

  export type ai_analyzeOrderByWithAggregationInput = {
    id?: SortOrder
    token_address?: SortOrder
    analyze_en?: SortOrder
    analyze_zh?: SortOrder
    tweets?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    symbol?: SortOrder
    search_tweets?: SortOrder
    ai_resp?: SortOrderInput | SortOrder
    template?: SortOrderInput | SortOrder
    type?: SortOrder
    version?: SortOrder
    _count?: ai_analyzeCountOrderByAggregateInput
    _avg?: ai_analyzeAvgOrderByAggregateInput
    _max?: ai_analyzeMaxOrderByAggregateInput
    _min?: ai_analyzeMinOrderByAggregateInput
    _sum?: ai_analyzeSumOrderByAggregateInput
  }

  export type ai_analyzeScalarWhereWithAggregatesInput = {
    AND?: ai_analyzeScalarWhereWithAggregatesInput | ai_analyzeScalarWhereWithAggregatesInput[]
    OR?: ai_analyzeScalarWhereWithAggregatesInput[]
    NOT?: ai_analyzeScalarWhereWithAggregatesInput | ai_analyzeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ai_analyze"> | number
    token_address?: StringWithAggregatesFilter<"ai_analyze"> | string
    analyze_en?: StringWithAggregatesFilter<"ai_analyze"> | string
    analyze_zh?: StringWithAggregatesFilter<"ai_analyze"> | string
    tweets?: JsonWithAggregatesFilter<"ai_analyze">
    network?: StringWithAggregatesFilter<"ai_analyze"> | string
    created_at?: DateTimeWithAggregatesFilter<"ai_analyze"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"ai_analyze"> | Date | string
    symbol?: StringWithAggregatesFilter<"ai_analyze"> | string
    search_tweets?: JsonWithAggregatesFilter<"ai_analyze">
    ai_resp?: JsonNullableWithAggregatesFilter<"ai_analyze">
    template?: StringNullableWithAggregatesFilter<"ai_analyze"> | string | null
    type?: StringWithAggregatesFilter<"ai_analyze"> | string
    version?: StringWithAggregatesFilter<"ai_analyze"> | string
  }

  export type ruler_tweetsWhereInput = {
    AND?: ruler_tweetsWhereInput | ruler_tweetsWhereInput[]
    OR?: ruler_tweetsWhereInput[]
    NOT?: ruler_tweetsWhereInput | ruler_tweetsWhereInput[]
    id?: IntFilter<"ruler_tweets"> | number
    token_address?: StringFilter<"ruler_tweets"> | string
    symbol?: StringFilter<"ruler_tweets"> | string
    network?: StringFilter<"ruler_tweets"> | string
    tweet_id?: StringFilter<"ruler_tweets"> | string
    tweet_time?: IntFilter<"ruler_tweets"> | number
    author?: StringFilter<"ruler_tweets"> | string
    content?: JsonFilter<"ruler_tweets">
    created_at?: DateTimeFilter<"ruler_tweets"> | Date | string
    updated_at?: DateTimeFilter<"ruler_tweets"> | Date | string
  }

  export type ruler_tweetsOrderByWithRelationInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    tweet_time?: SortOrder
    author?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ruler_tweetsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tweet_id?: string
    tweet_id_token_address?: ruler_tweetsTweet_idToken_addressCompoundUniqueInput
    AND?: ruler_tweetsWhereInput | ruler_tweetsWhereInput[]
    OR?: ruler_tweetsWhereInput[]
    NOT?: ruler_tweetsWhereInput | ruler_tweetsWhereInput[]
    token_address?: StringFilter<"ruler_tweets"> | string
    symbol?: StringFilter<"ruler_tweets"> | string
    network?: StringFilter<"ruler_tweets"> | string
    tweet_time?: IntFilter<"ruler_tweets"> | number
    author?: StringFilter<"ruler_tweets"> | string
    content?: JsonFilter<"ruler_tweets">
    created_at?: DateTimeFilter<"ruler_tweets"> | Date | string
    updated_at?: DateTimeFilter<"ruler_tweets"> | Date | string
  }, "id" | "id" | "tweet_id" | "tweet_id_token_address">

  export type ruler_tweetsOrderByWithAggregationInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    tweet_time?: SortOrder
    author?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: ruler_tweetsCountOrderByAggregateInput
    _avg?: ruler_tweetsAvgOrderByAggregateInput
    _max?: ruler_tweetsMaxOrderByAggregateInput
    _min?: ruler_tweetsMinOrderByAggregateInput
    _sum?: ruler_tweetsSumOrderByAggregateInput
  }

  export type ruler_tweetsScalarWhereWithAggregatesInput = {
    AND?: ruler_tweetsScalarWhereWithAggregatesInput | ruler_tweetsScalarWhereWithAggregatesInput[]
    OR?: ruler_tweetsScalarWhereWithAggregatesInput[]
    NOT?: ruler_tweetsScalarWhereWithAggregatesInput | ruler_tweetsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ruler_tweets"> | number
    token_address?: StringWithAggregatesFilter<"ruler_tweets"> | string
    symbol?: StringWithAggregatesFilter<"ruler_tweets"> | string
    network?: StringWithAggregatesFilter<"ruler_tweets"> | string
    tweet_id?: StringWithAggregatesFilter<"ruler_tweets"> | string
    tweet_time?: IntWithAggregatesFilter<"ruler_tweets"> | number
    author?: StringWithAggregatesFilter<"ruler_tweets"> | string
    content?: JsonWithAggregatesFilter<"ruler_tweets">
    created_at?: DateTimeWithAggregatesFilter<"ruler_tweets"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"ruler_tweets"> | Date | string
  }

  export type token_interactWhereInput = {
    AND?: token_interactWhereInput | token_interactWhereInput[]
    OR?: token_interactWhereInput[]
    NOT?: token_interactWhereInput | token_interactWhereInput[]
    id?: IntFilter<"token_interact"> | number
    token_address?: StringFilter<"token_interact"> | string
    network?: StringFilter<"token_interact"> | string
    liker?: StringNullableListFilter<"token_interact">
    disliker?: StringNullableListFilter<"token_interact">
    created_at?: DateTimeFilter<"token_interact"> | Date | string
    updated_at?: DateTimeFilter<"token_interact"> | Date | string
  }

  export type token_interactOrderByWithRelationInput = {
    id?: SortOrder
    token_address?: SortOrder
    network?: SortOrder
    liker?: SortOrder
    disliker?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_interactWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token_address?: string
    AND?: token_interactWhereInput | token_interactWhereInput[]
    OR?: token_interactWhereInput[]
    NOT?: token_interactWhereInput | token_interactWhereInput[]
    network?: StringFilter<"token_interact"> | string
    liker?: StringNullableListFilter<"token_interact">
    disliker?: StringNullableListFilter<"token_interact">
    created_at?: DateTimeFilter<"token_interact"> | Date | string
    updated_at?: DateTimeFilter<"token_interact"> | Date | string
  }, "id" | "id" | "token_address">

  export type token_interactOrderByWithAggregationInput = {
    id?: SortOrder
    token_address?: SortOrder
    network?: SortOrder
    liker?: SortOrder
    disliker?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: token_interactCountOrderByAggregateInput
    _avg?: token_interactAvgOrderByAggregateInput
    _max?: token_interactMaxOrderByAggregateInput
    _min?: token_interactMinOrderByAggregateInput
    _sum?: token_interactSumOrderByAggregateInput
  }

  export type token_interactScalarWhereWithAggregatesInput = {
    AND?: token_interactScalarWhereWithAggregatesInput | token_interactScalarWhereWithAggregatesInput[]
    OR?: token_interactScalarWhereWithAggregatesInput[]
    NOT?: token_interactScalarWhereWithAggregatesInput | token_interactScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"token_interact"> | number
    token_address?: StringWithAggregatesFilter<"token_interact"> | string
    network?: StringWithAggregatesFilter<"token_interact"> | string
    liker?: StringNullableListFilter<"token_interact">
    disliker?: StringNullableListFilter<"token_interact">
    created_at?: DateTimeWithAggregatesFilter<"token_interact"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"token_interact"> | Date | string
  }

  export type pro_logsWhereInput = {
    AND?: pro_logsWhereInput | pro_logsWhereInput[]
    OR?: pro_logsWhereInput[]
    NOT?: pro_logsWhereInput | pro_logsWhereInput[]
    id?: IntFilter<"pro_logs"> | number
    did?: StringNullableFilter<"pro_logs"> | string | null
    signature?: StringFilter<"pro_logs"> | string
    level?: IntFilter<"pro_logs"> | number
    renewal?: IntFilter<"pro_logs"> | number
    created_at?: DateTimeFilter<"pro_logs"> | Date | string
    updated_at?: DateTimeFilter<"pro_logs"> | Date | string
    email?: StringNullableFilter<"pro_logs"> | string | null
  }

  export type pro_logsOrderByWithRelationInput = {
    id?: SortOrder
    did?: SortOrderInput | SortOrder
    signature?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrderInput | SortOrder
  }

  export type pro_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    signature?: string
    AND?: pro_logsWhereInput | pro_logsWhereInput[]
    OR?: pro_logsWhereInput[]
    NOT?: pro_logsWhereInput | pro_logsWhereInput[]
    did?: StringNullableFilter<"pro_logs"> | string | null
    level?: IntFilter<"pro_logs"> | number
    renewal?: IntFilter<"pro_logs"> | number
    created_at?: DateTimeFilter<"pro_logs"> | Date | string
    updated_at?: DateTimeFilter<"pro_logs"> | Date | string
    email?: StringNullableFilter<"pro_logs"> | string | null
  }, "id" | "id" | "signature">

  export type pro_logsOrderByWithAggregationInput = {
    id?: SortOrder
    did?: SortOrderInput | SortOrder
    signature?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrderInput | SortOrder
    _count?: pro_logsCountOrderByAggregateInput
    _avg?: pro_logsAvgOrderByAggregateInput
    _max?: pro_logsMaxOrderByAggregateInput
    _min?: pro_logsMinOrderByAggregateInput
    _sum?: pro_logsSumOrderByAggregateInput
  }

  export type pro_logsScalarWhereWithAggregatesInput = {
    AND?: pro_logsScalarWhereWithAggregatesInput | pro_logsScalarWhereWithAggregatesInput[]
    OR?: pro_logsScalarWhereWithAggregatesInput[]
    NOT?: pro_logsScalarWhereWithAggregatesInput | pro_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"pro_logs"> | number
    did?: StringNullableWithAggregatesFilter<"pro_logs"> | string | null
    signature?: StringWithAggregatesFilter<"pro_logs"> | string
    level?: IntWithAggregatesFilter<"pro_logs"> | number
    renewal?: IntWithAggregatesFilter<"pro_logs"> | number
    created_at?: DateTimeWithAggregatesFilter<"pro_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"pro_logs"> | Date | string
    email?: StringNullableWithAggregatesFilter<"pro_logs"> | string | null
  }

  export type tweetsWhereInput = {
    AND?: tweetsWhereInput | tweetsWhereInput[]
    OR?: tweetsWhereInput[]
    NOT?: tweetsWhereInput | tweetsWhereInput[]
    id?: IntFilter<"tweets"> | number
    token_address?: StringFilter<"tweets"> | string
    symbol?: StringFilter<"tweets"> | string
    network?: StringFilter<"tweets"> | string
    tweet_id?: StringFilter<"tweets"> | string
    user_id?: StringFilter<"tweets"> | string
    text?: StringFilter<"tweets"> | string
    medias?: JsonNullableFilter<"tweets">
    is_self_send?: BoolFilter<"tweets"> | boolean
    is_retweet?: BoolFilter<"tweets"> | boolean
    is_quote?: BoolFilter<"tweets"> | boolean
    is_reply?: BoolFilter<"tweets"> | boolean
    is_like?: BoolFilter<"tweets"> | boolean
    related_tweet_id?: StringFilter<"tweets"> | string
    related_user_id?: StringFilter<"tweets"> | string
    favorite_count?: IntFilter<"tweets"> | number
    quote_count?: IntFilter<"tweets"> | number
    reply_count?: IntFilter<"tweets"> | number
    retweet_count?: IntFilter<"tweets"> | number
    author?: StringFilter<"tweets"> | string
    user?: JsonFilter<"tweets">
    created_at?: DateTimeFilter<"tweets"> | Date | string
    updated_at?: DateTimeFilter<"tweets"> | Date | string
    created_time?: IntFilter<"tweets"> | number
    link?: StringFilter<"tweets"> | string
    media_type?: StringFilter<"tweets"> | string
    token_image?: StringFilter<"tweets"> | string
    related_tweets?: JsonFilter<"tweets">
    views?: IntFilter<"tweets"> | number
    is_official?: BoolFilter<"tweets"> | boolean
    text_zh?: StringFilter<"tweets"> | string
  }

  export type tweetsOrderByWithRelationInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    medias?: SortOrderInput | SortOrder
    is_self_send?: SortOrder
    is_retweet?: SortOrder
    is_quote?: SortOrder
    is_reply?: SortOrder
    is_like?: SortOrder
    related_tweet_id?: SortOrder
    related_user_id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    author?: SortOrder
    user?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_time?: SortOrder
    link?: SortOrder
    media_type?: SortOrder
    token_image?: SortOrder
    related_tweets?: SortOrder
    views?: SortOrder
    is_official?: SortOrder
    text_zh?: SortOrder
  }

  export type tweetsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tweet_id_token_address?: tweetsTweet_idToken_addressCompoundUniqueInput
    AND?: tweetsWhereInput | tweetsWhereInput[]
    OR?: tweetsWhereInput[]
    NOT?: tweetsWhereInput | tweetsWhereInput[]
    token_address?: StringFilter<"tweets"> | string
    symbol?: StringFilter<"tweets"> | string
    network?: StringFilter<"tweets"> | string
    tweet_id?: StringFilter<"tweets"> | string
    user_id?: StringFilter<"tweets"> | string
    text?: StringFilter<"tweets"> | string
    medias?: JsonNullableFilter<"tweets">
    is_self_send?: BoolFilter<"tweets"> | boolean
    is_retweet?: BoolFilter<"tweets"> | boolean
    is_quote?: BoolFilter<"tweets"> | boolean
    is_reply?: BoolFilter<"tweets"> | boolean
    is_like?: BoolFilter<"tweets"> | boolean
    related_tweet_id?: StringFilter<"tweets"> | string
    related_user_id?: StringFilter<"tweets"> | string
    favorite_count?: IntFilter<"tweets"> | number
    quote_count?: IntFilter<"tweets"> | number
    reply_count?: IntFilter<"tweets"> | number
    retweet_count?: IntFilter<"tweets"> | number
    author?: StringFilter<"tweets"> | string
    user?: JsonFilter<"tweets">
    created_at?: DateTimeFilter<"tweets"> | Date | string
    updated_at?: DateTimeFilter<"tweets"> | Date | string
    created_time?: IntFilter<"tweets"> | number
    link?: StringFilter<"tweets"> | string
    media_type?: StringFilter<"tweets"> | string
    token_image?: StringFilter<"tweets"> | string
    related_tweets?: JsonFilter<"tweets">
    views?: IntFilter<"tweets"> | number
    is_official?: BoolFilter<"tweets"> | boolean
    text_zh?: StringFilter<"tweets"> | string
  }, "id" | "id" | "tweet_id_token_address">

  export type tweetsOrderByWithAggregationInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    medias?: SortOrderInput | SortOrder
    is_self_send?: SortOrder
    is_retweet?: SortOrder
    is_quote?: SortOrder
    is_reply?: SortOrder
    is_like?: SortOrder
    related_tweet_id?: SortOrder
    related_user_id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    author?: SortOrder
    user?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_time?: SortOrder
    link?: SortOrder
    media_type?: SortOrder
    token_image?: SortOrder
    related_tweets?: SortOrder
    views?: SortOrder
    is_official?: SortOrder
    text_zh?: SortOrder
    _count?: tweetsCountOrderByAggregateInput
    _avg?: tweetsAvgOrderByAggregateInput
    _max?: tweetsMaxOrderByAggregateInput
    _min?: tweetsMinOrderByAggregateInput
    _sum?: tweetsSumOrderByAggregateInput
  }

  export type tweetsScalarWhereWithAggregatesInput = {
    AND?: tweetsScalarWhereWithAggregatesInput | tweetsScalarWhereWithAggregatesInput[]
    OR?: tweetsScalarWhereWithAggregatesInput[]
    NOT?: tweetsScalarWhereWithAggregatesInput | tweetsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tweets"> | number
    token_address?: StringWithAggregatesFilter<"tweets"> | string
    symbol?: StringWithAggregatesFilter<"tweets"> | string
    network?: StringWithAggregatesFilter<"tweets"> | string
    tweet_id?: StringWithAggregatesFilter<"tweets"> | string
    user_id?: StringWithAggregatesFilter<"tweets"> | string
    text?: StringWithAggregatesFilter<"tweets"> | string
    medias?: JsonNullableWithAggregatesFilter<"tweets">
    is_self_send?: BoolWithAggregatesFilter<"tweets"> | boolean
    is_retweet?: BoolWithAggregatesFilter<"tweets"> | boolean
    is_quote?: BoolWithAggregatesFilter<"tweets"> | boolean
    is_reply?: BoolWithAggregatesFilter<"tweets"> | boolean
    is_like?: BoolWithAggregatesFilter<"tweets"> | boolean
    related_tweet_id?: StringWithAggregatesFilter<"tweets"> | string
    related_user_id?: StringWithAggregatesFilter<"tweets"> | string
    favorite_count?: IntWithAggregatesFilter<"tweets"> | number
    quote_count?: IntWithAggregatesFilter<"tweets"> | number
    reply_count?: IntWithAggregatesFilter<"tweets"> | number
    retweet_count?: IntWithAggregatesFilter<"tweets"> | number
    author?: StringWithAggregatesFilter<"tweets"> | string
    user?: JsonWithAggregatesFilter<"tweets">
    created_at?: DateTimeWithAggregatesFilter<"tweets"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"tweets"> | Date | string
    created_time?: IntWithAggregatesFilter<"tweets"> | number
    link?: StringWithAggregatesFilter<"tweets"> | string
    media_type?: StringWithAggregatesFilter<"tweets"> | string
    token_image?: StringWithAggregatesFilter<"tweets"> | string
    related_tweets?: JsonWithAggregatesFilter<"tweets">
    views?: IntWithAggregatesFilter<"tweets"> | number
    is_official?: BoolWithAggregatesFilter<"tweets"> | boolean
    text_zh?: StringWithAggregatesFilter<"tweets"> | string
  }

  export type filter_rulersWhereInput = {
    AND?: filter_rulersWhereInput | filter_rulersWhereInput[]
    OR?: filter_rulersWhereInput[]
    NOT?: filter_rulersWhereInput | filter_rulersWhereInput[]
    id?: IntFilter<"filter_rulers"> | number
    type?: StringFilter<"filter_rulers"> | string
    list?: StringNullableListFilter<"filter_rulers">
    created_at?: DateTimeFilter<"filter_rulers"> | Date | string
    updated_at?: DateTimeFilter<"filter_rulers"> | Date | string
  }

  export type filter_rulersOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    list?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type filter_rulersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    type?: string
    AND?: filter_rulersWhereInput | filter_rulersWhereInput[]
    OR?: filter_rulersWhereInput[]
    NOT?: filter_rulersWhereInput | filter_rulersWhereInput[]
    list?: StringNullableListFilter<"filter_rulers">
    created_at?: DateTimeFilter<"filter_rulers"> | Date | string
    updated_at?: DateTimeFilter<"filter_rulers"> | Date | string
  }, "id" | "id" | "type">

  export type filter_rulersOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    list?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: filter_rulersCountOrderByAggregateInput
    _avg?: filter_rulersAvgOrderByAggregateInput
    _max?: filter_rulersMaxOrderByAggregateInput
    _min?: filter_rulersMinOrderByAggregateInput
    _sum?: filter_rulersSumOrderByAggregateInput
  }

  export type filter_rulersScalarWhereWithAggregatesInput = {
    AND?: filter_rulersScalarWhereWithAggregatesInput | filter_rulersScalarWhereWithAggregatesInput[]
    OR?: filter_rulersScalarWhereWithAggregatesInput[]
    NOT?: filter_rulersScalarWhereWithAggregatesInput | filter_rulersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"filter_rulers"> | number
    type?: StringWithAggregatesFilter<"filter_rulers"> | string
    list?: StringNullableListFilter<"filter_rulers">
    created_at?: DateTimeWithAggregatesFilter<"filter_rulers"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"filter_rulers"> | Date | string
  }

  export type tweet_latest_idWhereInput = {
    AND?: tweet_latest_idWhereInput | tweet_latest_idWhereInput[]
    OR?: tweet_latest_idWhereInput[]
    NOT?: tweet_latest_idWhereInput | tweet_latest_idWhereInput[]
    id?: IntFilter<"tweet_latest_id"> | number
    tweet_id?: StringFilter<"tweet_latest_id"> | string
    created_time?: IntFilter<"tweet_latest_id"> | number
    token_address?: StringFilter<"tweet_latest_id"> | string
    created_at?: DateTimeFilter<"tweet_latest_id"> | Date | string
    updated_at?: DateTimeFilter<"tweet_latest_id"> | Date | string
  }

  export type tweet_latest_idOrderByWithRelationInput = {
    id?: SortOrder
    tweet_id?: SortOrder
    created_time?: SortOrder
    token_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tweet_latest_idWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tweet_id?: string
    token_address?: string
    AND?: tweet_latest_idWhereInput | tweet_latest_idWhereInput[]
    OR?: tweet_latest_idWhereInput[]
    NOT?: tweet_latest_idWhereInput | tweet_latest_idWhereInput[]
    created_time?: IntFilter<"tweet_latest_id"> | number
    created_at?: DateTimeFilter<"tweet_latest_id"> | Date | string
    updated_at?: DateTimeFilter<"tweet_latest_id"> | Date | string
  }, "id" | "id" | "tweet_id" | "token_address">

  export type tweet_latest_idOrderByWithAggregationInput = {
    id?: SortOrder
    tweet_id?: SortOrder
    created_time?: SortOrder
    token_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: tweet_latest_idCountOrderByAggregateInput
    _avg?: tweet_latest_idAvgOrderByAggregateInput
    _max?: tweet_latest_idMaxOrderByAggregateInput
    _min?: tweet_latest_idMinOrderByAggregateInput
    _sum?: tweet_latest_idSumOrderByAggregateInput
  }

  export type tweet_latest_idScalarWhereWithAggregatesInput = {
    AND?: tweet_latest_idScalarWhereWithAggregatesInput | tweet_latest_idScalarWhereWithAggregatesInput[]
    OR?: tweet_latest_idScalarWhereWithAggregatesInput[]
    NOT?: tweet_latest_idScalarWhereWithAggregatesInput | tweet_latest_idScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tweet_latest_id"> | number
    tweet_id?: StringWithAggregatesFilter<"tweet_latest_id"> | string
    created_time?: IntWithAggregatesFilter<"tweet_latest_id"> | number
    token_address?: StringWithAggregatesFilter<"tweet_latest_id"> | string
    created_at?: DateTimeWithAggregatesFilter<"tweet_latest_id"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"tweet_latest_id"> | Date | string
  }

  export type reference_tokensWhereInput = {
    AND?: reference_tokensWhereInput | reference_tokensWhereInput[]
    OR?: reference_tokensWhereInput[]
    NOT?: reference_tokensWhereInput | reference_tokensWhereInput[]
    id?: IntFilter<"reference_tokens"> | number
    address?: StringFilter<"reference_tokens"> | string
    symbol?: StringFilter<"reference_tokens"> | string
    name?: StringFilter<"reference_tokens"> | string
    decimals?: IntFilter<"reference_tokens"> | number
    metadata?: JsonFilter<"reference_tokens">
    network?: StringFilter<"reference_tokens"> | string
    token_created_at?: IntFilter<"reference_tokens"> | number
    social_links?: JsonFilter<"reference_tokens">
    tweet_analyze?: StringFilter<"reference_tokens"> | string
    created_at?: DateTimeFilter<"reference_tokens"> | Date | string
    updated_at?: DateTimeFilter<"reference_tokens"> | Date | string
  }

  export type reference_tokensOrderByWithRelationInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    metadata?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    social_links?: SortOrder
    tweet_analyze?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reference_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    address?: string
    AND?: reference_tokensWhereInput | reference_tokensWhereInput[]
    OR?: reference_tokensWhereInput[]
    NOT?: reference_tokensWhereInput | reference_tokensWhereInput[]
    symbol?: StringFilter<"reference_tokens"> | string
    name?: StringFilter<"reference_tokens"> | string
    decimals?: IntFilter<"reference_tokens"> | number
    metadata?: JsonFilter<"reference_tokens">
    network?: StringFilter<"reference_tokens"> | string
    token_created_at?: IntFilter<"reference_tokens"> | number
    social_links?: JsonFilter<"reference_tokens">
    tweet_analyze?: StringFilter<"reference_tokens"> | string
    created_at?: DateTimeFilter<"reference_tokens"> | Date | string
    updated_at?: DateTimeFilter<"reference_tokens"> | Date | string
  }, "id" | "id" | "address">

  export type reference_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    metadata?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    social_links?: SortOrder
    tweet_analyze?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: reference_tokensCountOrderByAggregateInput
    _avg?: reference_tokensAvgOrderByAggregateInput
    _max?: reference_tokensMaxOrderByAggregateInput
    _min?: reference_tokensMinOrderByAggregateInput
    _sum?: reference_tokensSumOrderByAggregateInput
  }

  export type reference_tokensScalarWhereWithAggregatesInput = {
    AND?: reference_tokensScalarWhereWithAggregatesInput | reference_tokensScalarWhereWithAggregatesInput[]
    OR?: reference_tokensScalarWhereWithAggregatesInput[]
    NOT?: reference_tokensScalarWhereWithAggregatesInput | reference_tokensScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"reference_tokens"> | number
    address?: StringWithAggregatesFilter<"reference_tokens"> | string
    symbol?: StringWithAggregatesFilter<"reference_tokens"> | string
    name?: StringWithAggregatesFilter<"reference_tokens"> | string
    decimals?: IntWithAggregatesFilter<"reference_tokens"> | number
    metadata?: JsonWithAggregatesFilter<"reference_tokens">
    network?: StringWithAggregatesFilter<"reference_tokens"> | string
    token_created_at?: IntWithAggregatesFilter<"reference_tokens"> | number
    social_links?: JsonWithAggregatesFilter<"reference_tokens">
    tweet_analyze?: StringWithAggregatesFilter<"reference_tokens"> | string
    created_at?: DateTimeWithAggregatesFilter<"reference_tokens"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"reference_tokens"> | Date | string
  }

  export type invite_codeWhereInput = {
    AND?: invite_codeWhereInput | invite_codeWhereInput[]
    OR?: invite_codeWhereInput[]
    NOT?: invite_codeWhereInput | invite_codeWhereInput[]
    id?: IntFilter<"invite_code"> | number
    code?: StringFilter<"invite_code"> | string
    user_did?: StringFilter<"invite_code"> | string
    created_at?: DateTimeFilter<"invite_code"> | Date | string
    updated_at?: DateTimeFilter<"invite_code"> | Date | string
    user_email?: StringNullableFilter<"invite_code"> | string | null
    pending?: IntFilter<"invite_code"> | number
  }

  export type invite_codeOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    user_did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_email?: SortOrderInput | SortOrder
    pending?: SortOrder
  }

  export type invite_codeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    code?: string
    AND?: invite_codeWhereInput | invite_codeWhereInput[]
    OR?: invite_codeWhereInput[]
    NOT?: invite_codeWhereInput | invite_codeWhereInput[]
    user_did?: StringFilter<"invite_code"> | string
    created_at?: DateTimeFilter<"invite_code"> | Date | string
    updated_at?: DateTimeFilter<"invite_code"> | Date | string
    user_email?: StringNullableFilter<"invite_code"> | string | null
    pending?: IntFilter<"invite_code"> | number
  }, "id" | "id" | "code">

  export type invite_codeOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    user_did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_email?: SortOrderInput | SortOrder
    pending?: SortOrder
    _count?: invite_codeCountOrderByAggregateInput
    _avg?: invite_codeAvgOrderByAggregateInput
    _max?: invite_codeMaxOrderByAggregateInput
    _min?: invite_codeMinOrderByAggregateInput
    _sum?: invite_codeSumOrderByAggregateInput
  }

  export type invite_codeScalarWhereWithAggregatesInput = {
    AND?: invite_codeScalarWhereWithAggregatesInput | invite_codeScalarWhereWithAggregatesInput[]
    OR?: invite_codeScalarWhereWithAggregatesInput[]
    NOT?: invite_codeScalarWhereWithAggregatesInput | invite_codeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"invite_code"> | number
    code?: StringWithAggregatesFilter<"invite_code"> | string
    user_did?: StringWithAggregatesFilter<"invite_code"> | string
    created_at?: DateTimeWithAggregatesFilter<"invite_code"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"invite_code"> | Date | string
    user_email?: StringNullableWithAggregatesFilter<"invite_code"> | string | null
    pending?: IntWithAggregatesFilter<"invite_code"> | number
  }

  export type pro_configWhereInput = {
    AND?: pro_configWhereInput | pro_configWhereInput[]
    OR?: pro_configWhereInput[]
    NOT?: pro_configWhereInput | pro_configWhereInput[]
    id?: IntFilter<"pro_config"> | number
    config?: JsonFilter<"pro_config">
    created_at?: DateTimeFilter<"pro_config"> | Date | string
    privy_user?: Privy_userListRelationFilter
  }

  export type pro_configOrderByWithRelationInput = {
    id?: SortOrder
    config?: SortOrder
    created_at?: SortOrder
    privy_user?: privy_userOrderByRelationAggregateInput
  }

  export type pro_configWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: pro_configWhereInput | pro_configWhereInput[]
    OR?: pro_configWhereInput[]
    NOT?: pro_configWhereInput | pro_configWhereInput[]
    config?: JsonFilter<"pro_config">
    created_at?: DateTimeFilter<"pro_config"> | Date | string
    privy_user?: Privy_userListRelationFilter
  }, "id" | "id">

  export type pro_configOrderByWithAggregationInput = {
    id?: SortOrder
    config?: SortOrder
    created_at?: SortOrder
    _count?: pro_configCountOrderByAggregateInput
    _avg?: pro_configAvgOrderByAggregateInput
    _max?: pro_configMaxOrderByAggregateInput
    _min?: pro_configMinOrderByAggregateInput
    _sum?: pro_configSumOrderByAggregateInput
  }

  export type pro_configScalarWhereWithAggregatesInput = {
    AND?: pro_configScalarWhereWithAggregatesInput | pro_configScalarWhereWithAggregatesInput[]
    OR?: pro_configScalarWhereWithAggregatesInput[]
    NOT?: pro_configScalarWhereWithAggregatesInput | pro_configScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"pro_config"> | number
    config?: JsonWithAggregatesFilter<"pro_config">
    created_at?: DateTimeWithAggregatesFilter<"pro_config"> | Date | string
  }

  export type user_service_call_logsWhereInput = {
    AND?: user_service_call_logsWhereInput | user_service_call_logsWhereInput[]
    OR?: user_service_call_logsWhereInput[]
    NOT?: user_service_call_logsWhereInput | user_service_call_logsWhereInput[]
    id?: IntFilter<"user_service_call_logs"> | number
    did?: StringFilter<"user_service_call_logs"> | string
    call_date?: IntFilter<"user_service_call_logs"> | number
    call_count?: IntFilter<"user_service_call_logs"> | number
    service?: StringFilter<"user_service_call_logs"> | string
    created_at?: DateTimeFilter<"user_service_call_logs"> | Date | string
    updated_at?: DateTimeFilter<"user_service_call_logs"> | Date | string
  }

  export type user_service_call_logsOrderByWithRelationInput = {
    id?: SortOrder
    did?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_service_call_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    did_call_date_service?: user_service_call_logsDidCall_dateServiceCompoundUniqueInput
    AND?: user_service_call_logsWhereInput | user_service_call_logsWhereInput[]
    OR?: user_service_call_logsWhereInput[]
    NOT?: user_service_call_logsWhereInput | user_service_call_logsWhereInput[]
    did?: StringFilter<"user_service_call_logs"> | string
    call_date?: IntFilter<"user_service_call_logs"> | number
    call_count?: IntFilter<"user_service_call_logs"> | number
    service?: StringFilter<"user_service_call_logs"> | string
    created_at?: DateTimeFilter<"user_service_call_logs"> | Date | string
    updated_at?: DateTimeFilter<"user_service_call_logs"> | Date | string
  }, "id" | "id" | "did_call_date_service">

  export type user_service_call_logsOrderByWithAggregationInput = {
    id?: SortOrder
    did?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: user_service_call_logsCountOrderByAggregateInput
    _avg?: user_service_call_logsAvgOrderByAggregateInput
    _max?: user_service_call_logsMaxOrderByAggregateInput
    _min?: user_service_call_logsMinOrderByAggregateInput
    _sum?: user_service_call_logsSumOrderByAggregateInput
  }

  export type user_service_call_logsScalarWhereWithAggregatesInput = {
    AND?: user_service_call_logsScalarWhereWithAggregatesInput | user_service_call_logsScalarWhereWithAggregatesInput[]
    OR?: user_service_call_logsScalarWhereWithAggregatesInput[]
    NOT?: user_service_call_logsScalarWhereWithAggregatesInput | user_service_call_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_service_call_logs"> | number
    did?: StringWithAggregatesFilter<"user_service_call_logs"> | string
    call_date?: IntWithAggregatesFilter<"user_service_call_logs"> | number
    call_count?: IntWithAggregatesFilter<"user_service_call_logs"> | number
    service?: StringWithAggregatesFilter<"user_service_call_logs"> | string
    created_at?: DateTimeWithAggregatesFilter<"user_service_call_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"user_service_call_logs"> | Date | string
  }

  export type invite_code_bind_logsWhereInput = {
    AND?: invite_code_bind_logsWhereInput | invite_code_bind_logsWhereInput[]
    OR?: invite_code_bind_logsWhereInput[]
    NOT?: invite_code_bind_logsWhereInput | invite_code_bind_logsWhereInput[]
    id?: IntFilter<"invite_code_bind_logs"> | number
    code?: StringFilter<"invite_code_bind_logs"> | string
    email?: StringFilter<"invite_code_bind_logs"> | string
    signature?: StringFilter<"invite_code_bind_logs"> | string
    did?: StringNullableFilter<"invite_code_bind_logs"> | string | null
    created_at?: DateTimeFilter<"invite_code_bind_logs"> | Date | string
    updated_at?: DateTimeFilter<"invite_code_bind_logs"> | Date | string
  }

  export type invite_code_bind_logsOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    email?: SortOrder
    signature?: SortOrder
    did?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type invite_code_bind_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    code?: string
    signature?: string
    AND?: invite_code_bind_logsWhereInput | invite_code_bind_logsWhereInput[]
    OR?: invite_code_bind_logsWhereInput[]
    NOT?: invite_code_bind_logsWhereInput | invite_code_bind_logsWhereInput[]
    email?: StringFilter<"invite_code_bind_logs"> | string
    did?: StringNullableFilter<"invite_code_bind_logs"> | string | null
    created_at?: DateTimeFilter<"invite_code_bind_logs"> | Date | string
    updated_at?: DateTimeFilter<"invite_code_bind_logs"> | Date | string
  }, "id" | "id" | "code" | "signature">

  export type invite_code_bind_logsOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    email?: SortOrder
    signature?: SortOrder
    did?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: invite_code_bind_logsCountOrderByAggregateInput
    _avg?: invite_code_bind_logsAvgOrderByAggregateInput
    _max?: invite_code_bind_logsMaxOrderByAggregateInput
    _min?: invite_code_bind_logsMinOrderByAggregateInput
    _sum?: invite_code_bind_logsSumOrderByAggregateInput
  }

  export type invite_code_bind_logsScalarWhereWithAggregatesInput = {
    AND?: invite_code_bind_logsScalarWhereWithAggregatesInput | invite_code_bind_logsScalarWhereWithAggregatesInput[]
    OR?: invite_code_bind_logsScalarWhereWithAggregatesInput[]
    NOT?: invite_code_bind_logsScalarWhereWithAggregatesInput | invite_code_bind_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"invite_code_bind_logs"> | number
    code?: StringWithAggregatesFilter<"invite_code_bind_logs"> | string
    email?: StringWithAggregatesFilter<"invite_code_bind_logs"> | string
    signature?: StringWithAggregatesFilter<"invite_code_bind_logs"> | string
    did?: StringNullableWithAggregatesFilter<"invite_code_bind_logs"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"invite_code_bind_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"invite_code_bind_logs"> | Date | string
  }

  export type watchlistWhereInput = {
    AND?: watchlistWhereInput | watchlistWhereInput[]
    OR?: watchlistWhereInput[]
    NOT?: watchlistWhereInput | watchlistWhereInput[]
    id?: IntFilter<"watchlist"> | number
    did?: StringFilter<"watchlist"> | string
    token_address?: StringFilter<"watchlist"> | string
    token_symbol?: StringNullableFilter<"watchlist"> | string | null
    url?: StringNullableFilter<"watchlist"> | string | null
    network?: StringFilter<"watchlist"> | string
    created_at?: DateTimeFilter<"watchlist"> | Date | string
    updated_at?: DateTimeFilter<"watchlist"> | Date | string
  }

  export type watchlistOrderByWithRelationInput = {
    id?: SortOrder
    did?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type watchlistWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    did_token_address_network?: watchlistDidToken_addressNetworkCompoundUniqueInput
    AND?: watchlistWhereInput | watchlistWhereInput[]
    OR?: watchlistWhereInput[]
    NOT?: watchlistWhereInput | watchlistWhereInput[]
    did?: StringFilter<"watchlist"> | string
    token_address?: StringFilter<"watchlist"> | string
    token_symbol?: StringNullableFilter<"watchlist"> | string | null
    url?: StringNullableFilter<"watchlist"> | string | null
    network?: StringFilter<"watchlist"> | string
    created_at?: DateTimeFilter<"watchlist"> | Date | string
    updated_at?: DateTimeFilter<"watchlist"> | Date | string
  }, "id" | "id" | "did_token_address_network">

  export type watchlistOrderByWithAggregationInput = {
    id?: SortOrder
    did?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: watchlistCountOrderByAggregateInput
    _avg?: watchlistAvgOrderByAggregateInput
    _max?: watchlistMaxOrderByAggregateInput
    _min?: watchlistMinOrderByAggregateInput
    _sum?: watchlistSumOrderByAggregateInput
  }

  export type watchlistScalarWhereWithAggregatesInput = {
    AND?: watchlistScalarWhereWithAggregatesInput | watchlistScalarWhereWithAggregatesInput[]
    OR?: watchlistScalarWhereWithAggregatesInput[]
    NOT?: watchlistScalarWhereWithAggregatesInput | watchlistScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"watchlist"> | number
    did?: StringWithAggregatesFilter<"watchlist"> | string
    token_address?: StringWithAggregatesFilter<"watchlist"> | string
    token_symbol?: StringNullableWithAggregatesFilter<"watchlist"> | string | null
    url?: StringNullableWithAggregatesFilter<"watchlist"> | string | null
    network?: StringWithAggregatesFilter<"watchlist"> | string
    created_at?: DateTimeWithAggregatesFilter<"watchlist"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"watchlist"> | Date | string
  }

  export type click_logsWhereInput = {
    AND?: click_logsWhereInput | click_logsWhereInput[]
    OR?: click_logsWhereInput[]
    NOT?: click_logsWhereInput | click_logsWhereInput[]
    id?: IntFilter<"click_logs"> | number
    did?: StringFilter<"click_logs"> | string
    type?: StringFilter<"click_logs"> | string
    content?: StringFilter<"click_logs"> | string
    created_at?: DateTimeFilter<"click_logs"> | Date | string
    updated_at?: DateTimeFilter<"click_logs"> | Date | string
  }

  export type click_logsOrderByWithRelationInput = {
    id?: SortOrder
    did?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type click_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: click_logsWhereInput | click_logsWhereInput[]
    OR?: click_logsWhereInput[]
    NOT?: click_logsWhereInput | click_logsWhereInput[]
    did?: StringFilter<"click_logs"> | string
    type?: StringFilter<"click_logs"> | string
    content?: StringFilter<"click_logs"> | string
    created_at?: DateTimeFilter<"click_logs"> | Date | string
    updated_at?: DateTimeFilter<"click_logs"> | Date | string
  }, "id" | "id">

  export type click_logsOrderByWithAggregationInput = {
    id?: SortOrder
    did?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: click_logsCountOrderByAggregateInput
    _avg?: click_logsAvgOrderByAggregateInput
    _max?: click_logsMaxOrderByAggregateInput
    _min?: click_logsMinOrderByAggregateInput
    _sum?: click_logsSumOrderByAggregateInput
  }

  export type click_logsScalarWhereWithAggregatesInput = {
    AND?: click_logsScalarWhereWithAggregatesInput | click_logsScalarWhereWithAggregatesInput[]
    OR?: click_logsScalarWhereWithAggregatesInput[]
    NOT?: click_logsScalarWhereWithAggregatesInput | click_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"click_logs"> | number
    did?: StringWithAggregatesFilter<"click_logs"> | string
    type?: StringWithAggregatesFilter<"click_logs"> | string
    content?: StringWithAggregatesFilter<"click_logs"> | string
    created_at?: DateTimeWithAggregatesFilter<"click_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"click_logs"> | Date | string
  }

  export type smart_walletsWhereInput = {
    AND?: smart_walletsWhereInput | smart_walletsWhereInput[]
    OR?: smart_walletsWhereInput[]
    NOT?: smart_walletsWhereInput | smart_walletsWhereInput[]
    id?: IntFilter<"smart_wallets"> | number
    address?: StringFilter<"smart_wallets"> | string
    twitter_handle?: StringNullableFilter<"smart_wallets"> | string | null
    account_info?: JsonNullableFilter<"smart_wallets">
    network?: StringFilter<"smart_wallets"> | string
    created_at?: DateTimeFilter<"smart_wallets"> | Date | string
    updated_at?: DateTimeFilter<"smart_wallets"> | Date | string
    alias?: StringNullableFilter<"smart_wallets"> | string | null
  }

  export type smart_walletsOrderByWithRelationInput = {
    id?: SortOrder
    address?: SortOrder
    twitter_handle?: SortOrderInput | SortOrder
    account_info?: SortOrderInput | SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alias?: SortOrderInput | SortOrder
  }

  export type smart_walletsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    address?: string
    AND?: smart_walletsWhereInput | smart_walletsWhereInput[]
    OR?: smart_walletsWhereInput[]
    NOT?: smart_walletsWhereInput | smart_walletsWhereInput[]
    twitter_handle?: StringNullableFilter<"smart_wallets"> | string | null
    account_info?: JsonNullableFilter<"smart_wallets">
    network?: StringFilter<"smart_wallets"> | string
    created_at?: DateTimeFilter<"smart_wallets"> | Date | string
    updated_at?: DateTimeFilter<"smart_wallets"> | Date | string
    alias?: StringNullableFilter<"smart_wallets"> | string | null
  }, "id" | "id" | "address">

  export type smart_walletsOrderByWithAggregationInput = {
    id?: SortOrder
    address?: SortOrder
    twitter_handle?: SortOrderInput | SortOrder
    account_info?: SortOrderInput | SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alias?: SortOrderInput | SortOrder
    _count?: smart_walletsCountOrderByAggregateInput
    _avg?: smart_walletsAvgOrderByAggregateInput
    _max?: smart_walletsMaxOrderByAggregateInput
    _min?: smart_walletsMinOrderByAggregateInput
    _sum?: smart_walletsSumOrderByAggregateInput
  }

  export type smart_walletsScalarWhereWithAggregatesInput = {
    AND?: smart_walletsScalarWhereWithAggregatesInput | smart_walletsScalarWhereWithAggregatesInput[]
    OR?: smart_walletsScalarWhereWithAggregatesInput[]
    NOT?: smart_walletsScalarWhereWithAggregatesInput | smart_walletsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"smart_wallets"> | number
    address?: StringWithAggregatesFilter<"smart_wallets"> | string
    twitter_handle?: StringNullableWithAggregatesFilter<"smart_wallets"> | string | null
    account_info?: JsonNullableWithAggregatesFilter<"smart_wallets">
    network?: StringWithAggregatesFilter<"smart_wallets"> | string
    created_at?: DateTimeWithAggregatesFilter<"smart_wallets"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"smart_wallets"> | Date | string
    alias?: StringNullableWithAggregatesFilter<"smart_wallets"> | string | null
  }

  export type communityWhereInput = {
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    id?: IntFilter<"community"> | number
    name?: StringFilter<"community"> | string
    contact?: StringNullableFilter<"community"> | string | null
    created_at?: DateTimeFilter<"community"> | Date | string
    updated_at?: DateTimeFilter<"community"> | Date | string
    community_referral?: Community_referralListRelationFilter
    community_revenue?: Community_revenueListRelationFilter
  }

  export type communityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    community_referral?: community_referralOrderByRelationAggregateInput
    community_revenue?: community_revenueOrderByRelationAggregateInput
  }

  export type communityWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    contact?: StringNullableFilter<"community"> | string | null
    created_at?: DateTimeFilter<"community"> | Date | string
    updated_at?: DateTimeFilter<"community"> | Date | string
    community_referral?: Community_referralListRelationFilter
    community_revenue?: Community_revenueListRelationFilter
  }, "id" | "id" | "name">

  export type communityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: communityCountOrderByAggregateInput
    _avg?: communityAvgOrderByAggregateInput
    _max?: communityMaxOrderByAggregateInput
    _min?: communityMinOrderByAggregateInput
    _sum?: communitySumOrderByAggregateInput
  }

  export type communityScalarWhereWithAggregatesInput = {
    AND?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    OR?: communityScalarWhereWithAggregatesInput[]
    NOT?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"community"> | number
    name?: StringWithAggregatesFilter<"community"> | string
    contact?: StringNullableWithAggregatesFilter<"community"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"community"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"community"> | Date | string
  }

  export type community_referralWhereInput = {
    AND?: community_referralWhereInput | community_referralWhereInput[]
    OR?: community_referralWhereInput[]
    NOT?: community_referralWhereInput | community_referralWhereInput[]
    id?: IntFilter<"community_referral"> | number
    expiration_date?: IntFilter<"community_referral"> | number
    state?: IntFilter<"community_referral"> | number
    code?: StringFilter<"community_referral"> | string
    community_id?: IntFilter<"community_referral"> | number
    proportion?: FloatFilter<"community_referral"> | number
    sol_address?: StringFilter<"community_referral"> | string
    eth_address?: StringNullableFilter<"community_referral"> | string | null
    created_at?: DateTimeFilter<"community_referral"> | Date | string
    updated_at?: DateTimeFilter<"community_referral"> | Date | string
    community?: XOR<CommunityScalarRelationFilter, communityWhereInput>
  }

  export type community_referralOrderByWithRelationInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    code?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
    sol_address?: SortOrder
    eth_address?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    community?: communityOrderByWithRelationInput
  }

  export type community_referralWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    code?: string
    AND?: community_referralWhereInput | community_referralWhereInput[]
    OR?: community_referralWhereInput[]
    NOT?: community_referralWhereInput | community_referralWhereInput[]
    expiration_date?: IntFilter<"community_referral"> | number
    state?: IntFilter<"community_referral"> | number
    community_id?: IntFilter<"community_referral"> | number
    proportion?: FloatFilter<"community_referral"> | number
    sol_address?: StringFilter<"community_referral"> | string
    eth_address?: StringNullableFilter<"community_referral"> | string | null
    created_at?: DateTimeFilter<"community_referral"> | Date | string
    updated_at?: DateTimeFilter<"community_referral"> | Date | string
    community?: XOR<CommunityScalarRelationFilter, communityWhereInput>
  }, "id" | "id" | "code">

  export type community_referralOrderByWithAggregationInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    code?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
    sol_address?: SortOrder
    eth_address?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: community_referralCountOrderByAggregateInput
    _avg?: community_referralAvgOrderByAggregateInput
    _max?: community_referralMaxOrderByAggregateInput
    _min?: community_referralMinOrderByAggregateInput
    _sum?: community_referralSumOrderByAggregateInput
  }

  export type community_referralScalarWhereWithAggregatesInput = {
    AND?: community_referralScalarWhereWithAggregatesInput | community_referralScalarWhereWithAggregatesInput[]
    OR?: community_referralScalarWhereWithAggregatesInput[]
    NOT?: community_referralScalarWhereWithAggregatesInput | community_referralScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"community_referral"> | number
    expiration_date?: IntWithAggregatesFilter<"community_referral"> | number
    state?: IntWithAggregatesFilter<"community_referral"> | number
    code?: StringWithAggregatesFilter<"community_referral"> | string
    community_id?: IntWithAggregatesFilter<"community_referral"> | number
    proportion?: FloatWithAggregatesFilter<"community_referral"> | number
    sol_address?: StringWithAggregatesFilter<"community_referral"> | string
    eth_address?: StringNullableWithAggregatesFilter<"community_referral"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"community_referral"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"community_referral"> | Date | string
  }

  export type community_referral_payed_logsWhereInput = {
    AND?: community_referral_payed_logsWhereInput | community_referral_payed_logsWhereInput[]
    OR?: community_referral_payed_logsWhereInput[]
    NOT?: community_referral_payed_logsWhereInput | community_referral_payed_logsWhereInput[]
    id?: IntFilter<"community_referral_payed_logs"> | number
    ref_revenue?: IntFilter<"community_referral_payed_logs"> | number
    token?: StringFilter<"community_referral_payed_logs"> | string
    type?: StringFilter<"community_referral_payed_logs"> | string
    amount?: FloatFilter<"community_referral_payed_logs"> | number
    signature?: StringFilter<"community_referral_payed_logs"> | string
    network?: StringFilter<"community_referral_payed_logs"> | string
    payee_address?: StringFilter<"community_referral_payed_logs"> | string
    created_at?: DateTimeFilter<"community_referral_payed_logs"> | Date | string
    updated_at?: DateTimeFilter<"community_referral_payed_logs"> | Date | string
    community_revenue?: XOR<Community_revenueScalarRelationFilter, community_revenueWhereInput>
  }

  export type community_referral_payed_logsOrderByWithRelationInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    token?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    payee_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    community_revenue?: community_revenueOrderByWithRelationInput
  }

  export type community_referral_payed_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    signature?: string
    AND?: community_referral_payed_logsWhereInput | community_referral_payed_logsWhereInput[]
    OR?: community_referral_payed_logsWhereInput[]
    NOT?: community_referral_payed_logsWhereInput | community_referral_payed_logsWhereInput[]
    ref_revenue?: IntFilter<"community_referral_payed_logs"> | number
    token?: StringFilter<"community_referral_payed_logs"> | string
    type?: StringFilter<"community_referral_payed_logs"> | string
    amount?: FloatFilter<"community_referral_payed_logs"> | number
    network?: StringFilter<"community_referral_payed_logs"> | string
    payee_address?: StringFilter<"community_referral_payed_logs"> | string
    created_at?: DateTimeFilter<"community_referral_payed_logs"> | Date | string
    updated_at?: DateTimeFilter<"community_referral_payed_logs"> | Date | string
    community_revenue?: XOR<Community_revenueScalarRelationFilter, community_revenueWhereInput>
  }, "id" | "id" | "signature">

  export type community_referral_payed_logsOrderByWithAggregationInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    token?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    payee_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: community_referral_payed_logsCountOrderByAggregateInput
    _avg?: community_referral_payed_logsAvgOrderByAggregateInput
    _max?: community_referral_payed_logsMaxOrderByAggregateInput
    _min?: community_referral_payed_logsMinOrderByAggregateInput
    _sum?: community_referral_payed_logsSumOrderByAggregateInput
  }

  export type community_referral_payed_logsScalarWhereWithAggregatesInput = {
    AND?: community_referral_payed_logsScalarWhereWithAggregatesInput | community_referral_payed_logsScalarWhereWithAggregatesInput[]
    OR?: community_referral_payed_logsScalarWhereWithAggregatesInput[]
    NOT?: community_referral_payed_logsScalarWhereWithAggregatesInput | community_referral_payed_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"community_referral_payed_logs"> | number
    ref_revenue?: IntWithAggregatesFilter<"community_referral_payed_logs"> | number
    token?: StringWithAggregatesFilter<"community_referral_payed_logs"> | string
    type?: StringWithAggregatesFilter<"community_referral_payed_logs"> | string
    amount?: FloatWithAggregatesFilter<"community_referral_payed_logs"> | number
    signature?: StringWithAggregatesFilter<"community_referral_payed_logs"> | string
    network?: StringWithAggregatesFilter<"community_referral_payed_logs"> | string
    payee_address?: StringWithAggregatesFilter<"community_referral_payed_logs"> | string
    created_at?: DateTimeWithAggregatesFilter<"community_referral_payed_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"community_referral_payed_logs"> | Date | string
  }

  export type community_referral_revenue_logsWhereInput = {
    AND?: community_referral_revenue_logsWhereInput | community_referral_revenue_logsWhereInput[]
    OR?: community_referral_revenue_logsWhereInput[]
    NOT?: community_referral_revenue_logsWhereInput | community_referral_revenue_logsWhereInput[]
    id?: IntFilter<"community_referral_revenue_logs"> | number
    user?: StringFilter<"community_referral_revenue_logs"> | string
    amount?: FloatFilter<"community_referral_revenue_logs"> | number
    token?: StringFilter<"community_referral_revenue_logs"> | string
    type?: StringFilter<"community_referral_revenue_logs"> | string
    ref_code?: StringFilter<"community_referral_revenue_logs"> | string
    proportion?: FloatFilter<"community_referral_revenue_logs"> | number
    signature?: StringFilter<"community_referral_revenue_logs"> | string
    network?: StringFilter<"community_referral_revenue_logs"> | string
    ref_revenue?: IntFilter<"community_referral_revenue_logs"> | number
    created_at?: DateTimeFilter<"community_referral_revenue_logs"> | Date | string
    updated_at?: DateTimeFilter<"community_referral_revenue_logs"> | Date | string
    community_revenue?: XOR<Community_revenueScalarRelationFilter, community_revenueWhereInput>
  }

  export type community_referral_revenue_logsOrderByWithRelationInput = {
    id?: SortOrder
    user?: SortOrder
    amount?: SortOrder
    token?: SortOrder
    type?: SortOrder
    ref_code?: SortOrder
    proportion?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    ref_revenue?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    community_revenue?: community_revenueOrderByWithRelationInput
  }

  export type community_referral_revenue_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    signature?: string
    AND?: community_referral_revenue_logsWhereInput | community_referral_revenue_logsWhereInput[]
    OR?: community_referral_revenue_logsWhereInput[]
    NOT?: community_referral_revenue_logsWhereInput | community_referral_revenue_logsWhereInput[]
    user?: StringFilter<"community_referral_revenue_logs"> | string
    amount?: FloatFilter<"community_referral_revenue_logs"> | number
    token?: StringFilter<"community_referral_revenue_logs"> | string
    type?: StringFilter<"community_referral_revenue_logs"> | string
    ref_code?: StringFilter<"community_referral_revenue_logs"> | string
    proportion?: FloatFilter<"community_referral_revenue_logs"> | number
    network?: StringFilter<"community_referral_revenue_logs"> | string
    ref_revenue?: IntFilter<"community_referral_revenue_logs"> | number
    created_at?: DateTimeFilter<"community_referral_revenue_logs"> | Date | string
    updated_at?: DateTimeFilter<"community_referral_revenue_logs"> | Date | string
    community_revenue?: XOR<Community_revenueScalarRelationFilter, community_revenueWhereInput>
  }, "id" | "id" | "signature">

  export type community_referral_revenue_logsOrderByWithAggregationInput = {
    id?: SortOrder
    user?: SortOrder
    amount?: SortOrder
    token?: SortOrder
    type?: SortOrder
    ref_code?: SortOrder
    proportion?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    ref_revenue?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: community_referral_revenue_logsCountOrderByAggregateInput
    _avg?: community_referral_revenue_logsAvgOrderByAggregateInput
    _max?: community_referral_revenue_logsMaxOrderByAggregateInput
    _min?: community_referral_revenue_logsMinOrderByAggregateInput
    _sum?: community_referral_revenue_logsSumOrderByAggregateInput
  }

  export type community_referral_revenue_logsScalarWhereWithAggregatesInput = {
    AND?: community_referral_revenue_logsScalarWhereWithAggregatesInput | community_referral_revenue_logsScalarWhereWithAggregatesInput[]
    OR?: community_referral_revenue_logsScalarWhereWithAggregatesInput[]
    NOT?: community_referral_revenue_logsScalarWhereWithAggregatesInput | community_referral_revenue_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"community_referral_revenue_logs"> | number
    user?: StringWithAggregatesFilter<"community_referral_revenue_logs"> | string
    amount?: FloatWithAggregatesFilter<"community_referral_revenue_logs"> | number
    token?: StringWithAggregatesFilter<"community_referral_revenue_logs"> | string
    type?: StringWithAggregatesFilter<"community_referral_revenue_logs"> | string
    ref_code?: StringWithAggregatesFilter<"community_referral_revenue_logs"> | string
    proportion?: FloatWithAggregatesFilter<"community_referral_revenue_logs"> | number
    signature?: StringWithAggregatesFilter<"community_referral_revenue_logs"> | string
    network?: StringWithAggregatesFilter<"community_referral_revenue_logs"> | string
    ref_revenue?: IntWithAggregatesFilter<"community_referral_revenue_logs"> | number
    created_at?: DateTimeWithAggregatesFilter<"community_referral_revenue_logs"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"community_referral_revenue_logs"> | Date | string
  }

  export type community_revenueWhereInput = {
    AND?: community_revenueWhereInput | community_revenueWhereInput[]
    OR?: community_revenueWhereInput[]
    NOT?: community_revenueWhereInput | community_revenueWhereInput[]
    id?: IntFilter<"community_revenue"> | number
    community_id?: IntFilter<"community_revenue"> | number
    token?: StringFilter<"community_revenue"> | string
    total?: FloatFilter<"community_revenue"> | number
    proportion?: FloatFilter<"community_revenue"> | number
    payed?: FloatFilter<"community_revenue"> | number
    created_at?: DateTimeFilter<"community_revenue"> | Date | string
    updated_at?: DateTimeFilter<"community_revenue"> | Date | string
    community_referral_payed_logs?: Community_referral_payed_logsListRelationFilter
    community_referral_revenue_logs?: Community_referral_revenue_logsListRelationFilter
    community?: XOR<CommunityScalarRelationFilter, communityWhereInput>
  }

  export type community_revenueOrderByWithRelationInput = {
    id?: SortOrder
    community_id?: SortOrder
    token?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    community_referral_payed_logs?: community_referral_payed_logsOrderByRelationAggregateInput
    community_referral_revenue_logs?: community_referral_revenue_logsOrderByRelationAggregateInput
    community?: communityOrderByWithRelationInput
  }

  export type community_revenueWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    community_id_token?: community_revenueCommunity_idTokenCompoundUniqueInput
    AND?: community_revenueWhereInput | community_revenueWhereInput[]
    OR?: community_revenueWhereInput[]
    NOT?: community_revenueWhereInput | community_revenueWhereInput[]
    community_id?: IntFilter<"community_revenue"> | number
    token?: StringFilter<"community_revenue"> | string
    total?: FloatFilter<"community_revenue"> | number
    proportion?: FloatFilter<"community_revenue"> | number
    payed?: FloatFilter<"community_revenue"> | number
    created_at?: DateTimeFilter<"community_revenue"> | Date | string
    updated_at?: DateTimeFilter<"community_revenue"> | Date | string
    community_referral_payed_logs?: Community_referral_payed_logsListRelationFilter
    community_referral_revenue_logs?: Community_referral_revenue_logsListRelationFilter
    community?: XOR<CommunityScalarRelationFilter, communityWhereInput>
  }, "id" | "id" | "community_id_token">

  export type community_revenueOrderByWithAggregationInput = {
    id?: SortOrder
    community_id?: SortOrder
    token?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: community_revenueCountOrderByAggregateInput
    _avg?: community_revenueAvgOrderByAggregateInput
    _max?: community_revenueMaxOrderByAggregateInput
    _min?: community_revenueMinOrderByAggregateInput
    _sum?: community_revenueSumOrderByAggregateInput
  }

  export type community_revenueScalarWhereWithAggregatesInput = {
    AND?: community_revenueScalarWhereWithAggregatesInput | community_revenueScalarWhereWithAggregatesInput[]
    OR?: community_revenueScalarWhereWithAggregatesInput[]
    NOT?: community_revenueScalarWhereWithAggregatesInput | community_revenueScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"community_revenue"> | number
    community_id?: IntWithAggregatesFilter<"community_revenue"> | number
    token?: StringWithAggregatesFilter<"community_revenue"> | string
    total?: FloatWithAggregatesFilter<"community_revenue"> | number
    proportion?: FloatWithAggregatesFilter<"community_revenue"> | number
    payed?: FloatWithAggregatesFilter<"community_revenue"> | number
    created_at?: DateTimeWithAggregatesFilter<"community_revenue"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"community_revenue"> | Date | string
  }

  export type rag_tokensWhereInput = {
    AND?: rag_tokensWhereInput | rag_tokensWhereInput[]
    OR?: rag_tokensWhereInput[]
    NOT?: rag_tokensWhereInput | rag_tokensWhereInput[]
    id?: IntFilter<"rag_tokens"> | number
    token_address?: StringFilter<"rag_tokens"> | string
    token_symbol?: StringFilter<"rag_tokens"> | string
    created_at?: DateTimeFilter<"rag_tokens"> | Date | string
    updated_at?: DateTimeFilter<"rag_tokens"> | Date | string
    network?: StringFilter<"rag_tokens"> | string
  }

  export type rag_tokensOrderByWithRelationInput = {
    id?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    network?: SortOrder
  }

  export type rag_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token_address?: string
    AND?: rag_tokensWhereInput | rag_tokensWhereInput[]
    OR?: rag_tokensWhereInput[]
    NOT?: rag_tokensWhereInput | rag_tokensWhereInput[]
    token_symbol?: StringFilter<"rag_tokens"> | string
    created_at?: DateTimeFilter<"rag_tokens"> | Date | string
    updated_at?: DateTimeFilter<"rag_tokens"> | Date | string
    network?: StringFilter<"rag_tokens"> | string
  }, "id" | "id" | "token_address">

  export type rag_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    network?: SortOrder
    _count?: rag_tokensCountOrderByAggregateInput
    _avg?: rag_tokensAvgOrderByAggregateInput
    _max?: rag_tokensMaxOrderByAggregateInput
    _min?: rag_tokensMinOrderByAggregateInput
    _sum?: rag_tokensSumOrderByAggregateInput
  }

  export type rag_tokensScalarWhereWithAggregatesInput = {
    AND?: rag_tokensScalarWhereWithAggregatesInput | rag_tokensScalarWhereWithAggregatesInput[]
    OR?: rag_tokensScalarWhereWithAggregatesInput[]
    NOT?: rag_tokensScalarWhereWithAggregatesInput | rag_tokensScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"rag_tokens"> | number
    token_address?: StringWithAggregatesFilter<"rag_tokens"> | string
    token_symbol?: StringWithAggregatesFilter<"rag_tokens"> | string
    created_at?: DateTimeWithAggregatesFilter<"rag_tokens"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"rag_tokens"> | Date | string
    network?: StringWithAggregatesFilter<"rag_tokens"> | string
  }

  export type tokensCreateInput = {
    address: string
    symbol?: string
    name?: string
    decimals?: number
    metadata: JsonNullValueInput | InputJsonValue
    network?: string
    token_created_at?: number
    created_at?: Date | string
    updated_at?: Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: string
    officials?: tokensCreateofficialsInput | string[]
    from_pumpfun_listening?: boolean
    completed_time?: number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type tokensUncheckedCreateInput = {
    id?: number
    address: string
    symbol?: string
    name?: string
    decimals?: number
    metadata: JsonNullValueInput | InputJsonValue
    network?: string
    token_created_at?: number
    created_at?: Date | string
    updated_at?: Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: string
    officials?: tokensCreateofficialsInput | string[]
    from_pumpfun_listening?: boolean
    completed_time?: number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type tokensUpdateInput = {
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: StringFieldUpdateOperationsInput | string
    officials?: tokensUpdateofficialsInput | string[]
    from_pumpfun_listening?: BoolFieldUpdateOperationsInput | boolean
    completed_time?: IntFieldUpdateOperationsInput | number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type tokensUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: StringFieldUpdateOperationsInput | string
    officials?: tokensUpdateofficialsInput | string[]
    from_pumpfun_listening?: BoolFieldUpdateOperationsInput | boolean
    completed_time?: IntFieldUpdateOperationsInput | number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type tokensCreateManyInput = {
    id?: number
    address: string
    symbol?: string
    name?: string
    decimals?: number
    metadata: JsonNullValueInput | InputJsonValue
    network?: string
    token_created_at?: number
    created_at?: Date | string
    updated_at?: Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: string
    officials?: tokensCreateofficialsInput | string[]
    from_pumpfun_listening?: boolean
    completed_time?: number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type tokensUpdateManyMutationInput = {
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: StringFieldUpdateOperationsInput | string
    officials?: tokensUpdateofficialsInput | string[]
    from_pumpfun_listening?: BoolFieldUpdateOperationsInput | boolean
    completed_time?: IntFieldUpdateOperationsInput | number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type tokensUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    pumpfun?: NullableJsonNullValueInput | InputJsonValue
    profile?: NullableJsonNullValueInput | InputJsonValue
    headline?: StringFieldUpdateOperationsInput | string
    officials?: tokensUpdateofficialsInput | string[]
    from_pumpfun_listening?: BoolFieldUpdateOperationsInput | boolean
    completed_time?: IntFieldUpdateOperationsInput | number
    analysis?: NullableJsonNullValueInput | InputJsonValue
    related_accounts?: NullableJsonNullValueInput | InputJsonValue
  }

  export type privy_userCreateInput = {
    did: string
    created_at?: Date | string
    updated_at?: Date | string
    email: string
    exp?: number
    invite_code?: string | null
    invite_code_bind_at?: number | null
    referral?: string | null
    pro_config?: pro_configCreateNestedOneWithoutPrivy_userInput
  }

  export type privy_userUncheckedCreateInput = {
    id?: number
    did: string
    created_at?: Date | string
    updated_at?: Date | string
    email: string
    pro?: number
    exp?: number
    invite_code?: string | null
    invite_code_bind_at?: number | null
    referral?: string | null
  }

  export type privy_userUpdateInput = {
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
    pro_config?: pro_configUpdateOneRequiredWithoutPrivy_userNestedInput
  }

  export type privy_userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    pro?: IntFieldUpdateOperationsInput | number
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type privy_userCreateManyInput = {
    id?: number
    did: string
    created_at?: Date | string
    updated_at?: Date | string
    email: string
    pro?: number
    exp?: number
    invite_code?: string | null
    invite_code_bind_at?: number | null
    referral?: string | null
  }

  export type privy_userUpdateManyMutationInput = {
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type privy_userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    pro?: IntFieldUpdateOperationsInput | number
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ai_analyzeCreateInput = {
    token_address: string
    analyze_en?: string
    analyze_zh?: string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    symbol?: string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: string | null
    type?: string
    version?: string
  }

  export type ai_analyzeUncheckedCreateInput = {
    id?: number
    token_address: string
    analyze_en?: string
    analyze_zh?: string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    symbol?: string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: string | null
    type?: string
    version?: string
  }

  export type ai_analyzeUpdateInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    analyze_en?: StringFieldUpdateOperationsInput | string
    analyze_zh?: StringFieldUpdateOperationsInput | string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    symbol?: StringFieldUpdateOperationsInput | string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
  }

  export type ai_analyzeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    analyze_en?: StringFieldUpdateOperationsInput | string
    analyze_zh?: StringFieldUpdateOperationsInput | string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    symbol?: StringFieldUpdateOperationsInput | string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
  }

  export type ai_analyzeCreateManyInput = {
    id?: number
    token_address: string
    analyze_en?: string
    analyze_zh?: string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    symbol?: string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: string | null
    type?: string
    version?: string
  }

  export type ai_analyzeUpdateManyMutationInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    analyze_en?: StringFieldUpdateOperationsInput | string
    analyze_zh?: StringFieldUpdateOperationsInput | string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    symbol?: StringFieldUpdateOperationsInput | string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
  }

  export type ai_analyzeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    analyze_en?: StringFieldUpdateOperationsInput | string
    analyze_zh?: StringFieldUpdateOperationsInput | string
    tweets?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    symbol?: StringFieldUpdateOperationsInput | string
    search_tweets?: JsonNullValueInput | InputJsonValue
    ai_resp?: NullableJsonNullValueInput | InputJsonValue
    template?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    version?: StringFieldUpdateOperationsInput | string
  }

  export type ruler_tweetsCreateInput = {
    token_address: string
    symbol?: string
    network?: string
    tweet_id?: string
    tweet_time?: number
    author?: string
    content: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ruler_tweetsUncheckedCreateInput = {
    id?: number
    token_address: string
    symbol?: string
    network?: string
    tweet_id?: string
    tweet_time?: number
    author?: string
    content: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ruler_tweetsUpdateInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    tweet_time?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ruler_tweetsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    tweet_time?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ruler_tweetsCreateManyInput = {
    id?: number
    token_address: string
    symbol?: string
    network?: string
    tweet_id?: string
    tweet_time?: number
    author?: string
    content: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ruler_tweetsUpdateManyMutationInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    tweet_time?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ruler_tweetsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    tweet_time?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    content?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_interactCreateInput = {
    token_address: string
    network?: string
    liker?: token_interactCreatelikerInput | string[]
    disliker?: token_interactCreatedislikerInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_interactUncheckedCreateInput = {
    id?: number
    token_address: string
    network?: string
    liker?: token_interactCreatelikerInput | string[]
    disliker?: token_interactCreatedislikerInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_interactUpdateInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    liker?: token_interactUpdatelikerInput | string[]
    disliker?: token_interactUpdatedislikerInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_interactUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    liker?: token_interactUpdatelikerInput | string[]
    disliker?: token_interactUpdatedislikerInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_interactCreateManyInput = {
    id?: number
    token_address: string
    network?: string
    liker?: token_interactCreatelikerInput | string[]
    disliker?: token_interactCreatedislikerInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_interactUpdateManyMutationInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    liker?: token_interactUpdatelikerInput | string[]
    disliker?: token_interactUpdatedislikerInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_interactUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    liker?: token_interactUpdatelikerInput | string[]
    disliker?: token_interactUpdatedislikerInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pro_logsCreateInput = {
    did?: string | null
    signature: string
    level?: number
    renewal?: number
    created_at?: Date | string
    updated_at?: Date | string
    email?: string | null
  }

  export type pro_logsUncheckedCreateInput = {
    id?: number
    did?: string | null
    signature: string
    level?: number
    renewal?: number
    created_at?: Date | string
    updated_at?: Date | string
    email?: string | null
  }

  export type pro_logsUpdateInput = {
    did?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    renewal?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pro_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    renewal?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pro_logsCreateManyInput = {
    id?: number
    did?: string | null
    signature: string
    level?: number
    renewal?: number
    created_at?: Date | string
    updated_at?: Date | string
    email?: string | null
  }

  export type pro_logsUpdateManyMutationInput = {
    did?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    renewal?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type pro_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: StringFieldUpdateOperationsInput | string
    level?: IntFieldUpdateOperationsInput | number
    renewal?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tweetsCreateInput = {
    token_address: string
    symbol?: string
    network?: string
    tweet_id?: string
    user_id?: string
    text?: string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: string
    related_user_id?: string
    favorite_count?: number
    quote_count?: number
    reply_count?: number
    retweet_count?: number
    author?: string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
    created_time?: number
    link?: string
    media_type?: string
    token_image?: string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: number
    is_official?: boolean
    text_zh?: string
  }

  export type tweetsUncheckedCreateInput = {
    id?: number
    token_address: string
    symbol?: string
    network?: string
    tweet_id?: string
    user_id?: string
    text?: string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: string
    related_user_id?: string
    favorite_count?: number
    quote_count?: number
    reply_count?: number
    retweet_count?: number
    author?: string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
    created_time?: number
    link?: string
    media_type?: string
    token_image?: string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: number
    is_official?: boolean
    text_zh?: string
  }

  export type tweetsUpdateInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: BoolFieldUpdateOperationsInput | boolean
    is_retweet?: BoolFieldUpdateOperationsInput | boolean
    is_quote?: BoolFieldUpdateOperationsInput | boolean
    is_reply?: BoolFieldUpdateOperationsInput | boolean
    is_like?: BoolFieldUpdateOperationsInput | boolean
    related_tweet_id?: StringFieldUpdateOperationsInput | string
    related_user_id?: StringFieldUpdateOperationsInput | string
    favorite_count?: IntFieldUpdateOperationsInput | number
    quote_count?: IntFieldUpdateOperationsInput | number
    reply_count?: IntFieldUpdateOperationsInput | number
    retweet_count?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_time?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    media_type?: StringFieldUpdateOperationsInput | string
    token_image?: StringFieldUpdateOperationsInput | string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: IntFieldUpdateOperationsInput | number
    is_official?: BoolFieldUpdateOperationsInput | boolean
    text_zh?: StringFieldUpdateOperationsInput | string
  }

  export type tweetsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: BoolFieldUpdateOperationsInput | boolean
    is_retweet?: BoolFieldUpdateOperationsInput | boolean
    is_quote?: BoolFieldUpdateOperationsInput | boolean
    is_reply?: BoolFieldUpdateOperationsInput | boolean
    is_like?: BoolFieldUpdateOperationsInput | boolean
    related_tweet_id?: StringFieldUpdateOperationsInput | string
    related_user_id?: StringFieldUpdateOperationsInput | string
    favorite_count?: IntFieldUpdateOperationsInput | number
    quote_count?: IntFieldUpdateOperationsInput | number
    reply_count?: IntFieldUpdateOperationsInput | number
    retweet_count?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_time?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    media_type?: StringFieldUpdateOperationsInput | string
    token_image?: StringFieldUpdateOperationsInput | string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: IntFieldUpdateOperationsInput | number
    is_official?: BoolFieldUpdateOperationsInput | boolean
    text_zh?: StringFieldUpdateOperationsInput | string
  }

  export type tweetsCreateManyInput = {
    id?: number
    token_address: string
    symbol?: string
    network?: string
    tweet_id?: string
    user_id?: string
    text?: string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: boolean
    is_retweet?: boolean
    is_quote?: boolean
    is_reply?: boolean
    is_like?: boolean
    related_tweet_id?: string
    related_user_id?: string
    favorite_count?: number
    quote_count?: number
    reply_count?: number
    retweet_count?: number
    author?: string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
    created_time?: number
    link?: string
    media_type?: string
    token_image?: string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: number
    is_official?: boolean
    text_zh?: string
  }

  export type tweetsUpdateManyMutationInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: BoolFieldUpdateOperationsInput | boolean
    is_retweet?: BoolFieldUpdateOperationsInput | boolean
    is_quote?: BoolFieldUpdateOperationsInput | boolean
    is_reply?: BoolFieldUpdateOperationsInput | boolean
    is_like?: BoolFieldUpdateOperationsInput | boolean
    related_tweet_id?: StringFieldUpdateOperationsInput | string
    related_user_id?: StringFieldUpdateOperationsInput | string
    favorite_count?: IntFieldUpdateOperationsInput | number
    quote_count?: IntFieldUpdateOperationsInput | number
    reply_count?: IntFieldUpdateOperationsInput | number
    retweet_count?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_time?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    media_type?: StringFieldUpdateOperationsInput | string
    token_image?: StringFieldUpdateOperationsInput | string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: IntFieldUpdateOperationsInput | number
    is_official?: BoolFieldUpdateOperationsInput | boolean
    text_zh?: StringFieldUpdateOperationsInput | string
  }

  export type tweetsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    tweet_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    text?: StringFieldUpdateOperationsInput | string
    medias?: NullableJsonNullValueInput | InputJsonValue
    is_self_send?: BoolFieldUpdateOperationsInput | boolean
    is_retweet?: BoolFieldUpdateOperationsInput | boolean
    is_quote?: BoolFieldUpdateOperationsInput | boolean
    is_reply?: BoolFieldUpdateOperationsInput | boolean
    is_like?: BoolFieldUpdateOperationsInput | boolean
    related_tweet_id?: StringFieldUpdateOperationsInput | string
    related_user_id?: StringFieldUpdateOperationsInput | string
    favorite_count?: IntFieldUpdateOperationsInput | number
    quote_count?: IntFieldUpdateOperationsInput | number
    reply_count?: IntFieldUpdateOperationsInput | number
    retweet_count?: IntFieldUpdateOperationsInput | number
    author?: StringFieldUpdateOperationsInput | string
    user?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_time?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    media_type?: StringFieldUpdateOperationsInput | string
    token_image?: StringFieldUpdateOperationsInput | string
    related_tweets?: JsonNullValueInput | InputJsonValue
    views?: IntFieldUpdateOperationsInput | number
    is_official?: BoolFieldUpdateOperationsInput | boolean
    text_zh?: StringFieldUpdateOperationsInput | string
  }

  export type filter_rulersCreateInput = {
    type?: string
    list?: filter_rulersCreatelistInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type filter_rulersUncheckedCreateInput = {
    id?: number
    type?: string
    list?: filter_rulersCreatelistInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type filter_rulersUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    list?: filter_rulersUpdatelistInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type filter_rulersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    list?: filter_rulersUpdatelistInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type filter_rulersCreateManyInput = {
    id?: number
    type?: string
    list?: filter_rulersCreatelistInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type filter_rulersUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    list?: filter_rulersUpdatelistInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type filter_rulersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    list?: filter_rulersUpdatelistInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tweet_latest_idCreateInput = {
    tweet_id?: string
    created_time?: number
    token_address?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type tweet_latest_idUncheckedCreateInput = {
    id?: number
    tweet_id?: string
    created_time?: number
    token_address?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type tweet_latest_idUpdateInput = {
    tweet_id?: StringFieldUpdateOperationsInput | string
    created_time?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tweet_latest_idUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tweet_id?: StringFieldUpdateOperationsInput | string
    created_time?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tweet_latest_idCreateManyInput = {
    id?: number
    tweet_id?: string
    created_time?: number
    token_address?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type tweet_latest_idUpdateManyMutationInput = {
    tweet_id?: StringFieldUpdateOperationsInput | string
    created_time?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tweet_latest_idUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tweet_id?: StringFieldUpdateOperationsInput | string
    created_time?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reference_tokensCreateInput = {
    address: string
    symbol?: string
    name?: string
    decimals?: number
    metadata: JsonNullValueInput | InputJsonValue
    network?: string
    token_created_at?: number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reference_tokensUncheckedCreateInput = {
    id?: number
    address: string
    symbol?: string
    name?: string
    decimals?: number
    metadata: JsonNullValueInput | InputJsonValue
    network?: string
    token_created_at?: number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reference_tokensUpdateInput = {
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reference_tokensUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reference_tokensCreateManyInput = {
    id?: number
    address: string
    symbol?: string
    name?: string
    decimals?: number
    metadata: JsonNullValueInput | InputJsonValue
    network?: string
    token_created_at?: number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type reference_tokensUpdateManyMutationInput = {
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type reference_tokensUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    symbol?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    decimals?: IntFieldUpdateOperationsInput | number
    metadata?: JsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    token_created_at?: IntFieldUpdateOperationsInput | number
    social_links?: JsonNullValueInput | InputJsonValue
    tweet_analyze?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invite_codeCreateInput = {
    code?: string
    user_did?: string
    created_at?: Date | string
    updated_at?: Date | string
    user_email?: string | null
    pending?: number
  }

  export type invite_codeUncheckedCreateInput = {
    id?: number
    code?: string
    user_did?: string
    created_at?: Date | string
    updated_at?: Date | string
    user_email?: string | null
    pending?: number
  }

  export type invite_codeUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    user_did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    pending?: IntFieldUpdateOperationsInput | number
  }

  export type invite_codeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    user_did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    pending?: IntFieldUpdateOperationsInput | number
  }

  export type invite_codeCreateManyInput = {
    id?: number
    code?: string
    user_did?: string
    created_at?: Date | string
    updated_at?: Date | string
    user_email?: string | null
    pending?: number
  }

  export type invite_codeUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    user_did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    pending?: IntFieldUpdateOperationsInput | number
  }

  export type invite_codeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    user_did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    pending?: IntFieldUpdateOperationsInput | number
  }

  export type pro_configCreateInput = {
    config: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    privy_user?: privy_userCreateNestedManyWithoutPro_configInput
  }

  export type pro_configUncheckedCreateInput = {
    id?: number
    config: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    privy_user?: privy_userUncheckedCreateNestedManyWithoutPro_configInput
  }

  export type pro_configUpdateInput = {
    config?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    privy_user?: privy_userUpdateManyWithoutPro_configNestedInput
  }

  export type pro_configUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    config?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    privy_user?: privy_userUncheckedUpdateManyWithoutPro_configNestedInput
  }

  export type pro_configCreateManyInput = {
    id?: number
    config: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type pro_configUpdateManyMutationInput = {
    config?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pro_configUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    config?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_service_call_logsCreateInput = {
    did: string
    call_date?: number
    call_count?: number
    service?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_service_call_logsUncheckedCreateInput = {
    id?: number
    did: string
    call_date?: number
    call_count?: number
    service?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_service_call_logsUpdateInput = {
    did?: StringFieldUpdateOperationsInput | string
    call_date?: IntFieldUpdateOperationsInput | number
    call_count?: IntFieldUpdateOperationsInput | number
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_service_call_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    call_date?: IntFieldUpdateOperationsInput | number
    call_count?: IntFieldUpdateOperationsInput | number
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_service_call_logsCreateManyInput = {
    id?: number
    did: string
    call_date?: number
    call_count?: number
    service?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_service_call_logsUpdateManyMutationInput = {
    did?: StringFieldUpdateOperationsInput | string
    call_date?: IntFieldUpdateOperationsInput | number
    call_count?: IntFieldUpdateOperationsInput | number
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_service_call_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    call_date?: IntFieldUpdateOperationsInput | number
    call_count?: IntFieldUpdateOperationsInput | number
    service?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invite_code_bind_logsCreateInput = {
    code: string
    email: string
    signature: string
    did?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type invite_code_bind_logsUncheckedCreateInput = {
    id?: number
    code: string
    email: string
    signature: string
    did?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type invite_code_bind_logsUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    signature?: StringFieldUpdateOperationsInput | string
    did?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invite_code_bind_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    signature?: StringFieldUpdateOperationsInput | string
    did?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invite_code_bind_logsCreateManyInput = {
    id?: number
    code: string
    email: string
    signature: string
    did?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type invite_code_bind_logsUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    signature?: StringFieldUpdateOperationsInput | string
    did?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type invite_code_bind_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    signature?: StringFieldUpdateOperationsInput | string
    did?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type watchlistCreateInput = {
    did: string
    token_address: string
    token_symbol?: string | null
    url?: string | null
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type watchlistUncheckedCreateInput = {
    id?: number
    did: string
    token_address: string
    token_symbol?: string | null
    url?: string | null
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type watchlistUpdateInput = {
    did?: StringFieldUpdateOperationsInput | string
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type watchlistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type watchlistCreateManyInput = {
    id?: number
    did: string
    token_address: string
    token_symbol?: string | null
    url?: string | null
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type watchlistUpdateManyMutationInput = {
    did?: StringFieldUpdateOperationsInput | string
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type watchlistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type click_logsCreateInput = {
    did?: string
    type?: string
    content?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type click_logsUncheckedCreateInput = {
    id?: number
    did?: string
    type?: string
    content?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type click_logsUpdateInput = {
    did?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type click_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type click_logsCreateManyInput = {
    id?: number
    did?: string
    type?: string
    content?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type click_logsUpdateManyMutationInput = {
    did?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type click_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type smart_walletsCreateInput = {
    address: string
    twitter_handle?: string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    alias?: string | null
  }

  export type smart_walletsUncheckedCreateInput = {
    id?: number
    address: string
    twitter_handle?: string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    alias?: string | null
  }

  export type smart_walletsUpdateInput = {
    address?: StringFieldUpdateOperationsInput | string
    twitter_handle?: NullableStringFieldUpdateOperationsInput | string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type smart_walletsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    twitter_handle?: NullableStringFieldUpdateOperationsInput | string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type smart_walletsCreateManyInput = {
    id?: number
    address: string
    twitter_handle?: string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    alias?: string | null
  }

  export type smart_walletsUpdateManyMutationInput = {
    address?: StringFieldUpdateOperationsInput | string
    twitter_handle?: NullableStringFieldUpdateOperationsInput | string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type smart_walletsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: StringFieldUpdateOperationsInput | string
    twitter_handle?: NullableStringFieldUpdateOperationsInput | string | null
    account_info?: NullableJsonNullValueInput | InputJsonValue
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type communityCreateInput = {
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community_referral?: community_referralCreateNestedManyWithoutCommunityInput
    community_revenue?: community_revenueCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateInput = {
    id?: number
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community_referral?: community_referralUncheckedCreateNestedManyWithoutCommunityInput
    community_revenue?: community_revenueUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral?: community_referralUpdateManyWithoutCommunityNestedInput
    community_revenue?: community_revenueUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral?: community_referralUncheckedUpdateManyWithoutCommunityNestedInput
    community_revenue?: community_revenueUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type communityCreateManyInput = {
    id?: number
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type communityUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type communityUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referralCreateInput = {
    expiration_date?: number
    state?: number
    code: string
    proportion?: number
    sol_address: string
    eth_address?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community?: communityCreateNestedOneWithoutCommunity_referralInput
  }

  export type community_referralUncheckedCreateInput = {
    id?: number
    expiration_date?: number
    state?: number
    code: string
    community_id?: number
    proportion?: number
    sol_address: string
    eth_address?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referralUpdateInput = {
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community?: communityUpdateOneRequiredWithoutCommunity_referralNestedInput
  }

  export type community_referralUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    community_id?: IntFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referralCreateManyInput = {
    id?: number
    expiration_date?: number
    state?: number
    code: string
    community_id?: number
    proportion?: number
    sol_address: string
    eth_address?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referralUpdateManyMutationInput = {
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referralUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    community_id?: IntFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_payed_logsCreateInput = {
    token: string
    type: string
    amount: number
    signature: string
    network?: string
    payee_address: string
    created_at?: Date | string
    updated_at?: Date | string
    community_revenue?: community_revenueCreateNestedOneWithoutCommunity_referral_payed_logsInput
  }

  export type community_referral_payed_logsUncheckedCreateInput = {
    id?: number
    ref_revenue?: number
    token: string
    type: string
    amount: number
    signature: string
    network?: string
    payee_address: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_payed_logsUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_revenue?: community_revenueUpdateOneRequiredWithoutCommunity_referral_payed_logsNestedInput
  }

  export type community_referral_payed_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ref_revenue?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_payed_logsCreateManyInput = {
    id?: number
    ref_revenue?: number
    token: string
    type: string
    amount: number
    signature: string
    network?: string
    payee_address: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_payed_logsUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_payed_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ref_revenue?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_revenue_logsCreateInput = {
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
    community_revenue?: community_revenueCreateNestedOneWithoutCommunity_referral_revenue_logsInput
  }

  export type community_referral_revenue_logsUncheckedCreateInput = {
    id?: number
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network?: string
    ref_revenue?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_revenue_logsUpdateInput = {
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_revenue?: community_revenueUpdateOneRequiredWithoutCommunity_referral_revenue_logsNestedInput
  }

  export type community_referral_revenue_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    ref_revenue?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_revenue_logsCreateManyInput = {
    id?: number
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network?: string
    ref_revenue?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_revenue_logsUpdateManyMutationInput = {
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_revenue_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    ref_revenue?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_revenueCreateInput = {
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_payed_logs?: community_referral_payed_logsCreateNestedManyWithoutCommunity_revenueInput
    community_referral_revenue_logs?: community_referral_revenue_logsCreateNestedManyWithoutCommunity_revenueInput
    community?: communityCreateNestedOneWithoutCommunity_revenueInput
  }

  export type community_revenueUncheckedCreateInput = {
    id?: number
    community_id?: number
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_payed_logs?: community_referral_payed_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput
    community_referral_revenue_logs?: community_referral_revenue_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput
  }

  export type community_revenueUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_payed_logs?: community_referral_payed_logsUpdateManyWithoutCommunity_revenueNestedInput
    community_referral_revenue_logs?: community_referral_revenue_logsUpdateManyWithoutCommunity_revenueNestedInput
    community?: communityUpdateOneRequiredWithoutCommunity_revenueNestedInput
  }

  export type community_revenueUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_payed_logs?: community_referral_payed_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput
    community_referral_revenue_logs?: community_referral_revenue_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput
  }

  export type community_revenueCreateManyInput = {
    id?: number
    community_id?: number
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_revenueUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_revenueUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rag_tokensCreateInput = {
    token_address: string
    token_symbol?: string
    created_at?: Date | string
    updated_at?: Date | string
    network?: string
  }

  export type rag_tokensUncheckedCreateInput = {
    id?: number
    token_address: string
    token_symbol?: string
    created_at?: Date | string
    updated_at?: Date | string
    network?: string
  }

  export type rag_tokensUpdateInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    network?: StringFieldUpdateOperationsInput | string
  }

  export type rag_tokensUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    network?: StringFieldUpdateOperationsInput | string
  }

  export type rag_tokensCreateManyInput = {
    id?: number
    token_address: string
    token_symbol?: string
    created_at?: Date | string
    updated_at?: Date | string
    network?: string
  }

  export type rag_tokensUpdateManyMutationInput = {
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    network?: StringFieldUpdateOperationsInput | string
  }

  export type rag_tokensUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token_address?: StringFieldUpdateOperationsInput | string
    token_symbol?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    network?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tokensCountOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    metadata?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    social_links?: SortOrder
    tweet_analyze?: SortOrder
    pumpfun?: SortOrder
    profile?: SortOrder
    headline?: SortOrder
    officials?: SortOrder
    from_pumpfun_listening?: SortOrder
    completed_time?: SortOrder
    analysis?: SortOrder
    related_accounts?: SortOrder
  }

  export type tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    decimals?: SortOrder
    token_created_at?: SortOrder
    completed_time?: SortOrder
  }

  export type tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tweet_analyze?: SortOrder
    headline?: SortOrder
    from_pumpfun_listening?: SortOrder
    completed_time?: SortOrder
  }

  export type tokensMinOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tweet_analyze?: SortOrder
    headline?: SortOrder
    from_pumpfun_listening?: SortOrder
    completed_time?: SortOrder
  }

  export type tokensSumOrderByAggregateInput = {
    id?: SortOrder
    decimals?: SortOrder
    token_created_at?: SortOrder
    completed_time?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Pro_configScalarRelationFilter = {
    is?: pro_configWhereInput
    isNot?: pro_configWhereInput
  }

  export type privy_userCountOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code?: SortOrder
    invite_code_bind_at?: SortOrder
    referral?: SortOrder
  }

  export type privy_userAvgOrderByAggregateInput = {
    id?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code_bind_at?: SortOrder
  }

  export type privy_userMaxOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code?: SortOrder
    invite_code_bind_at?: SortOrder
    referral?: SortOrder
  }

  export type privy_userMinOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code?: SortOrder
    invite_code_bind_at?: SortOrder
    referral?: SortOrder
  }

  export type privy_userSumOrderByAggregateInput = {
    id?: SortOrder
    pro?: SortOrder
    exp?: SortOrder
    invite_code_bind_at?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type ai_analyzeCountOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    analyze_en?: SortOrder
    analyze_zh?: SortOrder
    tweets?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    symbol?: SortOrder
    search_tweets?: SortOrder
    ai_resp?: SortOrder
    template?: SortOrder
    type?: SortOrder
    version?: SortOrder
  }

  export type ai_analyzeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ai_analyzeMaxOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    analyze_en?: SortOrder
    analyze_zh?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    symbol?: SortOrder
    template?: SortOrder
    type?: SortOrder
    version?: SortOrder
  }

  export type ai_analyzeMinOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    analyze_en?: SortOrder
    analyze_zh?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    symbol?: SortOrder
    template?: SortOrder
    type?: SortOrder
    version?: SortOrder
  }

  export type ai_analyzeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ruler_tweetsTweet_idToken_addressCompoundUniqueInput = {
    tweet_id: string
    token_address: string
  }

  export type ruler_tweetsCountOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    tweet_time?: SortOrder
    author?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ruler_tweetsAvgOrderByAggregateInput = {
    id?: SortOrder
    tweet_time?: SortOrder
  }

  export type ruler_tweetsMaxOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    tweet_time?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ruler_tweetsMinOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    tweet_time?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ruler_tweetsSumOrderByAggregateInput = {
    id?: SortOrder
    tweet_time?: SortOrder
  }

  export type token_interactCountOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    network?: SortOrder
    liker?: SortOrder
    disliker?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_interactAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type token_interactMaxOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_interactMinOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_interactSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type pro_logsCountOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    signature?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
  }

  export type pro_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
  }

  export type pro_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    signature?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
  }

  export type pro_logsMinOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    signature?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
  }

  export type pro_logsSumOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    renewal?: SortOrder
  }

  export type tweetsTweet_idToken_addressCompoundUniqueInput = {
    tweet_id: string
    token_address: string
  }

  export type tweetsCountOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    medias?: SortOrder
    is_self_send?: SortOrder
    is_retweet?: SortOrder
    is_quote?: SortOrder
    is_reply?: SortOrder
    is_like?: SortOrder
    related_tweet_id?: SortOrder
    related_user_id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    author?: SortOrder
    user?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_time?: SortOrder
    link?: SortOrder
    media_type?: SortOrder
    token_image?: SortOrder
    related_tweets?: SortOrder
    views?: SortOrder
    is_official?: SortOrder
    text_zh?: SortOrder
  }

  export type tweetsAvgOrderByAggregateInput = {
    id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    created_time?: SortOrder
    views?: SortOrder
  }

  export type tweetsMaxOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    is_self_send?: SortOrder
    is_retweet?: SortOrder
    is_quote?: SortOrder
    is_reply?: SortOrder
    is_like?: SortOrder
    related_tweet_id?: SortOrder
    related_user_id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_time?: SortOrder
    link?: SortOrder
    media_type?: SortOrder
    token_image?: SortOrder
    views?: SortOrder
    is_official?: SortOrder
    text_zh?: SortOrder
  }

  export type tweetsMinOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    symbol?: SortOrder
    network?: SortOrder
    tweet_id?: SortOrder
    user_id?: SortOrder
    text?: SortOrder
    is_self_send?: SortOrder
    is_retweet?: SortOrder
    is_quote?: SortOrder
    is_reply?: SortOrder
    is_like?: SortOrder
    related_tweet_id?: SortOrder
    related_user_id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    created_time?: SortOrder
    link?: SortOrder
    media_type?: SortOrder
    token_image?: SortOrder
    views?: SortOrder
    is_official?: SortOrder
    text_zh?: SortOrder
  }

  export type tweetsSumOrderByAggregateInput = {
    id?: SortOrder
    favorite_count?: SortOrder
    quote_count?: SortOrder
    reply_count?: SortOrder
    retweet_count?: SortOrder
    created_time?: SortOrder
    views?: SortOrder
  }

  export type filter_rulersCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    list?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type filter_rulersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type filter_rulersMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type filter_rulersMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type filter_rulersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tweet_latest_idCountOrderByAggregateInput = {
    id?: SortOrder
    tweet_id?: SortOrder
    created_time?: SortOrder
    token_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tweet_latest_idAvgOrderByAggregateInput = {
    id?: SortOrder
    created_time?: SortOrder
  }

  export type tweet_latest_idMaxOrderByAggregateInput = {
    id?: SortOrder
    tweet_id?: SortOrder
    created_time?: SortOrder
    token_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tweet_latest_idMinOrderByAggregateInput = {
    id?: SortOrder
    tweet_id?: SortOrder
    created_time?: SortOrder
    token_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tweet_latest_idSumOrderByAggregateInput = {
    id?: SortOrder
    created_time?: SortOrder
  }

  export type reference_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    metadata?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    social_links?: SortOrder
    tweet_analyze?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reference_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    decimals?: SortOrder
    token_created_at?: SortOrder
  }

  export type reference_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    tweet_analyze?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reference_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    symbol?: SortOrder
    name?: SortOrder
    decimals?: SortOrder
    network?: SortOrder
    token_created_at?: SortOrder
    tweet_analyze?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type reference_tokensSumOrderByAggregateInput = {
    id?: SortOrder
    decimals?: SortOrder
    token_created_at?: SortOrder
  }

  export type invite_codeCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    user_did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_email?: SortOrder
    pending?: SortOrder
  }

  export type invite_codeAvgOrderByAggregateInput = {
    id?: SortOrder
    pending?: SortOrder
  }

  export type invite_codeMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    user_did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_email?: SortOrder
    pending?: SortOrder
  }

  export type invite_codeMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    user_did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_email?: SortOrder
    pending?: SortOrder
  }

  export type invite_codeSumOrderByAggregateInput = {
    id?: SortOrder
    pending?: SortOrder
  }

  export type Privy_userListRelationFilter = {
    every?: privy_userWhereInput
    some?: privy_userWhereInput
    none?: privy_userWhereInput
  }

  export type privy_userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pro_configCountOrderByAggregateInput = {
    id?: SortOrder
    config?: SortOrder
    created_at?: SortOrder
  }

  export type pro_configAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type pro_configMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
  }

  export type pro_configMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
  }

  export type pro_configSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type user_service_call_logsDidCall_dateServiceCompoundUniqueInput = {
    did: string
    call_date: number
    service: string
  }

  export type user_service_call_logsCountOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_service_call_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
  }

  export type user_service_call_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_service_call_logsMinOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
    service?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_service_call_logsSumOrderByAggregateInput = {
    id?: SortOrder
    call_date?: SortOrder
    call_count?: SortOrder
  }

  export type invite_code_bind_logsCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    email?: SortOrder
    signature?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type invite_code_bind_logsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type invite_code_bind_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    email?: SortOrder
    signature?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type invite_code_bind_logsMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    email?: SortOrder
    signature?: SortOrder
    did?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type invite_code_bind_logsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type watchlistDidToken_addressNetworkCompoundUniqueInput = {
    did: string
    token_address: string
    network: string
  }

  export type watchlistCountOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    url?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type watchlistAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type watchlistMaxOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    url?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type watchlistMinOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    url?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type watchlistSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type click_logsCountOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type click_logsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type click_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type click_logsMinOrderByAggregateInput = {
    id?: SortOrder
    did?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type click_logsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type smart_walletsCountOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    twitter_handle?: SortOrder
    account_info?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alias?: SortOrder
  }

  export type smart_walletsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type smart_walletsMaxOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    twitter_handle?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alias?: SortOrder
  }

  export type smart_walletsMinOrderByAggregateInput = {
    id?: SortOrder
    address?: SortOrder
    twitter_handle?: SortOrder
    network?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alias?: SortOrder
  }

  export type smart_walletsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Community_referralListRelationFilter = {
    every?: community_referralWhereInput
    some?: community_referralWhereInput
    none?: community_referralWhereInput
  }

  export type Community_revenueListRelationFilter = {
    every?: community_revenueWhereInput
    some?: community_revenueWhereInput
    none?: community_revenueWhereInput
  }

  export type community_referralOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type community_revenueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type communityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type communityAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type communityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type communityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    contact?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type communitySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type CommunityScalarRelationFilter = {
    is?: communityWhereInput
    isNot?: communityWhereInput
  }

  export type community_referralCountOrderByAggregateInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    code?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
    sol_address?: SortOrder
    eth_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referralAvgOrderByAggregateInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
  }

  export type community_referralMaxOrderByAggregateInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    code?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
    sol_address?: SortOrder
    eth_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referralMinOrderByAggregateInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    code?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
    sol_address?: SortOrder
    eth_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referralSumOrderByAggregateInput = {
    id?: SortOrder
    expiration_date?: SortOrder
    state?: SortOrder
    community_id?: SortOrder
    proportion?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type Community_revenueScalarRelationFilter = {
    is?: community_revenueWhereInput
    isNot?: community_revenueWhereInput
  }

  export type community_referral_payed_logsCountOrderByAggregateInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    token?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    payee_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referral_payed_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    amount?: SortOrder
  }

  export type community_referral_payed_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    token?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    payee_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referral_payed_logsMinOrderByAggregateInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    token?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    payee_address?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referral_payed_logsSumOrderByAggregateInput = {
    id?: SortOrder
    ref_revenue?: SortOrder
    amount?: SortOrder
  }

  export type community_referral_revenue_logsCountOrderByAggregateInput = {
    id?: SortOrder
    user?: SortOrder
    amount?: SortOrder
    token?: SortOrder
    type?: SortOrder
    ref_code?: SortOrder
    proportion?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    ref_revenue?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referral_revenue_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    proportion?: SortOrder
    ref_revenue?: SortOrder
  }

  export type community_referral_revenue_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    user?: SortOrder
    amount?: SortOrder
    token?: SortOrder
    type?: SortOrder
    ref_code?: SortOrder
    proportion?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    ref_revenue?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referral_revenue_logsMinOrderByAggregateInput = {
    id?: SortOrder
    user?: SortOrder
    amount?: SortOrder
    token?: SortOrder
    type?: SortOrder
    ref_code?: SortOrder
    proportion?: SortOrder
    signature?: SortOrder
    network?: SortOrder
    ref_revenue?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_referral_revenue_logsSumOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    proportion?: SortOrder
    ref_revenue?: SortOrder
  }

  export type Community_referral_payed_logsListRelationFilter = {
    every?: community_referral_payed_logsWhereInput
    some?: community_referral_payed_logsWhereInput
    none?: community_referral_payed_logsWhereInput
  }

  export type Community_referral_revenue_logsListRelationFilter = {
    every?: community_referral_revenue_logsWhereInput
    some?: community_referral_revenue_logsWhereInput
    none?: community_referral_revenue_logsWhereInput
  }

  export type community_referral_payed_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type community_referral_revenue_logsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type community_revenueCommunity_idTokenCompoundUniqueInput = {
    community_id: number
    token: string
  }

  export type community_revenueCountOrderByAggregateInput = {
    id?: SortOrder
    community_id?: SortOrder
    token?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_revenueAvgOrderByAggregateInput = {
    id?: SortOrder
    community_id?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
  }

  export type community_revenueMaxOrderByAggregateInput = {
    id?: SortOrder
    community_id?: SortOrder
    token?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_revenueMinOrderByAggregateInput = {
    id?: SortOrder
    community_id?: SortOrder
    token?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_revenueSumOrderByAggregateInput = {
    id?: SortOrder
    community_id?: SortOrder
    total?: SortOrder
    proportion?: SortOrder
    payed?: SortOrder
  }

  export type rag_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    network?: SortOrder
  }

  export type rag_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type rag_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    network?: SortOrder
  }

  export type rag_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    token_address?: SortOrder
    token_symbol?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    network?: SortOrder
  }

  export type rag_tokensSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tokensCreateofficialsInput = {
    set: string[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type tokensUpdateofficialsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type pro_configCreateNestedOneWithoutPrivy_userInput = {
    create?: XOR<pro_configCreateWithoutPrivy_userInput, pro_configUncheckedCreateWithoutPrivy_userInput>
    connectOrCreate?: pro_configCreateOrConnectWithoutPrivy_userInput
    connect?: pro_configWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type pro_configUpdateOneRequiredWithoutPrivy_userNestedInput = {
    create?: XOR<pro_configCreateWithoutPrivy_userInput, pro_configUncheckedCreateWithoutPrivy_userInput>
    connectOrCreate?: pro_configCreateOrConnectWithoutPrivy_userInput
    upsert?: pro_configUpsertWithoutPrivy_userInput
    connect?: pro_configWhereUniqueInput
    update?: XOR<XOR<pro_configUpdateToOneWithWhereWithoutPrivy_userInput, pro_configUpdateWithoutPrivy_userInput>, pro_configUncheckedUpdateWithoutPrivy_userInput>
  }

  export type token_interactCreatelikerInput = {
    set: string[]
  }

  export type token_interactCreatedislikerInput = {
    set: string[]
  }

  export type token_interactUpdatelikerInput = {
    set?: string[]
    push?: string | string[]
  }

  export type token_interactUpdatedislikerInput = {
    set?: string[]
    push?: string | string[]
  }

  export type filter_rulersCreatelistInput = {
    set: string[]
  }

  export type filter_rulersUpdatelistInput = {
    set?: string[]
    push?: string | string[]
  }

  export type privy_userCreateNestedManyWithoutPro_configInput = {
    create?: XOR<privy_userCreateWithoutPro_configInput, privy_userUncheckedCreateWithoutPro_configInput> | privy_userCreateWithoutPro_configInput[] | privy_userUncheckedCreateWithoutPro_configInput[]
    connectOrCreate?: privy_userCreateOrConnectWithoutPro_configInput | privy_userCreateOrConnectWithoutPro_configInput[]
    createMany?: privy_userCreateManyPro_configInputEnvelope
    connect?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
  }

  export type privy_userUncheckedCreateNestedManyWithoutPro_configInput = {
    create?: XOR<privy_userCreateWithoutPro_configInput, privy_userUncheckedCreateWithoutPro_configInput> | privy_userCreateWithoutPro_configInput[] | privy_userUncheckedCreateWithoutPro_configInput[]
    connectOrCreate?: privy_userCreateOrConnectWithoutPro_configInput | privy_userCreateOrConnectWithoutPro_configInput[]
    createMany?: privy_userCreateManyPro_configInputEnvelope
    connect?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
  }

  export type privy_userUpdateManyWithoutPro_configNestedInput = {
    create?: XOR<privy_userCreateWithoutPro_configInput, privy_userUncheckedCreateWithoutPro_configInput> | privy_userCreateWithoutPro_configInput[] | privy_userUncheckedCreateWithoutPro_configInput[]
    connectOrCreate?: privy_userCreateOrConnectWithoutPro_configInput | privy_userCreateOrConnectWithoutPro_configInput[]
    upsert?: privy_userUpsertWithWhereUniqueWithoutPro_configInput | privy_userUpsertWithWhereUniqueWithoutPro_configInput[]
    createMany?: privy_userCreateManyPro_configInputEnvelope
    set?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    disconnect?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    delete?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    connect?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    update?: privy_userUpdateWithWhereUniqueWithoutPro_configInput | privy_userUpdateWithWhereUniqueWithoutPro_configInput[]
    updateMany?: privy_userUpdateManyWithWhereWithoutPro_configInput | privy_userUpdateManyWithWhereWithoutPro_configInput[]
    deleteMany?: privy_userScalarWhereInput | privy_userScalarWhereInput[]
  }

  export type privy_userUncheckedUpdateManyWithoutPro_configNestedInput = {
    create?: XOR<privy_userCreateWithoutPro_configInput, privy_userUncheckedCreateWithoutPro_configInput> | privy_userCreateWithoutPro_configInput[] | privy_userUncheckedCreateWithoutPro_configInput[]
    connectOrCreate?: privy_userCreateOrConnectWithoutPro_configInput | privy_userCreateOrConnectWithoutPro_configInput[]
    upsert?: privy_userUpsertWithWhereUniqueWithoutPro_configInput | privy_userUpsertWithWhereUniqueWithoutPro_configInput[]
    createMany?: privy_userCreateManyPro_configInputEnvelope
    set?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    disconnect?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    delete?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    connect?: privy_userWhereUniqueInput | privy_userWhereUniqueInput[]
    update?: privy_userUpdateWithWhereUniqueWithoutPro_configInput | privy_userUpdateWithWhereUniqueWithoutPro_configInput[]
    updateMany?: privy_userUpdateManyWithWhereWithoutPro_configInput | privy_userUpdateManyWithWhereWithoutPro_configInput[]
    deleteMany?: privy_userScalarWhereInput | privy_userScalarWhereInput[]
  }

  export type community_referralCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_referralCreateWithoutCommunityInput, community_referralUncheckedCreateWithoutCommunityInput> | community_referralCreateWithoutCommunityInput[] | community_referralUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_referralCreateOrConnectWithoutCommunityInput | community_referralCreateOrConnectWithoutCommunityInput[]
    createMany?: community_referralCreateManyCommunityInputEnvelope
    connect?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
  }

  export type community_revenueCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_revenueCreateWithoutCommunityInput, community_revenueUncheckedCreateWithoutCommunityInput> | community_revenueCreateWithoutCommunityInput[] | community_revenueUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunityInput | community_revenueCreateOrConnectWithoutCommunityInput[]
    createMany?: community_revenueCreateManyCommunityInputEnvelope
    connect?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
  }

  export type community_referralUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_referralCreateWithoutCommunityInput, community_referralUncheckedCreateWithoutCommunityInput> | community_referralCreateWithoutCommunityInput[] | community_referralUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_referralCreateOrConnectWithoutCommunityInput | community_referralCreateOrConnectWithoutCommunityInput[]
    createMany?: community_referralCreateManyCommunityInputEnvelope
    connect?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
  }

  export type community_revenueUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_revenueCreateWithoutCommunityInput, community_revenueUncheckedCreateWithoutCommunityInput> | community_revenueCreateWithoutCommunityInput[] | community_revenueUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunityInput | community_revenueCreateOrConnectWithoutCommunityInput[]
    createMany?: community_revenueCreateManyCommunityInputEnvelope
    connect?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
  }

  export type community_referralUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_referralCreateWithoutCommunityInput, community_referralUncheckedCreateWithoutCommunityInput> | community_referralCreateWithoutCommunityInput[] | community_referralUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_referralCreateOrConnectWithoutCommunityInput | community_referralCreateOrConnectWithoutCommunityInput[]
    upsert?: community_referralUpsertWithWhereUniqueWithoutCommunityInput | community_referralUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_referralCreateManyCommunityInputEnvelope
    set?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    disconnect?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    delete?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    connect?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    update?: community_referralUpdateWithWhereUniqueWithoutCommunityInput | community_referralUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_referralUpdateManyWithWhereWithoutCommunityInput | community_referralUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_referralScalarWhereInput | community_referralScalarWhereInput[]
  }

  export type community_revenueUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_revenueCreateWithoutCommunityInput, community_revenueUncheckedCreateWithoutCommunityInput> | community_revenueCreateWithoutCommunityInput[] | community_revenueUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunityInput | community_revenueCreateOrConnectWithoutCommunityInput[]
    upsert?: community_revenueUpsertWithWhereUniqueWithoutCommunityInput | community_revenueUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_revenueCreateManyCommunityInputEnvelope
    set?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    disconnect?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    delete?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    connect?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    update?: community_revenueUpdateWithWhereUniqueWithoutCommunityInput | community_revenueUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_revenueUpdateManyWithWhereWithoutCommunityInput | community_revenueUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_revenueScalarWhereInput | community_revenueScalarWhereInput[]
  }

  export type community_referralUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_referralCreateWithoutCommunityInput, community_referralUncheckedCreateWithoutCommunityInput> | community_referralCreateWithoutCommunityInput[] | community_referralUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_referralCreateOrConnectWithoutCommunityInput | community_referralCreateOrConnectWithoutCommunityInput[]
    upsert?: community_referralUpsertWithWhereUniqueWithoutCommunityInput | community_referralUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_referralCreateManyCommunityInputEnvelope
    set?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    disconnect?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    delete?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    connect?: community_referralWhereUniqueInput | community_referralWhereUniqueInput[]
    update?: community_referralUpdateWithWhereUniqueWithoutCommunityInput | community_referralUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_referralUpdateManyWithWhereWithoutCommunityInput | community_referralUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_referralScalarWhereInput | community_referralScalarWhereInput[]
  }

  export type community_revenueUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_revenueCreateWithoutCommunityInput, community_revenueUncheckedCreateWithoutCommunityInput> | community_revenueCreateWithoutCommunityInput[] | community_revenueUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunityInput | community_revenueCreateOrConnectWithoutCommunityInput[]
    upsert?: community_revenueUpsertWithWhereUniqueWithoutCommunityInput | community_revenueUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_revenueCreateManyCommunityInputEnvelope
    set?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    disconnect?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    delete?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    connect?: community_revenueWhereUniqueInput | community_revenueWhereUniqueInput[]
    update?: community_revenueUpdateWithWhereUniqueWithoutCommunityInput | community_revenueUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_revenueUpdateManyWithWhereWithoutCommunityInput | community_revenueUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_revenueScalarWhereInput | community_revenueScalarWhereInput[]
  }

  export type communityCreateNestedOneWithoutCommunity_referralInput = {
    create?: XOR<communityCreateWithoutCommunity_referralInput, communityUncheckedCreateWithoutCommunity_referralInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_referralInput
    connect?: communityWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type communityUpdateOneRequiredWithoutCommunity_referralNestedInput = {
    create?: XOR<communityCreateWithoutCommunity_referralInput, communityUncheckedCreateWithoutCommunity_referralInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_referralInput
    upsert?: communityUpsertWithoutCommunity_referralInput
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutCommunity_referralInput, communityUpdateWithoutCommunity_referralInput>, communityUncheckedUpdateWithoutCommunity_referralInput>
  }

  export type community_revenueCreateNestedOneWithoutCommunity_referral_payed_logsInput = {
    create?: XOR<community_revenueCreateWithoutCommunity_referral_payed_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_payed_logsInput>
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunity_referral_payed_logsInput
    connect?: community_revenueWhereUniqueInput
  }

  export type community_revenueUpdateOneRequiredWithoutCommunity_referral_payed_logsNestedInput = {
    create?: XOR<community_revenueCreateWithoutCommunity_referral_payed_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_payed_logsInput>
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunity_referral_payed_logsInput
    upsert?: community_revenueUpsertWithoutCommunity_referral_payed_logsInput
    connect?: community_revenueWhereUniqueInput
    update?: XOR<XOR<community_revenueUpdateToOneWithWhereWithoutCommunity_referral_payed_logsInput, community_revenueUpdateWithoutCommunity_referral_payed_logsInput>, community_revenueUncheckedUpdateWithoutCommunity_referral_payed_logsInput>
  }

  export type community_revenueCreateNestedOneWithoutCommunity_referral_revenue_logsInput = {
    create?: XOR<community_revenueCreateWithoutCommunity_referral_revenue_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_revenue_logsInput>
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunity_referral_revenue_logsInput
    connect?: community_revenueWhereUniqueInput
  }

  export type community_revenueUpdateOneRequiredWithoutCommunity_referral_revenue_logsNestedInput = {
    create?: XOR<community_revenueCreateWithoutCommunity_referral_revenue_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_revenue_logsInput>
    connectOrCreate?: community_revenueCreateOrConnectWithoutCommunity_referral_revenue_logsInput
    upsert?: community_revenueUpsertWithoutCommunity_referral_revenue_logsInput
    connect?: community_revenueWhereUniqueInput
    update?: XOR<XOR<community_revenueUpdateToOneWithWhereWithoutCommunity_referral_revenue_logsInput, community_revenueUpdateWithoutCommunity_referral_revenue_logsInput>, community_revenueUncheckedUpdateWithoutCommunity_referral_revenue_logsInput>
  }

  export type community_referral_payed_logsCreateNestedManyWithoutCommunity_revenueInput = {
    create?: XOR<community_referral_payed_logsCreateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_payed_logsCreateWithoutCommunity_revenueInput[] | community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput[]
    createMany?: community_referral_payed_logsCreateManyCommunity_revenueInputEnvelope
    connect?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
  }

  export type community_referral_revenue_logsCreateNestedManyWithoutCommunity_revenueInput = {
    create?: XOR<community_referral_revenue_logsCreateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_revenue_logsCreateWithoutCommunity_revenueInput[] | community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput[]
    createMany?: community_referral_revenue_logsCreateManyCommunity_revenueInputEnvelope
    connect?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
  }

  export type communityCreateNestedOneWithoutCommunity_revenueInput = {
    create?: XOR<communityCreateWithoutCommunity_revenueInput, communityUncheckedCreateWithoutCommunity_revenueInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_revenueInput
    connect?: communityWhereUniqueInput
  }

  export type community_referral_payed_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput = {
    create?: XOR<community_referral_payed_logsCreateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_payed_logsCreateWithoutCommunity_revenueInput[] | community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput[]
    createMany?: community_referral_payed_logsCreateManyCommunity_revenueInputEnvelope
    connect?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
  }

  export type community_referral_revenue_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput = {
    create?: XOR<community_referral_revenue_logsCreateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_revenue_logsCreateWithoutCommunity_revenueInput[] | community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput[]
    createMany?: community_referral_revenue_logsCreateManyCommunity_revenueInputEnvelope
    connect?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
  }

  export type community_referral_payed_logsUpdateManyWithoutCommunity_revenueNestedInput = {
    create?: XOR<community_referral_payed_logsCreateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_payed_logsCreateWithoutCommunity_revenueInput[] | community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput[]
    upsert?: community_referral_payed_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput | community_referral_payed_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput[]
    createMany?: community_referral_payed_logsCreateManyCommunity_revenueInputEnvelope
    set?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    disconnect?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    delete?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    connect?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    update?: community_referral_payed_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput | community_referral_payed_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput[]
    updateMany?: community_referral_payed_logsUpdateManyWithWhereWithoutCommunity_revenueInput | community_referral_payed_logsUpdateManyWithWhereWithoutCommunity_revenueInput[]
    deleteMany?: community_referral_payed_logsScalarWhereInput | community_referral_payed_logsScalarWhereInput[]
  }

  export type community_referral_revenue_logsUpdateManyWithoutCommunity_revenueNestedInput = {
    create?: XOR<community_referral_revenue_logsCreateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_revenue_logsCreateWithoutCommunity_revenueInput[] | community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput[]
    upsert?: community_referral_revenue_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput | community_referral_revenue_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput[]
    createMany?: community_referral_revenue_logsCreateManyCommunity_revenueInputEnvelope
    set?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    disconnect?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    delete?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    connect?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    update?: community_referral_revenue_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput | community_referral_revenue_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput[]
    updateMany?: community_referral_revenue_logsUpdateManyWithWhereWithoutCommunity_revenueInput | community_referral_revenue_logsUpdateManyWithWhereWithoutCommunity_revenueInput[]
    deleteMany?: community_referral_revenue_logsScalarWhereInput | community_referral_revenue_logsScalarWhereInput[]
  }

  export type communityUpdateOneRequiredWithoutCommunity_revenueNestedInput = {
    create?: XOR<communityCreateWithoutCommunity_revenueInput, communityUncheckedCreateWithoutCommunity_revenueInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_revenueInput
    upsert?: communityUpsertWithoutCommunity_revenueInput
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutCommunity_revenueInput, communityUpdateWithoutCommunity_revenueInput>, communityUncheckedUpdateWithoutCommunity_revenueInput>
  }

  export type community_referral_payed_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput = {
    create?: XOR<community_referral_payed_logsCreateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_payed_logsCreateWithoutCommunity_revenueInput[] | community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput[]
    upsert?: community_referral_payed_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput | community_referral_payed_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput[]
    createMany?: community_referral_payed_logsCreateManyCommunity_revenueInputEnvelope
    set?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    disconnect?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    delete?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    connect?: community_referral_payed_logsWhereUniqueInput | community_referral_payed_logsWhereUniqueInput[]
    update?: community_referral_payed_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput | community_referral_payed_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput[]
    updateMany?: community_referral_payed_logsUpdateManyWithWhereWithoutCommunity_revenueInput | community_referral_payed_logsUpdateManyWithWhereWithoutCommunity_revenueInput[]
    deleteMany?: community_referral_payed_logsScalarWhereInput | community_referral_payed_logsScalarWhereInput[]
  }

  export type community_referral_revenue_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput = {
    create?: XOR<community_referral_revenue_logsCreateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput> | community_referral_revenue_logsCreateWithoutCommunity_revenueInput[] | community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput[]
    connectOrCreate?: community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput | community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput[]
    upsert?: community_referral_revenue_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput | community_referral_revenue_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput[]
    createMany?: community_referral_revenue_logsCreateManyCommunity_revenueInputEnvelope
    set?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    disconnect?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    delete?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    connect?: community_referral_revenue_logsWhereUniqueInput | community_referral_revenue_logsWhereUniqueInput[]
    update?: community_referral_revenue_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput | community_referral_revenue_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput[]
    updateMany?: community_referral_revenue_logsUpdateManyWithWhereWithoutCommunity_revenueInput | community_referral_revenue_logsUpdateManyWithWhereWithoutCommunity_revenueInput[]
    deleteMany?: community_referral_revenue_logsScalarWhereInput | community_referral_revenue_logsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type pro_configCreateWithoutPrivy_userInput = {
    config: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type pro_configUncheckedCreateWithoutPrivy_userInput = {
    id?: number
    config: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type pro_configCreateOrConnectWithoutPrivy_userInput = {
    where: pro_configWhereUniqueInput
    create: XOR<pro_configCreateWithoutPrivy_userInput, pro_configUncheckedCreateWithoutPrivy_userInput>
  }

  export type pro_configUpsertWithoutPrivy_userInput = {
    update: XOR<pro_configUpdateWithoutPrivy_userInput, pro_configUncheckedUpdateWithoutPrivy_userInput>
    create: XOR<pro_configCreateWithoutPrivy_userInput, pro_configUncheckedCreateWithoutPrivy_userInput>
    where?: pro_configWhereInput
  }

  export type pro_configUpdateToOneWithWhereWithoutPrivy_userInput = {
    where?: pro_configWhereInput
    data: XOR<pro_configUpdateWithoutPrivy_userInput, pro_configUncheckedUpdateWithoutPrivy_userInput>
  }

  export type pro_configUpdateWithoutPrivy_userInput = {
    config?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pro_configUncheckedUpdateWithoutPrivy_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    config?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type privy_userCreateWithoutPro_configInput = {
    did: string
    created_at?: Date | string
    updated_at?: Date | string
    email: string
    exp?: number
    invite_code?: string | null
    invite_code_bind_at?: number | null
    referral?: string | null
  }

  export type privy_userUncheckedCreateWithoutPro_configInput = {
    id?: number
    did: string
    created_at?: Date | string
    updated_at?: Date | string
    email: string
    exp?: number
    invite_code?: string | null
    invite_code_bind_at?: number | null
    referral?: string | null
  }

  export type privy_userCreateOrConnectWithoutPro_configInput = {
    where: privy_userWhereUniqueInput
    create: XOR<privy_userCreateWithoutPro_configInput, privy_userUncheckedCreateWithoutPro_configInput>
  }

  export type privy_userCreateManyPro_configInputEnvelope = {
    data: privy_userCreateManyPro_configInput | privy_userCreateManyPro_configInput[]
    skipDuplicates?: boolean
  }

  export type privy_userUpsertWithWhereUniqueWithoutPro_configInput = {
    where: privy_userWhereUniqueInput
    update: XOR<privy_userUpdateWithoutPro_configInput, privy_userUncheckedUpdateWithoutPro_configInput>
    create: XOR<privy_userCreateWithoutPro_configInput, privy_userUncheckedCreateWithoutPro_configInput>
  }

  export type privy_userUpdateWithWhereUniqueWithoutPro_configInput = {
    where: privy_userWhereUniqueInput
    data: XOR<privy_userUpdateWithoutPro_configInput, privy_userUncheckedUpdateWithoutPro_configInput>
  }

  export type privy_userUpdateManyWithWhereWithoutPro_configInput = {
    where: privy_userScalarWhereInput
    data: XOR<privy_userUpdateManyMutationInput, privy_userUncheckedUpdateManyWithoutPro_configInput>
  }

  export type privy_userScalarWhereInput = {
    AND?: privy_userScalarWhereInput | privy_userScalarWhereInput[]
    OR?: privy_userScalarWhereInput[]
    NOT?: privy_userScalarWhereInput | privy_userScalarWhereInput[]
    id?: IntFilter<"privy_user"> | number
    did?: StringFilter<"privy_user"> | string
    created_at?: DateTimeFilter<"privy_user"> | Date | string
    updated_at?: DateTimeFilter<"privy_user"> | Date | string
    email?: StringFilter<"privy_user"> | string
    pro?: IntFilter<"privy_user"> | number
    exp?: IntFilter<"privy_user"> | number
    invite_code?: StringNullableFilter<"privy_user"> | string | null
    invite_code_bind_at?: IntNullableFilter<"privy_user"> | number | null
    referral?: StringNullableFilter<"privy_user"> | string | null
  }

  export type community_referralCreateWithoutCommunityInput = {
    expiration_date?: number
    state?: number
    code: string
    proportion?: number
    sol_address: string
    eth_address?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referralUncheckedCreateWithoutCommunityInput = {
    id?: number
    expiration_date?: number
    state?: number
    code: string
    proportion?: number
    sol_address: string
    eth_address?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referralCreateOrConnectWithoutCommunityInput = {
    where: community_referralWhereUniqueInput
    create: XOR<community_referralCreateWithoutCommunityInput, community_referralUncheckedCreateWithoutCommunityInput>
  }

  export type community_referralCreateManyCommunityInputEnvelope = {
    data: community_referralCreateManyCommunityInput | community_referralCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type community_revenueCreateWithoutCommunityInput = {
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_payed_logs?: community_referral_payed_logsCreateNestedManyWithoutCommunity_revenueInput
    community_referral_revenue_logs?: community_referral_revenue_logsCreateNestedManyWithoutCommunity_revenueInput
  }

  export type community_revenueUncheckedCreateWithoutCommunityInput = {
    id?: number
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_payed_logs?: community_referral_payed_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput
    community_referral_revenue_logs?: community_referral_revenue_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput
  }

  export type community_revenueCreateOrConnectWithoutCommunityInput = {
    where: community_revenueWhereUniqueInput
    create: XOR<community_revenueCreateWithoutCommunityInput, community_revenueUncheckedCreateWithoutCommunityInput>
  }

  export type community_revenueCreateManyCommunityInputEnvelope = {
    data: community_revenueCreateManyCommunityInput | community_revenueCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type community_referralUpsertWithWhereUniqueWithoutCommunityInput = {
    where: community_referralWhereUniqueInput
    update: XOR<community_referralUpdateWithoutCommunityInput, community_referralUncheckedUpdateWithoutCommunityInput>
    create: XOR<community_referralCreateWithoutCommunityInput, community_referralUncheckedCreateWithoutCommunityInput>
  }

  export type community_referralUpdateWithWhereUniqueWithoutCommunityInput = {
    where: community_referralWhereUniqueInput
    data: XOR<community_referralUpdateWithoutCommunityInput, community_referralUncheckedUpdateWithoutCommunityInput>
  }

  export type community_referralUpdateManyWithWhereWithoutCommunityInput = {
    where: community_referralScalarWhereInput
    data: XOR<community_referralUpdateManyMutationInput, community_referralUncheckedUpdateManyWithoutCommunityInput>
  }

  export type community_referralScalarWhereInput = {
    AND?: community_referralScalarWhereInput | community_referralScalarWhereInput[]
    OR?: community_referralScalarWhereInput[]
    NOT?: community_referralScalarWhereInput | community_referralScalarWhereInput[]
    id?: IntFilter<"community_referral"> | number
    expiration_date?: IntFilter<"community_referral"> | number
    state?: IntFilter<"community_referral"> | number
    code?: StringFilter<"community_referral"> | string
    community_id?: IntFilter<"community_referral"> | number
    proportion?: FloatFilter<"community_referral"> | number
    sol_address?: StringFilter<"community_referral"> | string
    eth_address?: StringNullableFilter<"community_referral"> | string | null
    created_at?: DateTimeFilter<"community_referral"> | Date | string
    updated_at?: DateTimeFilter<"community_referral"> | Date | string
  }

  export type community_revenueUpsertWithWhereUniqueWithoutCommunityInput = {
    where: community_revenueWhereUniqueInput
    update: XOR<community_revenueUpdateWithoutCommunityInput, community_revenueUncheckedUpdateWithoutCommunityInput>
    create: XOR<community_revenueCreateWithoutCommunityInput, community_revenueUncheckedCreateWithoutCommunityInput>
  }

  export type community_revenueUpdateWithWhereUniqueWithoutCommunityInput = {
    where: community_revenueWhereUniqueInput
    data: XOR<community_revenueUpdateWithoutCommunityInput, community_revenueUncheckedUpdateWithoutCommunityInput>
  }

  export type community_revenueUpdateManyWithWhereWithoutCommunityInput = {
    where: community_revenueScalarWhereInput
    data: XOR<community_revenueUpdateManyMutationInput, community_revenueUncheckedUpdateManyWithoutCommunityInput>
  }

  export type community_revenueScalarWhereInput = {
    AND?: community_revenueScalarWhereInput | community_revenueScalarWhereInput[]
    OR?: community_revenueScalarWhereInput[]
    NOT?: community_revenueScalarWhereInput | community_revenueScalarWhereInput[]
    id?: IntFilter<"community_revenue"> | number
    community_id?: IntFilter<"community_revenue"> | number
    token?: StringFilter<"community_revenue"> | string
    total?: FloatFilter<"community_revenue"> | number
    proportion?: FloatFilter<"community_revenue"> | number
    payed?: FloatFilter<"community_revenue"> | number
    created_at?: DateTimeFilter<"community_revenue"> | Date | string
    updated_at?: DateTimeFilter<"community_revenue"> | Date | string
  }

  export type communityCreateWithoutCommunity_referralInput = {
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community_revenue?: community_revenueCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutCommunity_referralInput = {
    id?: number
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community_revenue?: community_revenueUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutCommunity_referralInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutCommunity_referralInput, communityUncheckedCreateWithoutCommunity_referralInput>
  }

  export type communityUpsertWithoutCommunity_referralInput = {
    update: XOR<communityUpdateWithoutCommunity_referralInput, communityUncheckedUpdateWithoutCommunity_referralInput>
    create: XOR<communityCreateWithoutCommunity_referralInput, communityUncheckedCreateWithoutCommunity_referralInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutCommunity_referralInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutCommunity_referralInput, communityUncheckedUpdateWithoutCommunity_referralInput>
  }

  export type communityUpdateWithoutCommunity_referralInput = {
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_revenue?: community_revenueUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutCommunity_referralInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_revenue?: community_revenueUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type community_revenueCreateWithoutCommunity_referral_payed_logsInput = {
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_revenue_logs?: community_referral_revenue_logsCreateNestedManyWithoutCommunity_revenueInput
    community?: communityCreateNestedOneWithoutCommunity_revenueInput
  }

  export type community_revenueUncheckedCreateWithoutCommunity_referral_payed_logsInput = {
    id?: number
    community_id?: number
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_revenue_logs?: community_referral_revenue_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput
  }

  export type community_revenueCreateOrConnectWithoutCommunity_referral_payed_logsInput = {
    where: community_revenueWhereUniqueInput
    create: XOR<community_revenueCreateWithoutCommunity_referral_payed_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_payed_logsInput>
  }

  export type community_revenueUpsertWithoutCommunity_referral_payed_logsInput = {
    update: XOR<community_revenueUpdateWithoutCommunity_referral_payed_logsInput, community_revenueUncheckedUpdateWithoutCommunity_referral_payed_logsInput>
    create: XOR<community_revenueCreateWithoutCommunity_referral_payed_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_payed_logsInput>
    where?: community_revenueWhereInput
  }

  export type community_revenueUpdateToOneWithWhereWithoutCommunity_referral_payed_logsInput = {
    where?: community_revenueWhereInput
    data: XOR<community_revenueUpdateWithoutCommunity_referral_payed_logsInput, community_revenueUncheckedUpdateWithoutCommunity_referral_payed_logsInput>
  }

  export type community_revenueUpdateWithoutCommunity_referral_payed_logsInput = {
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_revenue_logs?: community_referral_revenue_logsUpdateManyWithoutCommunity_revenueNestedInput
    community?: communityUpdateOneRequiredWithoutCommunity_revenueNestedInput
  }

  export type community_revenueUncheckedUpdateWithoutCommunity_referral_payed_logsInput = {
    id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_revenue_logs?: community_referral_revenue_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput
  }

  export type community_revenueCreateWithoutCommunity_referral_revenue_logsInput = {
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_payed_logs?: community_referral_payed_logsCreateNestedManyWithoutCommunity_revenueInput
    community?: communityCreateNestedOneWithoutCommunity_revenueInput
  }

  export type community_revenueUncheckedCreateWithoutCommunity_referral_revenue_logsInput = {
    id?: number
    community_id?: number
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
    community_referral_payed_logs?: community_referral_payed_logsUncheckedCreateNestedManyWithoutCommunity_revenueInput
  }

  export type community_revenueCreateOrConnectWithoutCommunity_referral_revenue_logsInput = {
    where: community_revenueWhereUniqueInput
    create: XOR<community_revenueCreateWithoutCommunity_referral_revenue_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_revenue_logsInput>
  }

  export type community_revenueUpsertWithoutCommunity_referral_revenue_logsInput = {
    update: XOR<community_revenueUpdateWithoutCommunity_referral_revenue_logsInput, community_revenueUncheckedUpdateWithoutCommunity_referral_revenue_logsInput>
    create: XOR<community_revenueCreateWithoutCommunity_referral_revenue_logsInput, community_revenueUncheckedCreateWithoutCommunity_referral_revenue_logsInput>
    where?: community_revenueWhereInput
  }

  export type community_revenueUpdateToOneWithWhereWithoutCommunity_referral_revenue_logsInput = {
    where?: community_revenueWhereInput
    data: XOR<community_revenueUpdateWithoutCommunity_referral_revenue_logsInput, community_revenueUncheckedUpdateWithoutCommunity_referral_revenue_logsInput>
  }

  export type community_revenueUpdateWithoutCommunity_referral_revenue_logsInput = {
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_payed_logs?: community_referral_payed_logsUpdateManyWithoutCommunity_revenueNestedInput
    community?: communityUpdateOneRequiredWithoutCommunity_revenueNestedInput
  }

  export type community_revenueUncheckedUpdateWithoutCommunity_referral_revenue_logsInput = {
    id?: IntFieldUpdateOperationsInput | number
    community_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_payed_logs?: community_referral_payed_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput
  }

  export type community_referral_payed_logsCreateWithoutCommunity_revenueInput = {
    token: string
    type: string
    amount: number
    signature: string
    network?: string
    payee_address: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput = {
    id?: number
    token: string
    type: string
    amount: number
    signature: string
    network?: string
    payee_address: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_payed_logsCreateOrConnectWithoutCommunity_revenueInput = {
    where: community_referral_payed_logsWhereUniqueInput
    create: XOR<community_referral_payed_logsCreateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput>
  }

  export type community_referral_payed_logsCreateManyCommunity_revenueInputEnvelope = {
    data: community_referral_payed_logsCreateManyCommunity_revenueInput | community_referral_payed_logsCreateManyCommunity_revenueInput[]
    skipDuplicates?: boolean
  }

  export type community_referral_revenue_logsCreateWithoutCommunity_revenueInput = {
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput = {
    id?: number
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_revenue_logsCreateOrConnectWithoutCommunity_revenueInput = {
    where: community_referral_revenue_logsWhereUniqueInput
    create: XOR<community_referral_revenue_logsCreateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput>
  }

  export type community_referral_revenue_logsCreateManyCommunity_revenueInputEnvelope = {
    data: community_referral_revenue_logsCreateManyCommunity_revenueInput | community_referral_revenue_logsCreateManyCommunity_revenueInput[]
    skipDuplicates?: boolean
  }

  export type communityCreateWithoutCommunity_revenueInput = {
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community_referral?: community_referralCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutCommunity_revenueInput = {
    id?: number
    name: string
    contact?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    community_referral?: community_referralUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutCommunity_revenueInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutCommunity_revenueInput, communityUncheckedCreateWithoutCommunity_revenueInput>
  }

  export type community_referral_payed_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput = {
    where: community_referral_payed_logsWhereUniqueInput
    update: XOR<community_referral_payed_logsUpdateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedUpdateWithoutCommunity_revenueInput>
    create: XOR<community_referral_payed_logsCreateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedCreateWithoutCommunity_revenueInput>
  }

  export type community_referral_payed_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput = {
    where: community_referral_payed_logsWhereUniqueInput
    data: XOR<community_referral_payed_logsUpdateWithoutCommunity_revenueInput, community_referral_payed_logsUncheckedUpdateWithoutCommunity_revenueInput>
  }

  export type community_referral_payed_logsUpdateManyWithWhereWithoutCommunity_revenueInput = {
    where: community_referral_payed_logsScalarWhereInput
    data: XOR<community_referral_payed_logsUpdateManyMutationInput, community_referral_payed_logsUncheckedUpdateManyWithoutCommunity_revenueInput>
  }

  export type community_referral_payed_logsScalarWhereInput = {
    AND?: community_referral_payed_logsScalarWhereInput | community_referral_payed_logsScalarWhereInput[]
    OR?: community_referral_payed_logsScalarWhereInput[]
    NOT?: community_referral_payed_logsScalarWhereInput | community_referral_payed_logsScalarWhereInput[]
    id?: IntFilter<"community_referral_payed_logs"> | number
    ref_revenue?: IntFilter<"community_referral_payed_logs"> | number
    token?: StringFilter<"community_referral_payed_logs"> | string
    type?: StringFilter<"community_referral_payed_logs"> | string
    amount?: FloatFilter<"community_referral_payed_logs"> | number
    signature?: StringFilter<"community_referral_payed_logs"> | string
    network?: StringFilter<"community_referral_payed_logs"> | string
    payee_address?: StringFilter<"community_referral_payed_logs"> | string
    created_at?: DateTimeFilter<"community_referral_payed_logs"> | Date | string
    updated_at?: DateTimeFilter<"community_referral_payed_logs"> | Date | string
  }

  export type community_referral_revenue_logsUpsertWithWhereUniqueWithoutCommunity_revenueInput = {
    where: community_referral_revenue_logsWhereUniqueInput
    update: XOR<community_referral_revenue_logsUpdateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedUpdateWithoutCommunity_revenueInput>
    create: XOR<community_referral_revenue_logsCreateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedCreateWithoutCommunity_revenueInput>
  }

  export type community_referral_revenue_logsUpdateWithWhereUniqueWithoutCommunity_revenueInput = {
    where: community_referral_revenue_logsWhereUniqueInput
    data: XOR<community_referral_revenue_logsUpdateWithoutCommunity_revenueInput, community_referral_revenue_logsUncheckedUpdateWithoutCommunity_revenueInput>
  }

  export type community_referral_revenue_logsUpdateManyWithWhereWithoutCommunity_revenueInput = {
    where: community_referral_revenue_logsScalarWhereInput
    data: XOR<community_referral_revenue_logsUpdateManyMutationInput, community_referral_revenue_logsUncheckedUpdateManyWithoutCommunity_revenueInput>
  }

  export type community_referral_revenue_logsScalarWhereInput = {
    AND?: community_referral_revenue_logsScalarWhereInput | community_referral_revenue_logsScalarWhereInput[]
    OR?: community_referral_revenue_logsScalarWhereInput[]
    NOT?: community_referral_revenue_logsScalarWhereInput | community_referral_revenue_logsScalarWhereInput[]
    id?: IntFilter<"community_referral_revenue_logs"> | number
    user?: StringFilter<"community_referral_revenue_logs"> | string
    amount?: FloatFilter<"community_referral_revenue_logs"> | number
    token?: StringFilter<"community_referral_revenue_logs"> | string
    type?: StringFilter<"community_referral_revenue_logs"> | string
    ref_code?: StringFilter<"community_referral_revenue_logs"> | string
    proportion?: FloatFilter<"community_referral_revenue_logs"> | number
    signature?: StringFilter<"community_referral_revenue_logs"> | string
    network?: StringFilter<"community_referral_revenue_logs"> | string
    ref_revenue?: IntFilter<"community_referral_revenue_logs"> | number
    created_at?: DateTimeFilter<"community_referral_revenue_logs"> | Date | string
    updated_at?: DateTimeFilter<"community_referral_revenue_logs"> | Date | string
  }

  export type communityUpsertWithoutCommunity_revenueInput = {
    update: XOR<communityUpdateWithoutCommunity_revenueInput, communityUncheckedUpdateWithoutCommunity_revenueInput>
    create: XOR<communityCreateWithoutCommunity_revenueInput, communityUncheckedCreateWithoutCommunity_revenueInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutCommunity_revenueInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutCommunity_revenueInput, communityUncheckedUpdateWithoutCommunity_revenueInput>
  }

  export type communityUpdateWithoutCommunity_revenueInput = {
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral?: community_referralUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutCommunity_revenueInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral?: community_referralUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type privy_userCreateManyPro_configInput = {
    id?: number
    did: string
    created_at?: Date | string
    updated_at?: Date | string
    email: string
    exp?: number
    invite_code?: string | null
    invite_code_bind_at?: number | null
    referral?: string | null
  }

  export type privy_userUpdateWithoutPro_configInput = {
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type privy_userUncheckedUpdateWithoutPro_configInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type privy_userUncheckedUpdateManyWithoutPro_configInput = {
    id?: IntFieldUpdateOperationsInput | number
    did?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    exp?: IntFieldUpdateOperationsInput | number
    invite_code?: NullableStringFieldUpdateOperationsInput | string | null
    invite_code_bind_at?: NullableIntFieldUpdateOperationsInput | number | null
    referral?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type community_referralCreateManyCommunityInput = {
    id?: number
    expiration_date?: number
    state?: number
    code: string
    proportion?: number
    sol_address: string
    eth_address?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_revenueCreateManyCommunityInput = {
    id?: number
    token?: string
    total?: number
    proportion?: number
    payed?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referralUpdateWithoutCommunityInput = {
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referralUncheckedUpdateWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referralUncheckedUpdateManyWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    expiration_date?: IntFieldUpdateOperationsInput | number
    state?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    sol_address?: StringFieldUpdateOperationsInput | string
    eth_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_revenueUpdateWithoutCommunityInput = {
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_payed_logs?: community_referral_payed_logsUpdateManyWithoutCommunity_revenueNestedInput
    community_referral_revenue_logs?: community_referral_revenue_logsUpdateManyWithoutCommunity_revenueNestedInput
  }

  export type community_revenueUncheckedUpdateWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_referral_payed_logs?: community_referral_payed_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput
    community_referral_revenue_logs?: community_referral_revenue_logsUncheckedUpdateManyWithoutCommunity_revenueNestedInput
  }

  export type community_revenueUncheckedUpdateManyWithoutCommunityInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    proportion?: FloatFieldUpdateOperationsInput | number
    payed?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_payed_logsCreateManyCommunity_revenueInput = {
    id?: number
    token: string
    type: string
    amount: number
    signature: string
    network?: string
    payee_address: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_revenue_logsCreateManyCommunity_revenueInput = {
    id?: number
    user: string
    amount: number
    token: string
    type: string
    ref_code: string
    proportion: number
    signature: string
    network?: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type community_referral_payed_logsUpdateWithoutCommunity_revenueInput = {
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_payed_logsUncheckedUpdateWithoutCommunity_revenueInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_payed_logsUncheckedUpdateManyWithoutCommunity_revenueInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    payee_address?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_revenue_logsUpdateWithoutCommunity_revenueInput = {
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_revenue_logsUncheckedUpdateWithoutCommunity_revenueInput = {
    id?: IntFieldUpdateOperationsInput | number
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type community_referral_revenue_logsUncheckedUpdateManyWithoutCommunity_revenueInput = {
    id?: IntFieldUpdateOperationsInput | number
    user?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    ref_code?: StringFieldUpdateOperationsInput | string
    proportion?: FloatFieldUpdateOperationsInput | number
    signature?: StringFieldUpdateOperationsInput | string
    network?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}